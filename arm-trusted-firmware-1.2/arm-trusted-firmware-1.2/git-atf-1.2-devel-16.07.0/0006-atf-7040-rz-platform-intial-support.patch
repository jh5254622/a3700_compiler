From 6c8fe02364f64341466bac74e9289f286a52d23f Mon Sep 17 00:00:00 2001
From: "hayim@marvell.com" <hayim@marvell.com>
Date: Wed, 3 Feb 2016 14:10:58 +0200
Subject: [PATCH 006/239] atf: 7040-rz: platform intial support

- added platform definitions (images load address, offsets, etc.)
- makefile for 7040-rz platform
- mmu mapping

Change-Id: I901204c2e5a3ea25d847a55aea08eadfd1ba0e95
Signed-off-by: hayim@marvell.com <hayim@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27171
---
 .../marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c | 101 +++++++++++++
 plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S   |  80 +++++++++++
 plat/marvell/a8k/a7040_rz/include/platform_def.h   | 157 +++++++++++++++++++++
 plat/marvell/a8k/a7040_rz/plat_def.h               |  59 ++++++++
 plat/marvell/a8k/a7040_rz/platform.mk              |  77 ++++++++++
 5 files changed, 474 insertions(+)
 create mode 100644 plat/marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c
 create mode 100644 plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S
 create mode 100644 plat/marvell/a8k/a7040_rz/include/platform_def.h
 create mode 100644 plat/marvell/a8k/a7040_rz/plat_def.h
 create mode 100644 plat/marvell/a8k/a7040_rz/platform.mk

diff --git a/plat/marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c b/plat/marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c
new file mode 100644
index 0000000..0e64e06
--- /dev/null
+++ b/plat/marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c
@@ -0,0 +1,101 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <plat_marvell.h>
+
+
+/* MMU entry for internal (register) space access */
+#define MAP_DEVICE0	MAP_REGION_FLAT(DEVICE0_BASE,			\
+					DEVICE0_SIZE,			\
+					MT_DEVICE | MT_RW | MT_SECURE)
+
+/*
+ * Table of regions for various BL stages to map using the MMU.
+ */
+#if IMAGE_BL1
+const mmap_region_t plat_arm_mmap[] = {
+	MARVELL_MAP_SHARED_RAM,
+	MAP_DEVICE0,
+	{0}
+};
+#endif
+#if IMAGE_BL2
+const mmap_region_t plat_arm_mmap[] = {
+	MARVELL_MAP_SHARED_RAM,
+	MAP_DEVICE0,
+	MARVELL_MAP_NS_DRAM1,
+	{0}
+};
+#endif
+#if IMAGE_BL2U
+const mmap_region_t plat_arm_mmap[] = {
+	MAP_DEVICE0,
+	{0}
+};
+#endif
+#if IMAGE_BL31
+const mmap_region_t plat_arm_mmap[] = {
+	MARVELL_MAP_SHARED_RAM,
+	MAP_DEVICE0,
+	MARVELL_MAP_NS_DRAM1,
+	{0}
+};
+#endif
+#if IMAGE_BL32
+const mmap_region_t plat_arm_mmap[] = {
+	MAP_DEVICE0,
+	{0}
+};
+#endif
+
+ARM_CASSERT_MMAP
+
+
+/*
+ * Following is the default definition that always
+ * returns BL2 image details.
+ */
+image_desc_t bl2_img_desc;
+image_desc_t *bl1_plat_get_image_desc(unsigned int image_id)
+{
+	bl2_img_desc.image_id = BL2_IMAGE_ID;
+    bl2_img_desc.image_info.h.version = VERSION_1;
+    bl2_img_desc.image_info.h.attr = SET_EXEC_STATE(EXECUTABLE);
+    bl2_img_desc.image_info.image_base = BL2_BASE;
+    bl2_img_desc.ep_info.h.attr = SET_SEC_STATE(SECURE);
+    bl2_img_desc.ep_info.pc = BL2_BASE;
+
+	return &bl2_img_desc;
+}
+
diff --git a/plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S b/plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S
new file mode 100644
index 0000000..1d4f507
--- /dev/null
+++ b/plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S
@@ -0,0 +1,80 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
+* following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this list of conditions and the following
+* disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
+* disclaimer in the documentation and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used to endorse or promote products derived from this
+* software without specific prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <asm_macros.S>
+#include <platform_def.h>
+
+	.globl	plat_secondary_cold_boot_setup
+	.globl	plat_get_my_entrypoint
+	.globl	plat_is_my_cpu_primary
+
+	/* -----------------------------------------------------
+	 * void plat_secondary_cold_boot_setup (void);
+	 *
+	 * This function performs any platform specific actions
+	 * needed for a secondary cpu after a cold reset. Right
+	 * now this is a stub function.
+	 * -----------------------------------------------------
+	 */
+func plat_secondary_cold_boot_setup
+	mov	x0, #0
+	ret
+endfunc plat_secondary_cold_boot_setup
+
+	/* ---------------------------------------------------------------------
+	 * unsigned long plat_get_my_entrypoint (void);
+	 *
+	 * Main job of this routine is to distinguish between a cold and warm boot
+	 * For a cold boot, return 0.
+	 * For a warm boot, read the mailbox and return the address it contains.
+	 *
+	 * Note: warm boot is corrently not supported
+	 * ---------------------------------------------------------------------
+	 */
+func plat_get_my_entrypoint
+	/* Warm reset detection should be here */
+
+	/* Cold reset */
+	mov	x0, #0
+	ret
+endfunc plat_get_my_entrypoint
+
+	/* -----------------------------------------------------
+	 * unsigned int plat_is_my_cpu_primary (void);
+	 *
+	 * Find out whether the current cpu is the primary
+	 * cpu.
+	 * -----------------------------------------------------
+	 */
+func plat_is_my_cpu_primary
+	mrs	x0, mpidr_el1
+	and	x0, x0, #(MPIDR_CLUSTER_MASK | MPIDR_CPU_MASK)
+	cmp	x0, #MVEBU_PRIMARY_CPU
+	cset	w0, eq
+	ret
+endfunc plat_is_my_cpu_primary
diff --git a/plat/marvell/a8k/a7040_rz/include/platform_def.h b/plat/marvell/a8k/a7040_rz/include/platform_def.h
new file mode 100644
index 0000000..52ecf6c
--- /dev/null
+++ b/plat/marvell/a8k/a7040_rz/include/platform_def.h
@@ -0,0 +1,157 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#ifndef __PLATFORM_DEF_H__
+#define __PLATFORM_DEF_H__
+
+#include <board_marvell_def.h>
+#include <plat_def.h>
+#ifndef __ASSEMBLY__
+#include <stdio.h>
+#endif /* __ASSEMBLY__ */
+
+/*
+ * Most platform porting definitions provided by included headers
+ */
+
+/*
+ * DRAM Memory layout:
+				+-----------------------+
+				:						:
+				:		Linux			:
+0x04X00000 --->	+-----------------------+
+				|		BL3-3(u-boot)	|>>>>}>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
+				|-----------------------|	}										|
+				|		BL3-[0,1, 2]	|	}------------------------------------->	|
+				|-----------------------|	}									||	|
+				|		BL2				|	}->FIP (loaded by BootROM to DRAM)	||	|
+				|-----------------------|	}									||	|
+				|	FIP_TOC				|	}									||	|
+0x04120000 --->	|-----------------------|										||	|
+				|		BL1 (RO)		|										||	|
+0x04100000 --->	+-----------------------+										||	|
+				:						:										||	|
+				:	Trusted SRAM section:										\/	|
+0x04040000 --->	+-----------------------+	Replaced by BL2  +------------------+	|
+				|		BL1 (RW)		|	<<<<<<<<<<<<<<<<< |   BL3-1 NOBITS	 |	|
+0x04037000 --->	|-----------------------|	<<<<<<<<<<<<<<<<< |------------------|	|
+				|						|	<<<<<<<<<<<<<<<<< |   BL3-1 PROGBITS |	|
+0x04023000 --->	|-----------------------|					  +------------------+	|
+				|		BL2				|
+				|-----------------------|
+				|						|
+0x04001000 --->	|-----------------------|
+				|		Shared			|
+0x04000000 --->	+-----------------------+
+				:						:
+				:		Linux			:
+				:						:
+				|-----------------------|
+				|						|	U-Boot(BL3-3) Loaded by BL2				|
+				|		U-Boot			|	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
+0x00000000 --->	+-----------------------+
+
+Trusted SRAM section 0x4000000..0x4200000:
+----------------------------------------
+ * SRAM_BASE		= 0x4001000
+ * BL2_BASE			= 0x4006000
+ * BL2_LIMIT		= BL31_BASE
+ * BL31_BASE		= 0x4023000 = (64MB + 256KB - 0x1D000)
+ * BL31_PROGBITS_LIMIT	= BL1_RW_BASE
+ * BL1_RW_BASE		= 0x4037000 = (64MB + 256KB - 0x9000)
+ * BL1_RW_LIMIT		= BL31_LIMIT = 0x4040000
+ *
+ *
+ * PLAT_MARVELL_FIP_BASE	= 0x4120000
+ */
+
+/* since BL33 is loaded by BL2 (and validated by BL31) to DRAM offset 0,
+   it is allowed to load/copy images to 'NULL' pointers */
+#if defined(IMAGE_BL2) || defined(IMAGE_BL31)
+#define PLAT_ALLOW_ZERO_ADDR_COPY
+#endif
+
+#define PLAT_MARVELL_ATF_BASE			0x4000000
+#define PLAT_MARVELL_ATF_LOAD_ADDR		(PLAT_MARVELL_ATF_BASE + 0x100000)
+
+#define PLAT_MARVELL_FIP_BASE			(PLAT_MARVELL_ATF_LOAD_ADDR +0x20000)
+#define PLAT_MARVELL_FIP_MAX_SIZE		0x4000000
+
+#define PLAT_MARVELL_CLUSTER0_CORE_COUNT	4
+#define PLAT_MARVELL_CLUSTER1_CORE_COUNT	4
+
+#define PLAT_MARVELL_TRUSTED_ROM_BASE	PLAT_MARVELL_ATF_LOAD_ADDR	/* DRAM[2MB..66MB] is used as Trusted ROM */
+#define PLAT_MARVELL_TRUSTED_ROM_SIZE	0x04000000	/* 64 MB TODO: reduce this to minimum needed according to fip image size*/
+
+#define PLAT_MARVELL_TRUSTED_DRAM_BASE	0x06000000	/* TODO: update SCP (Secure PayLoad) Trusted DRAM actual BASE & size */
+#define PLAT_MARVELL_TRUSTED_DRAM_SIZE	0x02000000	/* 32 MB */
+
+/* GIC related definitions */
+#define PLAT_MARVELL_GICD_BASE			(MVEBU_REGS_BASE + MVEBU_GICD_BASE)
+#define PLAT_MARVELL_GICC_BASE			(MVEBU_REGS_BASE + MVEBU_GICC_BASE)
+
+#define PLAT_MARVELL_G0_IRQS			0
+#define PLAT_MARVELL_G1S_IRQS			0
+
+#define PLAT_MARVELL_SHARED_RAM_CACHED	1
+
+/*
+ * Load address of BL3-3 for this platform port
+ */
+#define PLAT_MARVELL_NS_IMAGE_OFFSET	0x0
+
+/* System Reference Clock*/
+#define PLAT_REF_CLK_IN_HZ				COUNTER_FREQUENCY
+
+/*
+ * PL011 related constants
+ */
+#define PLAT_MARVELL_BOOT_UART_BASE				(MVEBU_REGS_BASE + 0x512000)
+#define PLAT_MARVELL_BOOT_UART_CLK_IN_HZ		200000000
+
+#define PLAT_MARVELL_CRASH_UART_BASE			PLAT_MARVELL_BOOT_UART_BASE
+#define PLAT_MARVELL_CRASH_UART_CLK_IN_HZ		PLAT_MARVELL_BOOT_UART_CLK_IN_HZ
+
+#define PLAT_MARVELL_BL31_RUN_UART_BASE			PLAT_MARVELL_BOOT_UART_BASE
+#define PLAT_MARVELL_BL31_RUN_UART_CLK_IN_HZ	PLAT_MARVELL_BOOT_UART_CLK_IN_HZ
+
+/* Required platform porting definitions */
+#define PLAT_MAX_PWR_LVL				MPIDR_AFFLVL1
+
+/* System timer related constants */
+#define PLAT_MARVELL_NSTIMER_FRAME_ID		1
+
+
+#endif /* __PLATFORM_DEF_H__ */
+
diff --git a/plat/marvell/a8k/a7040_rz/plat_def.h b/plat/marvell/a8k/a7040_rz/plat_def.h
new file mode 100644
index 0000000..56ed687
--- /dev/null
+++ b/plat/marvell/a8k/a7040_rz/plat_def.h
@@ -0,0 +1,59 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
+* following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this list of conditions and the following
+* disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
+* disclaimer in the documentation and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used to endorse or promote products derived from this
+* software without specific prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#ifndef __MVEBU_DEF_H__
+#define __MVEBU_DEF_H__
+
+#include <arm_def.h>
+
+
+#define MVEBU_MAX_CPUS_PER_CLUSTER	4
+
+#define MVEBU_PRIMARY_CPU			0x0
+
+#define COUNTER_FREQUENCY			25000000
+
+#define MVEBU_REGS_BASE				0xF0000000
+
+/*******************************************************************************
+ * MVEBU memory map related constants
+ ******************************************************************************/
+
+/* Aggregate of all devices in the first GB */
+#define DEVICE0_BASE			MVEBU_REGS_BASE
+#define DEVICE0_SIZE			0x10000000
+
+/*******************************************************************************
+ * GIC-400 & interrupt handling related constants
+ ******************************************************************************/
+/* Base MVEBU compatible GIC memory map */
+#define MVEBU_GICD_BASE			0x210000
+#define MVEBU_GICC_BASE			0x220000
+
+#endif /* __MVEBU_DEF_H__ */
+
diff --git a/plat/marvell/a8k/a7040_rz/platform.mk b/plat/marvell/a8k/a7040_rz/platform.mk
new file mode 100644
index 0000000..77e00e8
--- /dev/null
+++ b/plat/marvell/a8k/a7040_rz/platform.mk
@@ -0,0 +1,77 @@
+#
+# ***************************************************************************
+# Copyright (C) 2016 Marvell International Ltd.
+# ***************************************************************************
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+# Redistributions of source code must retain the above copyright notice, this
+# list of conditions and the following disclaimer.
+#
+# Redistributions in binary form must reproduce the above copyright notice,
+# this list of conditions and the following disclaimer in the documentation
+# and/or other materials provided with the distribution.
+#
+# Neither the name of Marvell nor the names of its contributors may be used
+# to endorse or promote products derived from this software without specific
+# prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+
+PLAT_FAMILY			:= a8k
+PLAT_FAMILY_BASE	:= plat/marvell/$(PLAT_FAMILY)
+PLAT_SRC_BASE		:= $(PLAT_FAMILY_BASE)/$(PLAT)
+PLAT_INCLUDE_BASE	:= include/plat/marvell/$(PLAT_FAMILY)
+
+# This define is used in BL31 linker script to make sure
+# the PSCI code is alligned to 64KB
+$(eval $(call add_define,PLAT_MARVELL_7040_RZ1))
+
+MARVELL_GIC_SOURCES	:=	drivers/arm/gic/common/gic_common.c	\
+				drivers/arm/gic/v2/gicv2_main.c				\
+				drivers/arm/gic/v2/gicv2_helpers.c			\
+				plat/common/plat_gicv2.c
+
+ATF_INCLUDES		:=	-Iinclude/common/tbbr
+
+PLAT_INCLUDES		:=	-I$(PLAT_FAMILY_BASE)/$(PLAT)			\
+				-I$(PLAT_FAMILY_BASE)/$(PLAT)/include			\
+				-I$(PLAT_INCLUDE_BASE)/$(PLAT)/board/common		\
+				-I$(PLAT_INCLUDE_BASE)/common					\
+				-I$(PLAT_INCLUDE_BASE)/common/aarch64			\
+				-I$(PLAT_SRC_BASE)								\
+				${ATF_INCLUDES}
+
+PLAT_BL_COMMON_SOURCES	:=	$(PLAT_SRC_BASE)/aarch64/a7040_rz_common.c	\
+				drivers/console/console.S							\
+				drivers/ti/uart/16550_console.S
+
+BL1_SOURCES		+=	$(PLAT_SRC_BASE)/aarch64/plat_helpers.S	\
+				lib/cpus/aarch64/cortex_a72.S
+
+BL31_SOURCES		+=	lib/cpus/aarch64/cortex_a72.S		\
+				$(PLAT_SRC_BASE)/aarch64/plat_helpers.S		\
+				$(PLAT_SRC_BASE)/aarch64/plat_psci.S		\
+				$(PLAT_SRC_BASE)/plat_pm.c					\
+				$(PLAT_SRC_BASE)/plat_topology.c			\
+				plat/marvell/common/marvell_gicv2.c			\
+				${MARVELL_GIC_SOURCES}
+
+# Disable the PSCI platform compatibility layer (allows porting from Old Platform APIs
+# to the new APIs).
+# It is not needed since Marvell platform already used the new platform APIs.
+ENABLE_PLAT_COMPAT	:= 	0
+
+include plat/marvell/common/marvell_common.mk
-- 
1.9.1

