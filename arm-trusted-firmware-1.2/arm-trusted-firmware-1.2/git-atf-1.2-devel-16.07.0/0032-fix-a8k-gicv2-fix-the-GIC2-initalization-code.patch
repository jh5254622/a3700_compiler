From d36a519b2b2edcc0f283ff423a6d54f9d33f5f6a Mon Sep 17 00:00:00 2001
From: Konstantin Porotchkin <kostap@marvell.com>
Date: Thu, 25 Feb 2016 16:53:16 +0200
Subject: [PATCH 032/239] fix: a8k: gicv2: fix the GIC2 initalization code

- removed arch specific code (gic_64.S) which was ported from u-boot
- switch to ATF standard GIC intialization (per CPU)

Change-Id: Ia686507cbc030439911880fa3840ae9bd8d1bb06
Signed-off-by: Konstantin Porotchkin <kostap@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27900
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
---
 plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S    |  11 +-
 plat/marvell/a8k/a7040_rz/include/platform_def.h |   5 +-
 plat/marvell/a8k/a7040_rz/platform.mk            |   3 +
 plat/marvell/a8k/apn806/platform.mk              |   3 +
 plat/marvell/common/aarch64/gic_64.S             | 177 -----------------------
 plat/marvell/common/marvell_bl31_setup.c         |   6 -
 plat/marvell/common/marvell_common.mk            |   5 -
 7 files changed, 11 insertions(+), 199 deletions(-)
 delete mode 100644 plat/marvell/common/aarch64/gic_64.S

diff --git a/plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S b/plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S
index 88872bb..901d949 100644
--- a/plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S
+++ b/plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S
@@ -114,14 +114,9 @@ _armada8k_cpu_entry:
 	msr	cpacr_el1, x0			/* Enable FP/SIMD */
 0:
 
-#if defined(CONFIG_GICV3)
-	ldr	x0, =PLAT_MARVELL_GICR_BASE
-	bl	gic_init_secure_percpu
-#elif defined(CONFIG_GICV2)
-	ldr	x0, =PLAT_MARVELL_GICD_BASE
-	ldr	x1, =PLAT_MARVELL_GICC_BASE
-	bl	gic_init_secure_percpu
-#endif
+	bl	gicv2_pcpu_distif_init
+
+	bl	gicv2_cpuif_enable
 
 	bl	psci_build_stack
 
diff --git a/plat/marvell/a8k/a7040_rz/include/platform_def.h b/plat/marvell/a8k/a7040_rz/include/platform_def.h
index 52ecf6c..a26322a 100644
--- a/plat/marvell/a8k/a7040_rz/include/platform_def.h
+++ b/plat/marvell/a8k/a7040_rz/include/platform_def.h
@@ -121,8 +121,8 @@ Trusted SRAM section 0x4000000..0x4200000:
 #define PLAT_MARVELL_GICD_BASE			(MVEBU_REGS_BASE + MVEBU_GICD_BASE)
 #define PLAT_MARVELL_GICC_BASE			(MVEBU_REGS_BASE + MVEBU_GICC_BASE)
 
-#define PLAT_MARVELL_G0_IRQS			0
-#define PLAT_MARVELL_G1S_IRQS			0
+#define PLAT_MARVELL_G0_IRQS			MARVELL_G1S_IRQS
+#define PLAT_MARVELL_G1S_IRQS			MARVELL_G0_IRQS
 
 #define PLAT_MARVELL_SHARED_RAM_CACHED	1
 
@@ -154,4 +154,3 @@ Trusted SRAM section 0x4000000..0x4200000:
 
 
 #endif /* __PLATFORM_DEF_H__ */
-
diff --git a/plat/marvell/a8k/a7040_rz/platform.mk b/plat/marvell/a8k/a7040_rz/platform.mk
index 5b0ec88..9256966 100644
--- a/plat/marvell/a8k/a7040_rz/platform.mk
+++ b/plat/marvell/a8k/a7040_rz/platform.mk
@@ -41,6 +41,9 @@ CALL_DOIMAGE		:= y
 # the PSCI code is alligned to 64KB
 $(eval $(call add_define,PLAT_MARVELL_7040_RZ1))
 
+# Enable GICV2
+$(eval $(call add_define,CONFIG_GICV2))
+
 MARVELL_GIC_SOURCES	:=	drivers/arm/gic/common/gic_common.c	\
 				drivers/arm/gic/v2/gicv2_main.c				\
 				drivers/arm/gic/v2/gicv2_helpers.c			\
diff --git a/plat/marvell/a8k/apn806/platform.mk b/plat/marvell/a8k/apn806/platform.mk
index 926aa28..c022f78 100644
--- a/plat/marvell/a8k/apn806/platform.mk
+++ b/plat/marvell/a8k/apn806/platform.mk
@@ -44,6 +44,9 @@ CALL_DOIMAGE		:= y
 # the PSCI code is alligned to 64KB
 $(eval $(call add_define,PLAT_MARVELL_7040_RZ1))
 
+# Enable GICV2
+$(eval $(call add_define,CONFIG_GICV2))
+
 MARVELL_GIC_SOURCES	:=	drivers/arm/gic/common/gic_common.c	\
 				drivers/arm/gic/v2/gicv2_main.c				\
 				drivers/arm/gic/v2/gicv2_helpers.c			\
diff --git a/plat/marvell/common/aarch64/gic_64.S b/plat/marvell/common/aarch64/gic_64.S
deleted file mode 100644
index bac5da1..0000000
--- a/plat/marvell/common/aarch64/gic_64.S
+++ /dev/null
@@ -1,177 +0,0 @@
-/*
- * GIC Initialization Routines.
- *
- * (C) Copyright 2013
- * David Feng <fenghua@phytium.com.cn>
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#include <asm/linkage.h>
-#include <gicv2.h>
-#include <gic_common.h>
-
-#define GICD_IGROUPRn		0x0080
-#define GICD_IGROUPMODRn	0x0d00
-#define GICD_ISENABLERn		0x0100
-
-
-/*************************************************************************
- *
- * void gic_init_secure(DistributorBase);
- *
- * Initialize secure copy of GIC at EL3.
- *
- *************************************************************************/
-ENTRY(gic_init_secure)
-	/*
-	 * Initialize Distributor
-	 * x0: Distributor Base
-	 */
-#if defined(CONFIG_GICV3)
-	mov	w9, #0x37		/* EnableGrp0 | EnableGrp1NS */
-					/* EnableGrp1S | ARE_S | ARE_NS */
-	str	w9, [x0, GICD_CTLR]	/* Secure GICD_CTLR */
-	ldr	w9, [x0, GICD_TYPER]
-	and	w10, w9, #0x1f		/* ITLinesNumber */
-	cbz	w10, 1f			/* No SPIs */
-	add	x11, x0, (GICD_IGROUPRn + 4)
-	add	x12, x0, (GICD_IGROUPMODRn + 4)
-	mov	w9, #~0
-0:	str	w9, [x11], #0x4
-	str	wzr, [x12], #0x4	/* Config SPIs as Group1NS */
-	sub	w10, w10, #0x1
-	cbnz	w10, 0b
-#elif defined(CONFIG_GICV2)
-	mov	w9, #0x3		/* EnableGrp0 | EnableGrp1 */
-	str	w9, [x0, GICD_CTLR]	/* Secure GICD_CTLR */
-	ldr	w9, [x0, GICD_TYPER]
-	and	w10, w9, #0x1f		/* ITLinesNumber */
-	cbz	w10, 1f			/* No SPIs */
-	add	x11, x0, (GICD_IGROUPRn + 4)
-	mov	w9, #~0			/* Config SPIs as Grp1 */
-0:	str	w9, [x11], #0x4
-	sub	w10, w10, #0x1
-	cbnz	w10, 0b
-#endif
-1:
-	ret
-ENDPROC(gic_init_secure)
-
-/* insert gic_init_secure_percpu function to secure section - part of the PSCI FW */
-.pushsection ._secure.text, "ax"
-
-/*************************************************************************
- * For Gicv2:
- * void gic_init_secure_percpu(DistributorBase, CpuInterfaceBase);
- * For Gicv3:
- * void gic_init_secure_percpu(ReDistributorBase);
- *
- * Initialize secure copy of GIC at EL3.
- *
- *************************************************************************/
-ENTRY(gic_init_secure_percpu)
-#if defined(CONFIG_GICV3)
-	/*
-	 * Initialize ReDistributor
-	 * x0: ReDistributor Base
-	 */
-	mrs	x10, mpidr_el1
-	lsr	x9, x10, #32
-	bfi	x10, x9, #24, #8	/* w10 is aff3:aff2:aff1:aff0 */
-	mov	x9, x0
-1:	ldr	x11, [x9, GICR_TYPER]
-	lsr	x11, x11, #32		/* w11 is aff3:aff2:aff1:aff0 */
-	cmp	w10, w11
-	b.eq	2f
-	add	x9, x9, #(2 << 16)
-	b	1b
-
-	/* x9: ReDistributor Base Address of Current CPU */
-2:	mov	w10, #~0x2
-	ldr	w11, [x9, GICR_WAKER]
-	and	w11, w11, w10		/* Clear ProcessorSleep */
-	str	w11, [x9, GICR_WAKER]
-	dsb	st
-	isb
-3:	ldr	w10, [x9, GICR_WAKER]
-	tbnz	w10, #2, 3b		/* Wait Children be Alive */
-
-	add	x10, x9, #(1 << 16)	/* SGI_Base */
-	mov	w11, #~0
-	str	w11, [x10, GICR_IGROUPRn]
-	str	wzr, [x10, GICR_IGROUPMODRn]	/* SGIs|PPIs Group1NS */
-	mov	w11, #0x1		/* Enable SGI 0 */
-	str	w11, [x10, GICR_ISENABLERn]
-
-	/* Initialize Cpu Interface */
-	mrs	x10, ICC_SRE_EL3
-	orr	x10, x10, #0xf		/* SRE & Disable IRQ/FIQ Bypass & */
-					/* Allow EL2 access to ICC_SRE_EL2 */
-	msr	ICC_SRE_EL3, x10
-	isb
-
-	mrs	x10, ICC_SRE_EL2
-	orr	x10, x10, #0xf		/* SRE & Disable IRQ/FIQ Bypass & */
-					/* Allow EL1 access to ICC_SRE_EL1 */
-	msr	ICC_SRE_EL2, x10
-	isb
-
-	mov	x10, #0x3		/* EnableGrp1NS | EnableGrp1S */
-	msr	ICC_IGRPEN1_EL3, x10
-	isb
-
-	msr	ICC_CTLR_EL3, xzr
-	isb
-
-	msr	ICC_CTLR_EL1, xzr	/* NonSecure ICC_CTLR_EL1 */
-	isb
-
-	mov	x10, #0x1 << 7		/* Non-Secure access to ICC_PMR_EL1 */
-	msr	ICC_PMR_EL1, x10
-	isb
-#elif defined(CONFIG_GICV2)
-	/*
-	 * Initialize SGIs and PPIs
-	 * x0: Distributor Base
-	 * x1: Cpu Interface Base
-	 */
-	mov	w9, #~0			/* Config SGIs and PPIs as Grp1 */
-	str	w9, [x0, GICD_IGROUPRn]	/* GICD_IGROUPR0 */
-	mov	w9, #0x1		/* Enable SGI 0 */
-	str	w9, [x0, GICD_ISENABLERn]
-
-	/* Initialize Cpu Interface */
-	mov	w9, #0x1e7		/* Disable IRQ/FIQ Bypass & */
-					/* Enable Ack Group1 Interrupt & */
-					/* EnableGrp0 & EnableGrp1 */
-	str	w9, [x1, GICC_CTLR]	/* Secure GICC_CTLR */
-
-	mov	w9, #0x1 << 7		/* Non-Secure access to GICC_PMR */
-	str	w9, [x1, GICC_PMR]
-#endif
-	ret
-ENDPROC(gic_init_secure_percpu)
-
-
-/*************************************************************************
- * For Gicv2:
- * void gic_kick_secondary_cpus(DistributorBase);
- * For Gicv3:
- * void gic_kick_secondary_cpus(void);
- *
- *************************************************************************/
-ENTRY(gic_kick_secondary_cpus)
-#if defined(CONFIG_GICV3)
-	mov	x9, #(1 << 40)
-	msr	ICC_ASGI1R_EL1, x9
-	isb
-#elif defined(CONFIG_GICV2)
-	mov	w9, #0x8000
-	movk	w9, #0x100, lsl #16
-	str	w9, [x0, GICD_SGIR]
-#endif
-	ret
-ENDPROC(gic_kick_secondary_cpus)
-
-
diff --git a/plat/marvell/common/marvell_bl31_setup.c b/plat/marvell/common/marvell_bl31_setup.c
index 5115502..6761176 100644
--- a/plat/marvell/common/marvell_bl31_setup.c
+++ b/plat/marvell/common/marvell_bl31_setup.c
@@ -112,7 +112,6 @@ static entry_point_info_t bl33_image_ep_info;
 #pragma weak plat_get_syscnt_freq
 
 extern void enable_affinity(void);
-extern void gic_init_secure_percpu(unsigned int distributor_base, unsigned int c_base);
 
 /*******************************************************************************
  * Return a pointer to the 'entry_point_info' structure of the next image for the
@@ -233,11 +232,6 @@ void marvell_bl31_platform_setup(void)
 	plat_marvell_gic_driver_init();
 	plat_marvell_gic_init();
 
-	/* Initialize SGIs and PPIs */
-	INFO("Initialize SGIs and PPIs\n");
-	gic_init_secure_percpu(PLAT_MARVELL_GICD_BASE, PLAT_MARVELL_GICC_BASE);
-
-	INFO("Enable Affinity\n");
 	enable_affinity();
 }
 
diff --git a/plat/marvell/common/marvell_common.mk b/plat/marvell/common/marvell_common.mk
index ffdf69a..a5ddd52 100644
--- a/plat/marvell/common/marvell_common.mk
+++ b/plat/marvell/common/marvell_common.mk
@@ -65,12 +65,7 @@ BL31_SOURCES		+=	$(MARVELL_PLAT_BASE)/common/marvell_bl31_setup.c		\
 				$(MARVELL_PLAT_BASE)/common/marvell_topology.c		\
 				plat/common/aarch64/platform_mp_stack.S				\
 				plat/common/aarch64/plat_psci_common.c 				\
-				$(MARVELL_PLAT_BASE)/common/aarch64/gic_64.S		\
 				$(MARVELL_PLAT_BASE)/common/aarch64/transition.S
 
-# Enable GICV2
-$(eval $(call add_define,CONFIG_GICV2))
-
 # PSCI functionality
 $(eval $(call add_define,CONFIG_ARM64))
-
-- 
1.9.1

