From cd26a52bfb3c32c4549a156bb50ebe44371bd9ed Mon Sep 17 00:00:00 2001
From: Haim Boot <hayim@marvell.com>
Date: Tue, 15 Mar 2016 01:34:22 +0200
Subject: [PATCH 064/239] 70x0: initial platform support

- add new platform folder and Makefile
- set 70x0 is primary source so not 7040_rz & apn806
  use 70x0 sources
- specific soc functionality/configuration (such as rfu) will
  be pushed in upcoming patches

Change-Id: I04ac35ca3196c077387b6f01e8cfcf5f7605c1cf
Signed-off-by: Haim Boot <hayim@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/28239
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 .../plat/marvell/a8k/a7040_rz/board/apn806_setup.h |  39 ---
 .../a8k/a7040_rz/board/common/board_marvell_def.h  | 131 ---------
 .../plat/marvell/a8k/a7040_rz/board/cp110_setup.h  |  39 ---
 .../plat/marvell/a8k/a7040_rz/board/plat_config.h  |  55 ----
 .../plat/marvell/a8k/a70x0/board/apn806_setup.h    |  39 +++
 .../a8k/a70x0/board/common/board_marvell_def.h     | 131 +++++++++
 include/plat/marvell/a8k/a70x0/board/cp110_setup.h |  39 +++
 include/plat/marvell/a8k/a70x0/board/plat_config.h |  55 ++++
 .../marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c | 110 --------
 plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S   |  80 ------
 plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S      | 299 ---------------------
 plat/marvell/a8k/a7040_rz/apn806_setup.c           |  46 ----
 .../a8k/a7040_rz/board/marvell_plat_config.c       | 121 ---------
 plat/marvell/a8k/a7040_rz/cp110_setup.c            | 136 ----------
 plat/marvell/a8k/a7040_rz/dram_port.c              |  75 ------
 plat/marvell/a8k/a7040_rz/include/plat_macros.S    |  41 ---
 plat/marvell/a8k/a7040_rz/include/platform_def.h   | 167 ------------
 plat/marvell/a8k/a7040_rz/plat_bl1_setup.c         |  49 ----
 plat/marvell/a8k/a7040_rz/plat_bl31_setup.c        |  49 ----
 plat/marvell/a8k/a7040_rz/plat_def.h               |  70 -----
 plat/marvell/a8k/a7040_rz/plat_pm.c                | 160 -----------
 plat/marvell/a8k/a7040_rz/plat_topology.c          |  66 -----
 plat/marvell/a8k/a7040_rz/platform.mk              |  19 +-
 plat/marvell/a8k/a70x0/aarch64/a7040_rz_common.c   | 110 ++++++++
 plat/marvell/a8k/a70x0/aarch64/plat_helpers.S      |  86 ++++++
 plat/marvell/a8k/a70x0/aarch64/plat_psci.S         | 299 +++++++++++++++++++++
 plat/marvell/a8k/a70x0/apn806_setup.c              |  46 ++++
 plat/marvell/a8k/a70x0/board/marvell_plat_config.c | 121 +++++++++
 plat/marvell/a8k/a70x0/cp110_setup.c               | 136 ++++++++++
 plat/marvell/a8k/a70x0/dram_port.c                 |  75 ++++++
 plat/marvell/a8k/a70x0/include/plat_macros.S       |  47 ++++
 plat/marvell/a8k/a70x0/include/platform_def.h      | 169 ++++++++++++
 plat/marvell/a8k/a70x0/plat_bl1_setup.c            |  49 ++++
 plat/marvell/a8k/a70x0/plat_bl31_setup.c           |  49 ++++
 plat/marvell/a8k/a70x0/plat_def.h                  |  76 ++++++
 plat/marvell/a8k/a70x0/plat_pm.c                   | 160 +++++++++++
 plat/marvell/a8k/a70x0/plat_topology.c             |  66 +++++
 plat/marvell/a8k/a70x0/platform.mk                 | 102 +++++++
 plat/marvell/a8k/apn806/platform.mk                |   6 +-
 39 files changed, 1867 insertions(+), 1746 deletions(-)
 delete mode 100644 include/plat/marvell/a8k/a7040_rz/board/apn806_setup.h
 delete mode 100644 include/plat/marvell/a8k/a7040_rz/board/common/board_marvell_def.h
 delete mode 100644 include/plat/marvell/a8k/a7040_rz/board/cp110_setup.h
 delete mode 100644 include/plat/marvell/a8k/a7040_rz/board/plat_config.h
 create mode 100644 include/plat/marvell/a8k/a70x0/board/apn806_setup.h
 create mode 100644 include/plat/marvell/a8k/a70x0/board/common/board_marvell_def.h
 create mode 100644 include/plat/marvell/a8k/a70x0/board/cp110_setup.h
 create mode 100644 include/plat/marvell/a8k/a70x0/board/plat_config.h
 delete mode 100644 plat/marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c
 delete mode 100644 plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S
 delete mode 100644 plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S
 delete mode 100644 plat/marvell/a8k/a7040_rz/apn806_setup.c
 delete mode 100644 plat/marvell/a8k/a7040_rz/board/marvell_plat_config.c
 delete mode 100644 plat/marvell/a8k/a7040_rz/cp110_setup.c
 delete mode 100644 plat/marvell/a8k/a7040_rz/dram_port.c
 delete mode 100644 plat/marvell/a8k/a7040_rz/include/plat_macros.S
 delete mode 100644 plat/marvell/a8k/a7040_rz/include/platform_def.h
 delete mode 100644 plat/marvell/a8k/a7040_rz/plat_bl1_setup.c
 delete mode 100644 plat/marvell/a8k/a7040_rz/plat_bl31_setup.c
 delete mode 100644 plat/marvell/a8k/a7040_rz/plat_def.h
 delete mode 100644 plat/marvell/a8k/a7040_rz/plat_pm.c
 delete mode 100644 plat/marvell/a8k/a7040_rz/plat_topology.c
 create mode 100644 plat/marvell/a8k/a70x0/aarch64/a7040_rz_common.c
 create mode 100644 plat/marvell/a8k/a70x0/aarch64/plat_helpers.S
 create mode 100644 plat/marvell/a8k/a70x0/aarch64/plat_psci.S
 create mode 100644 plat/marvell/a8k/a70x0/apn806_setup.c
 create mode 100644 plat/marvell/a8k/a70x0/board/marvell_plat_config.c
 create mode 100644 plat/marvell/a8k/a70x0/cp110_setup.c
 create mode 100644 plat/marvell/a8k/a70x0/dram_port.c
 create mode 100644 plat/marvell/a8k/a70x0/include/plat_macros.S
 create mode 100644 plat/marvell/a8k/a70x0/include/platform_def.h
 create mode 100644 plat/marvell/a8k/a70x0/plat_bl1_setup.c
 create mode 100644 plat/marvell/a8k/a70x0/plat_bl31_setup.c
 create mode 100644 plat/marvell/a8k/a70x0/plat_def.h
 create mode 100644 plat/marvell/a8k/a70x0/plat_pm.c
 create mode 100644 plat/marvell/a8k/a70x0/plat_topology.c
 create mode 100644 plat/marvell/a8k/a70x0/platform.mk

diff --git a/include/plat/marvell/a8k/a7040_rz/board/apn806_setup.h b/include/plat/marvell/a8k/a7040_rz/board/apn806_setup.h
deleted file mode 100644
index feffd05..0000000
--- a/include/plat/marvell/a8k/a7040_rz/board/apn806_setup.h
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-#ifndef __APN806_SETUP_H__
-#define __APN806_SETUP_H__
-
-void apn806_init(void);
-
-#endif /* __APN806_SETUP_H__ */
diff --git a/include/plat/marvell/a8k/a7040_rz/board/common/board_marvell_def.h b/include/plat/marvell/a8k/a7040_rz/board/common/board_marvell_def.h
deleted file mode 100644
index 945f763..0000000
--- a/include/plat/marvell/a8k/a7040_rz/board/common/board_marvell_def.h
+++ /dev/null
@@ -1,131 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-/*
- * Copyright (c) 2015, ARM Limited and Contributors. All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are met:
- *
- * Redistributions of source code must retain the above copyright notice, this
- * list of conditions and the following disclaimer.
- *
- * Redistributions in binary form must reproduce the above copyright notice,
- * this list of conditions and the following disclaimer in the documentation
- * and/or other materials provided with the distribution.
- *
- * Neither the name of ARM nor the names of its contributors may be used
- * to endorse or promote products derived from this software without specific
- * prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- */
-#ifndef __BOARD_MARVELL_DEF_H__
-#define __BOARD_MARVELL_DEF_H__
-
-/*
- * Required platform porting definitions common to all ARM
- * development platforms
- */
-
-/* Size of cacheable stacks */
-#if DEBUG_XLAT_TABLE
-# define PLATFORM_STACK_SIZE 0x800
-#elif IMAGE_BL1
-#if TRUSTED_BOARD_BOOT
-# define PLATFORM_STACK_SIZE 0x1000
-#else
-# define PLATFORM_STACK_SIZE 0x440
-#endif
-#elif IMAGE_BL2
-# if TRUSTED_BOARD_BOOT
-#  define PLATFORM_STACK_SIZE 0x1000
-# else
-#  define PLATFORM_STACK_SIZE 0x400
-# endif
-#elif IMAGE_BL31
-# define PLATFORM_STACK_SIZE 0x400
-#endif
-
-/*
- * PLAT_MARVELL_MMAP_ENTRIES depends on the number of entries in the
- * plat_arm_mmap array defined for each BL stage.
- */
-#if IMAGE_BLE
-#  define PLAT_MARVELL_MMAP_ENTRIES	3
-#endif
-#if IMAGE_BL1
-#  if TRUSTED_BOARD_BOOT
-#   define PLAT_MARVELL_MMAP_ENTRIES	7
-#  else
-#   define PLAT_MARVELL_MMAP_ENTRIES	6
-#  endif	/* TRUSTED_BOARD_BOOT */
-#endif
-#if IMAGE_BL2
-#  define PLAT_MARVELL_MMAP_ENTRIES		8
-#endif
-#if IMAGE_BL31
-#define PLAT_MARVELL_MMAP_ENTRIES		5
-#endif
-
-/*
- * Platform specific page table and MMU setup constants
- */
-#if IMAGE_BL1
-#define MAX_XLAT_TABLES			4
-#elif IMAGE_BLE
-#  define MAX_XLAT_TABLES		4
-#elif IMAGE_BL2
-#  define MAX_XLAT_TABLES		4
-#elif IMAGE_BL31
-# define MAX_XLAT_TABLES		4
-#endif
-
-
-#define MAX_IO_DEVICES			3
-#define MAX_IO_HANDLES			4
-
-#define PLAT_MARVELL_TRUSTED_SRAM_SIZE	0x40000	/* 256 KB */
-
-
-#endif /* __BOARD_MARVELL_DEF_H__ */
diff --git a/include/plat/marvell/a8k/a7040_rz/board/cp110_setup.h b/include/plat/marvell/a8k/a7040_rz/board/cp110_setup.h
deleted file mode 100644
index 70d4604..0000000
--- a/include/plat/marvell/a8k/a7040_rz/board/cp110_setup.h
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-#ifndef __PLAT_CP110_H__
-#define __PLAT_CP110_H__
-
-void cp110_init(void);
-
-#endif /* __PLAT_CP110_H__ */
diff --git a/include/plat/marvell/a8k/a7040_rz/board/plat_config.h b/include/plat/marvell/a8k/a7040_rz/board/plat_config.h
deleted file mode 100644
index f64de55..0000000
--- a/include/plat/marvell/a8k/a7040_rz/board/plat_config.h
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-#ifndef __BOARD_CONFIG_H__
-#define __BOARD_CONFIG_H__
-
-#include <rfu.h>
-#include <iob.h>
-#include <ccu.h>
-
-
-uintptr_t marvell_get_rfu_reg_offs(void);
-uintptr_t marvell_get_iob_reg_offs(void);
-int marvell_get_iob_max_win(void);
-uintptr_t marvell_get_ccu_reg_offs(void);
-int marvell_get_ccu_max_win(void);
-
-
-/* The functions below are defined as Weak and may be overridden in specific Marvell
-   standard platform */
-int marvell_get_rfu_memory_map(struct rfu_win **win, uint32_t *size);
-int marvell_get_iob_memory_map(struct iob_win **win, uint32_t *size);
-int marvell_get_ccu_memory_map(struct ccu_win **win, uint32_t *size);
-
-#endif /* __BOARD_CONFIG_H__ */
diff --git a/include/plat/marvell/a8k/a70x0/board/apn806_setup.h b/include/plat/marvell/a8k/a70x0/board/apn806_setup.h
new file mode 100644
index 0000000..feffd05
--- /dev/null
+++ b/include/plat/marvell/a8k/a70x0/board/apn806_setup.h
@@ -0,0 +1,39 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+#ifndef __APN806_SETUP_H__
+#define __APN806_SETUP_H__
+
+void apn806_init(void);
+
+#endif /* __APN806_SETUP_H__ */
diff --git a/include/plat/marvell/a8k/a70x0/board/common/board_marvell_def.h b/include/plat/marvell/a8k/a70x0/board/common/board_marvell_def.h
new file mode 100644
index 0000000..945f763
--- /dev/null
+++ b/include/plat/marvell/a8k/a70x0/board/common/board_marvell_def.h
@@ -0,0 +1,131 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+/*
+ * Copyright (c) 2015, ARM Limited and Contributors. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * Redistributions of source code must retain the above copyright notice, this
+ * list of conditions and the following disclaimer.
+ *
+ * Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * Neither the name of ARM nor the names of its contributors may be used
+ * to endorse or promote products derived from this software without specific
+ * prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+#ifndef __BOARD_MARVELL_DEF_H__
+#define __BOARD_MARVELL_DEF_H__
+
+/*
+ * Required platform porting definitions common to all ARM
+ * development platforms
+ */
+
+/* Size of cacheable stacks */
+#if DEBUG_XLAT_TABLE
+# define PLATFORM_STACK_SIZE 0x800
+#elif IMAGE_BL1
+#if TRUSTED_BOARD_BOOT
+# define PLATFORM_STACK_SIZE 0x1000
+#else
+# define PLATFORM_STACK_SIZE 0x440
+#endif
+#elif IMAGE_BL2
+# if TRUSTED_BOARD_BOOT
+#  define PLATFORM_STACK_SIZE 0x1000
+# else
+#  define PLATFORM_STACK_SIZE 0x400
+# endif
+#elif IMAGE_BL31
+# define PLATFORM_STACK_SIZE 0x400
+#endif
+
+/*
+ * PLAT_MARVELL_MMAP_ENTRIES depends on the number of entries in the
+ * plat_arm_mmap array defined for each BL stage.
+ */
+#if IMAGE_BLE
+#  define PLAT_MARVELL_MMAP_ENTRIES	3
+#endif
+#if IMAGE_BL1
+#  if TRUSTED_BOARD_BOOT
+#   define PLAT_MARVELL_MMAP_ENTRIES	7
+#  else
+#   define PLAT_MARVELL_MMAP_ENTRIES	6
+#  endif	/* TRUSTED_BOARD_BOOT */
+#endif
+#if IMAGE_BL2
+#  define PLAT_MARVELL_MMAP_ENTRIES		8
+#endif
+#if IMAGE_BL31
+#define PLAT_MARVELL_MMAP_ENTRIES		5
+#endif
+
+/*
+ * Platform specific page table and MMU setup constants
+ */
+#if IMAGE_BL1
+#define MAX_XLAT_TABLES			4
+#elif IMAGE_BLE
+#  define MAX_XLAT_TABLES		4
+#elif IMAGE_BL2
+#  define MAX_XLAT_TABLES		4
+#elif IMAGE_BL31
+# define MAX_XLAT_TABLES		4
+#endif
+
+
+#define MAX_IO_DEVICES			3
+#define MAX_IO_HANDLES			4
+
+#define PLAT_MARVELL_TRUSTED_SRAM_SIZE	0x40000	/* 256 KB */
+
+
+#endif /* __BOARD_MARVELL_DEF_H__ */
diff --git a/include/plat/marvell/a8k/a70x0/board/cp110_setup.h b/include/plat/marvell/a8k/a70x0/board/cp110_setup.h
new file mode 100644
index 0000000..70d4604
--- /dev/null
+++ b/include/plat/marvell/a8k/a70x0/board/cp110_setup.h
@@ -0,0 +1,39 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+#ifndef __PLAT_CP110_H__
+#define __PLAT_CP110_H__
+
+void cp110_init(void);
+
+#endif /* __PLAT_CP110_H__ */
diff --git a/include/plat/marvell/a8k/a70x0/board/plat_config.h b/include/plat/marvell/a8k/a70x0/board/plat_config.h
new file mode 100644
index 0000000..f64de55
--- /dev/null
+++ b/include/plat/marvell/a8k/a70x0/board/plat_config.h
@@ -0,0 +1,55 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+#ifndef __BOARD_CONFIG_H__
+#define __BOARD_CONFIG_H__
+
+#include <rfu.h>
+#include <iob.h>
+#include <ccu.h>
+
+
+uintptr_t marvell_get_rfu_reg_offs(void);
+uintptr_t marvell_get_iob_reg_offs(void);
+int marvell_get_iob_max_win(void);
+uintptr_t marvell_get_ccu_reg_offs(void);
+int marvell_get_ccu_max_win(void);
+
+
+/* The functions below are defined as Weak and may be overridden in specific Marvell
+   standard platform */
+int marvell_get_rfu_memory_map(struct rfu_win **win, uint32_t *size);
+int marvell_get_iob_memory_map(struct iob_win **win, uint32_t *size);
+int marvell_get_ccu_memory_map(struct ccu_win **win, uint32_t *size);
+
+#endif /* __BOARD_CONFIG_H__ */
diff --git a/plat/marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c b/plat/marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c
deleted file mode 100644
index 38486a6..0000000
--- a/plat/marvell/a8k/a7040_rz/aarch64/a7040_rz_common.c
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#include <plat_marvell.h>
-
-
-/* MMU entry for internal (register) space access */
-#define MAP_DEVICE0	MAP_REGION_FLAT(DEVICE0_BASE,			\
-					DEVICE0_SIZE,			\
-					MT_DEVICE | MT_RW | MT_SECURE)
-
-/*
- * Table of regions for various BL stages to map using the MMU.
- */
-#if IMAGE_BL1
-const mmap_region_t plat_arm_mmap[] = {
-	MARVELL_MAP_SHARED_RAM,
-	MAP_DEVICE0,
-	{0}
-};
-#endif
-#if IMAGE_BL2
-const mmap_region_t plat_arm_mmap[] = {
-	MARVELL_MAP_SHARED_RAM,
-	MAP_DEVICE0,
-	MARVELL_MAP_NS_DRAM1,
-	{0}
-};
-#endif
-
-#if IMAGE_BL2U
-const mmap_region_t plat_arm_mmap[] = {
-	MAP_DEVICE0,
-	{0}
-};
-#endif
-
-#if IMAGE_BLE
-const mmap_region_t plat_arm_mmap[] = {
-	MAP_DEVICE0,
-	{0}
-};
-#endif
-
-#if IMAGE_BL31
-const mmap_region_t plat_arm_mmap[] = {
-	MARVELL_MAP_SHARED_RAM,
-	MAP_DEVICE0,
-	MARVELL_MAP_NS_DRAM1,
-	{0}
-};
-#endif
-#if IMAGE_BL32
-const mmap_region_t plat_arm_mmap[] = {
-	MAP_DEVICE0,
-	{0}
-};
-#endif
-
-ARM_CASSERT_MMAP
-
-
-/*
- * Following is the default definition that always
- * returns BL2 image details.
- */
-image_desc_t bl2_img_desc;
-image_desc_t *bl1_plat_get_image_desc(unsigned int image_id)
-{
-	bl2_img_desc.image_id = BL2_IMAGE_ID;
-    bl2_img_desc.image_info.h.version = VERSION_1;
-    bl2_img_desc.image_info.h.attr = SET_EXEC_STATE(EXECUTABLE);
-    bl2_img_desc.image_info.image_base = BL2_BASE;
-    bl2_img_desc.ep_info.h.attr = SET_SEC_STATE(SECURE);
-    bl2_img_desc.ep_info.pc = BL2_BASE;
-
-	return &bl2_img_desc;
-}
-
diff --git a/plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S b/plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S
deleted file mode 100644
index 1d4f507..0000000
--- a/plat/marvell/a8k/a7040_rz/aarch64/plat_helpers.S
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
-* following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this list of conditions and the following
-* disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-* disclaimer in the documentation and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used to endorse or promote products derived from this
-* software without specific prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
-* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#include <asm_macros.S>
-#include <platform_def.h>
-
-	.globl	plat_secondary_cold_boot_setup
-	.globl	plat_get_my_entrypoint
-	.globl	plat_is_my_cpu_primary
-
-	/* -----------------------------------------------------
-	 * void plat_secondary_cold_boot_setup (void);
-	 *
-	 * This function performs any platform specific actions
-	 * needed for a secondary cpu after a cold reset. Right
-	 * now this is a stub function.
-	 * -----------------------------------------------------
-	 */
-func plat_secondary_cold_boot_setup
-	mov	x0, #0
-	ret
-endfunc plat_secondary_cold_boot_setup
-
-	/* ---------------------------------------------------------------------
-	 * unsigned long plat_get_my_entrypoint (void);
-	 *
-	 * Main job of this routine is to distinguish between a cold and warm boot
-	 * For a cold boot, return 0.
-	 * For a warm boot, read the mailbox and return the address it contains.
-	 *
-	 * Note: warm boot is corrently not supported
-	 * ---------------------------------------------------------------------
-	 */
-func plat_get_my_entrypoint
-	/* Warm reset detection should be here */
-
-	/* Cold reset */
-	mov	x0, #0
-	ret
-endfunc plat_get_my_entrypoint
-
-	/* -----------------------------------------------------
-	 * unsigned int plat_is_my_cpu_primary (void);
-	 *
-	 * Find out whether the current cpu is the primary
-	 * cpu.
-	 * -----------------------------------------------------
-	 */
-func plat_is_my_cpu_primary
-	mrs	x0, mpidr_el1
-	and	x0, x0, #(MPIDR_CLUSTER_MASK | MPIDR_CPU_MASK)
-	cmp	x0, #MVEBU_PRIMARY_CPU
-	cset	w0, eq
-	ret
-endfunc plat_is_my_cpu_primary
diff --git a/plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S b/plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S
deleted file mode 100644
index 0bc7335..0000000
--- a/plat/marvell/a8k/a7040_rz/aarch64/plat_psci.S
+++ /dev/null
@@ -1,299 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-/*
- * Copyright (C) 2013 - ARM Ltd
- * Author: Marc Zyngier <marc.zyngier@arm.com>
- *
- * Based on code by Carl van Schaik <carl@ok-labs.com>.
- *
- * Copyright (C) 2015 Marvell International Ltd.
- *
- * This program is free software: you can redistribute it and/or modify it
- * under the terms of the GNU General Public License as published by the Free
- * Software Foundation, either version 2 of the License, or any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- * ***************************************************************************
-*/
-
-#include <plat_def.h>
-#include <asm/macro.h>
-
-#define MVEBU_CCU_HTC_ASET_REG	0x4264
-#define MVEBU_PRIVATE_UID_REG	0x30
-#define MVEBU_IO_AFFINITY		0xF00
-#define MVEBU_RFU_GLOBL_SW_RST	0x84
-#define ARM_PSCI_RET_SUCCESS	0
-
-#define MVEBU_CCU_RVBAR(i)	(0x640 + (i * 4))
-
-.pushsection ._secure.text, "ax"
-
-/*******************************************************************************
- * A8K cpu entry.
- * This function implements WA of entry point alignment.
- * A8K jump address (in SMP mode) must be alogned to 65KB. Since Linux jump
- * address is not aliogned, this function is used and it will set the jump
- * address which was passed to the CPU on SMC
- ******************************************************************************/
-.global _armada8k_cpu_entry
-_armada8k_cpu_entry:
-	/* get current CPU */
-	mrs 	x2, MPIDR_EL1   	/* get current CPU - Use affinity level 1 */
-	asr 	x2, x2, #8
-	and 	x2, x2, #0xff
-
-	/* set CPU private UID */
-	mov	x0, #(MVEBU_REGS_BASE)
-	add	x3, x0, #(MVEBU_PRIVATE_UID_REG)
-	add     x1, x2, #0x4
-	str 	w1, [x3]
-
-	bl	enable_affinity
-
-	isb
-
-	/*
-	 * Could be EL3/EL2/EL1, Initial State:
-	 * Little Endian, MMU Disabled, i/dCache Disabled
-	 */
-	/* Update vectors table address (which was obtained from Master) */
-	adr	x0, _vectors
-	ldr	x0, [x0]
-
-	switch_el x1, 3f, 2f, 1f
-3:	msr	vbar_el3, x0
-	mrs	x0, scr_el3
-	orr	x0, x0, #0xf			/* SCR_EL3.NS|IRQ|FIQ|EA */
-	msr	scr_el3, x0
-	msr	cptr_el3, xzr			/* Enable FP/SIMD */
-	ldr	x0, =COUNTER_FREQUENCY
-	msr	cntfrq_el0, x0			/* Initialize CNTFRQ */
-	b	0f
-2:	msr	vbar_el2, x0
-	mov	x0, #0x33ff
-	msr	cptr_el2, x0			/* Enable FP/SIMD */
-	b	0f
-1:	msr	vbar_el1, x0
-	mov	x0, #3 << 20
-	msr	cpacr_el1, x0			/* Enable FP/SIMD */
-0:
-
-#if 0
-	bl	gicv2_pcpu_distif_init
-
-	bl	gicv2_cpuif_enable
-#endif
-
-#if defined(CONFIG_GICV3)
-	ldr	x0, =PLAT_MARVELL_GICR_BASE
-	bl	gic_init_secure_percpu
-#elif defined(CONFIG_GICV2)
-	ldr	x0, =PLAT_MARVELL_GICD_BASE
-	ldr	x1, =PLAT_MARVELL_GICC_BASE
-	bl	gic_init_secure_percpu
-#endif
-
-	bl	psci_build_stack
-
-	bl	armv8_switch_to_el2
-#ifdef CONFIG_ARMV8_SWITCH_TO_EL1
-	bl	armv8_switch_to_el1
-#endif
-
-	/* Get linux start address - we use RVBARR for CPU's 2-3 as a WA. */
-	mrs 	x2, MPIDR_EL1   	/* get current CPU - Use affinity level 1 */
-	and	x5, x2, #0x3
-
-	mov	x0, #(MVEBU_REGS_BASE)
-	mov	x2, #(MVEBU_CCU_RVBAR(2))
-	add	x2, x2, x5, lsl #2
-	orr     x2, x2, x0
-	ldr     w0, [x2]
-
-	br	x0
-
-/*******************************************************************************
- * This function saves Linux entry point which was passed by the SMC.
- * It is required since ATF PSCI flow passed only the target CPU to CPU on
- * routine. Therefore, the jump address should be saved before.
- *
- * Parameters:
- * 		x0 = entry point
- ******************************************************************************/
-.global psci_save_cpu_entrypoint
-psci_save_cpu_entrypoint:
-	adr	x2, _target_pc
-	str	x0, [x2]
-	ret
-
-.global enable_affinity
-enable_affinity:
-
-	/* get current CPU */
-	mrs 	x2, MPIDR_EL1   	/* get current CPU - Use affinity level 1 */
-	asr 	x2, x2, #8
-	and 	x2, x2, #0xff
-
-	/* Activate Affinity between current CPU */
-	mov	x0, #(MVEBU_REGS_BASE)
-	mov     x3, #(MVEBU_CCU_HTC_ASET_REG)
-	orr     x0, x3, x0
-	mov	x3, #0x1
-	lsl     x1, x3, x2
-	orr	x1, x1, #(MVEBU_IO_AFFINITY)
-	str     w1, [x0]
-
-	/* Activate Affinity in CA-57 configuration
-	 * Enable the SMPEN bit in CPUECTLR_EL1 */
-	mrs x0, S3_1_c15_c2_1
-	orr x0, x0, #0x40
-	msr S3_1_c15_c2_1, x0
-	ret
-
-.globl	psci_arch_init
-psci_arch_init:
-	add	x29, x30, 0 /* keep return address */
-	bl	enable_affinity
-	bl	psci_build_stack
-#ifdef CONFIG_MVEBU_LLC_ENABLE
-	bl	llc_enable
-#endif
-	ret	x29
-
-psci_build_stack:
-
-	mrs     x5, SCR_EL3
-	bic	x5, x5, #1	/* Secure mode */
-	msr	SCR_EL3, x5
-	isb
-
-	mrs 	x4, MPIDR_EL1	/* get current CPU - Use affinity level 1 */
-	asr 	x4, x4, #8
-	and 	x4, x4, #0xff
-
-	mov	x5, #400		/* 1kB of stack per CPU */
-	mul	x4, x4, x5
-
-	adr	x5, text_end		/* end of text */
-	add	x5, x5, #0x2000		/* Skip two pages */
-	lsr	x5, x5, #12		/* Align to start of page */
-	lsl	x5, x5, #12
-	sub	sp, x5, x4		/* here's our stack! */
-
-	ret
-
-.globl	psci_0_2_system_reset
-psci_0_2_system_reset:
-	mov	x0, #(MVEBU_RFU_BASE)
-	add	x3, x0, #(MVEBU_RFU_GLOBL_SW_RST)
-	mov	w0, #0
-	str	w0, [x3]
-	ret
-
-/* x0 = target CPU */
-.globl	psci_0_2_cpu_on_64
-psci_0_2_cpu_on_64:
-	mov 	x1, x0
-
-	dsb     sy
-
-	/* read vbar from master CPU and save it
-	   for later use when the slave CPUs are awaken */
-	mrs	x3, vbar_el1		/* Obtain vectors table address (for EL1) from Master */
-	adr	x2, _vectors
-	str	x3, [x2]		/* Store vectors table address for slaves */
-
-	/* get cpu number - use CPU ID */
-	and 	x5, x1, #0x3
-
-	/* get cluster number - use affinity level 1 */
-	asr 	x1, x1, #8
-	and 	x1, x1, #0xff
-
-	/* set CPU private UID */
-	mov	x0, #(MVEBU_REGS_BASE)
-	add	x3, x0, #(MVEBU_PRIVATE_UID_REG)
-	add     x2, x1, #0x4
-	str 	w2, [x3]
-
-	/* set the cpu start address */
-	mov	x2, #(MVEBU_CCU_RVBAR(0))
-	add	x2, x2, x5, lsl #2
-	add	x3, x0, x2
-
-	/* CPU reset vector address - must be aligned to 0x10000
-	   first instruction - jump to _armada8k_cpu_entry */
-	adr     x2, _armada8k_cpu_entry
-	lsr	x2, x2, #16	/* align to 0x10000 */
-	str 	w2, [x3]
-
-	/* Save the Linux out of reset address to unused register.
-	** We used the RVBAR for CPU's 2-3 to store the Linux return address
-	** for CPUs 0 & 1. */
-	adr	x1, _target_pc
-	ldr	x1, [x1]
-	mov	x2, #(MVEBU_CCU_RVBAR(2))
-	add	x2, x2, x5, lsl #2
-	add	x3, x0, x2
-	str     w1, [x3]
-
-	/* get the cpu out of reset */
-	mov	x2, #0x650
-	add	x2, x2, x5, lsl #2
-	add	x3, x0, x2
-	movz 	x2, #0x1, LSL #16
-	add	x2, x2, #0x1
-	str 	w2, [x3]
-
-	/* return success */
-	mov	x0, #ARM_PSCI_RET_SUCCESS	/* Return PSCI_RET_SUCCESS */
-	ret
-
-	/* 64 bit alignment for elements accessed as data */
-	.align 4
-_target_pc:
-	.quad 0x0
-
-_vectors:
-	.quad 0x0
-
-text_end:
-	.popsection
diff --git a/plat/marvell/a8k/a7040_rz/apn806_setup.c b/plat/marvell/a8k/a7040_rz/apn806_setup.c
deleted file mode 100644
index c0b6094..0000000
--- a/plat/marvell/a8k/a7040_rz/apn806_setup.c
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#include <apn806_setup.h>
-#include <rfu.h>
-#include <ccu.h>
-
-void apn806_init(void)
-{
-	/* configure RFU windows */
-	init_rfu();
-
-	/* configure CCU windows */
-	init_ccu();
-}
diff --git a/plat/marvell/a8k/a7040_rz/board/marvell_plat_config.c b/plat/marvell/a8k/a7040_rz/board/marvell_plat_config.c
deleted file mode 100644
index 4724f16..0000000
--- a/plat/marvell/a8k/a7040_rz/board/marvell_plat_config.c
+++ /dev/null
@@ -1,121 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#include <plat_config.h>
-#include <plat_def.h>
-
-
-/* Weak definitions may be overridden in specific Marvell standard platform */
-#pragma weak marvell_get_rfu_memory_map
-#pragma weak marvell_get_iob_memory_map
-#pragma weak marvell_get_ccu_memory_map
-
-/*******************************************************************************
- * RFU Configuration
- ******************************************************************************/
-struct rfu_win rfu_memory_map[] = {
-	{0x0,	0xfe000000,	0x0,	0x1f00000,	PCIE_PORT_TID}, /* PCIe window 31Mb for PCIe port*/
-	{0x0,	0xffe00000,	0x0,	0x100000,	PCIE_REGS_TID}, /* PCI-REG window 64Kb for PCIe-reg*/
-	{0x0,	0xf9100000,	0x0,	0x100000,	IHBPHY_TID},	/* IHB window  1Mb for PHY-reg*/
-};
-
-uintptr_t marvell_get_rfu_reg_offs(void)
-{
-	return MVEBU_RFU_BASE;
-}
-
-int marvell_get_rfu_memory_map(struct rfu_win **win, uint32_t *size)
-{
-	*win = rfu_memory_map;
-	*size = sizeof(rfu_memory_map)/sizeof(struct rfu_win);
-
-	return 0;
-}
-
-/*******************************************************************************
- * IOB Configuration
- ******************************************************************************/
-#define MARVELL_IOB_MAX_WIN	16
-
-struct iob_win iob_memory_map[] = {
-	{0x0,	0xf7000000,	0x0,	0x1000000,	PEX1_TID}, /* PEX1_X1 window */
-	{0x0,	0xf8000000,	0x0,	0x1000000,	PEX2_TID}, /* PEX2_X1 window */
-	{0x0,	0xf6000000,	0x0,	0x1000000,	PEX0_TID}, /* PEX0_X4 window */
-	{0x0,	0xf9000000,	0x0,	0x1000000,	NAND_TID}  /* NAND window */
-};
-
-uintptr_t marvell_get_iob_reg_offs(void)
-{
-	return MVEBU_IOB_BASE;
-}
-
-int marvell_get_iob_max_win(void)
-{
-	return MARVELL_IOB_MAX_WIN;
-}
-
-int marvell_get_iob_memory_map(struct iob_win **win, uint32_t *size)
-{
-	*win = iob_memory_map;
-	*size = sizeof(iob_memory_map)/sizeof(struct iob_win);
-
-	return 0;
-}
-
-/*******************************************************************************
- * CCU Configuration
- ******************************************************************************/
-#define MARVELL_CCU_MAX_WIN	8
-
-struct ccu_win ccu_memory_map[] = {
-	{0x0,	0xf2000000,	0x0,	0xe000000,	IO_0_TID}, /* IO window */
-};
-
-uintptr_t marvell_get_ccu_reg_offs(void)
-{
-	return MVEBU_CCU_BASE;
-}
-
-int marvell_get_ccu_max_win(void)
-{
-	return MARVELL_CCU_MAX_WIN;
-}
-
-int marvell_get_ccu_memory_map(struct ccu_win **win, uint32_t *size)
-{
-	*win = ccu_memory_map;
-	*size = sizeof(ccu_memory_map)/sizeof(struct ccu_win);
-
-	return 0;
-}
diff --git a/plat/marvell/a8k/a7040_rz/cp110_setup.c b/plat/marvell/a8k/a7040_rz/cp110_setup.c
deleted file mode 100644
index e066c29..0000000
--- a/plat/marvell/a8k/a7040_rz/cp110_setup.c
+++ /dev/null
@@ -1,136 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#include <plat_def.h>
-#include <iob.h>
-#include <mmio.h>
-
-/*
- * AXI Configuration.
- */
-
- /* Used for Units of CP-110 (e.g. USB device, USB Host, and etc) */
-#define MVEBU_AXI_ATTR_BASE			(MVEBU_CP0_REGS_BASE + 0x441300)
-#define MVEBU_AXI_ATTR_REG(index)		(MVEBU_AXI_ATTR_BASE + 0x4 * index)
-#define MVEBU_AXI_ATTR_ARCACHE_OFFSET		4
-#define MVEBU_AXI_ATTR_ARCACHE_MASK		(0xF << MVEBU_AXI_ATTR_ARCACHE_OFFSET)
-#define MVEBU_AXI_ATTR_ARDOMAIN_OFFSET		12
-#define MVEBU_AXI_ATTR_ARDOMAIN_MASK		(0x3 << MVEBU_AXI_ATTR_ARDOMAIN_OFFSET)
-#define MVEBU_AXI_ATTR_AWCACHE_OFFSET		20
-#define MVEBU_AXI_ATTR_AWCACHE_MASK		(0xF << MVEBU_AXI_ATTR_AWCACHE_OFFSET)
-#define MVEBU_AXI_ATTR_AWDOMAIN_OFFSET		28
-#define MVEBU_AXI_ATTR_AWDOMAIN_MASK		(0x3 << MVEBU_AXI_ATTR_AWDOMAIN_OFFSET)
-
-/* AXI to MBUS bridge registers */
-#define MVEBU_AMB_IP_BRIDGE_WIN_REG(win)	(MVEBU_AMB_IP_BASE + (win * 0x8))
-#define MVEBU_AMB_IP_BRIDGE_WIN_EN_OFFSET	0
-#define MVEBU_AMB_IP_BRIDGE_WIN_EN_MASK		(0x1 << MVEBU_AMB_IP_BRIDGE_WIN_EN_OFFSET)
-#define MVEBU_AMB_IP_BRIDGE_WIN_SIZE_OFFSET	16
-#define MVEBU_AMB_IP_BRIDGE_WIN_SIZE_MASK	(0xffff << MVEBU_AMB_IP_BRIDGE_WIN_SIZE_OFFSET)
-
-enum axi_attr {
-	AXI_ADUNIT_ATTR = 0,
-	AXI_COMUNIT_ATTR,
-	AXI_EIP197_ATTR,
-	AXI_USB3D_ATTR,
-	AXI_USB3H0_ATTR,
-	AXI_USB3H1_ATTR,
-	AXI_SATA0_ATTR,
-	AXI_SATA1_ATTR,
-	AXI_DAP_ATTR,
-	AXI_DFX_ATTR,
-	AXI_DBG_TRC_ATTR = 12,
-	AXI_SDIO_ATTR,
-	AXI_MSS_ATTR,
-	AXI_MAX_ATTR,
-};
-
-void cp110_axi_attr_init(void)
-{
-	uint32_t index, data;
-
-	/* Initialize AXI attributes for Armada-7040 SoC */
-	/* Releveant for 7040 SoC (and not AP-806 Stand alone) */
-
-	/* Go over the AXI attributes and set Ax-Cache and Ax-Domain */
-	for (index = 0; index < AXI_MAX_ATTR; index++) {
-		switch (index) {
-		/* DFX and MSS unit works with no coherent only -
-		   there's no option to configure the Ax-Cache and Ax-Domain */
-		case AXI_DFX_ATTR:
-		case AXI_MSS_ATTR:
-			continue;
-		default:
-			/* Set Ax-Cache as cacheable, no allocate, modifiable, bufferable
-			 The values are different because Read & Write definition
-			 is different in Ax-Cache */
-			data = mmio_read_32(MVEBU_AXI_ATTR_REG(index));
-			data &= ~MVEBU_AXI_ATTR_ARCACHE_MASK;
-			data |= 0xB << MVEBU_AXI_ATTR_ARCACHE_OFFSET;
-			data &= ~MVEBU_AXI_ATTR_AWCACHE_MASK;
-			data |= 0x7 << MVEBU_AXI_ATTR_AWCACHE_OFFSET;
-			/* Set Ax-Domain as Outer domain */
-			data &= ~MVEBU_AXI_ATTR_ARDOMAIN_MASK;
-			data |= 0x2 << MVEBU_AXI_ATTR_ARDOMAIN_OFFSET;
-			data &= ~MVEBU_AXI_ATTR_AWDOMAIN_MASK;
-			data |= 0x2 << MVEBU_AXI_ATTR_AWDOMAIN_OFFSET;
-			mmio_write_32(MVEBU_AXI_ATTR_REG(index), data);
-		}
-	}
-
-	return;
-}
-
-void amb_bridge_init(void)
-{
-	uint32_t reg;
-
-	/* Open AMB bridge Window to Access COMPHY/MDIO registers */
-	reg = mmio_read_32(MVEBU_AMB_IP_BRIDGE_WIN_REG(0));
-	reg &= ~(MVEBU_AMB_IP_BRIDGE_WIN_SIZE_MASK | MVEBU_AMB_IP_BRIDGE_WIN_EN_MASK);
-	reg |= (0x7ff << MVEBU_AMB_IP_BRIDGE_WIN_SIZE_OFFSET | 0x1 << MVEBU_AMB_IP_BRIDGE_WIN_EN_OFFSET);
-	mmio_write_32(MVEBU_AMB_IP_BRIDGE_WIN_REG(0), reg);
-}
-
-void cp110_init(void)
-{
-	/* configure IOB windows */
-	init_iob();
-
-	/* configure axi */
-	cp110_axi_attr_init();
-
-	/* Open AMB bridge for comphy */
-	amb_bridge_init();
-}
diff --git a/plat/marvell/a8k/a7040_rz/dram_port.c b/plat/marvell/a8k/a7040_rz/dram_port.c
deleted file mode 100644
index c9b8346..0000000
--- a/plat/marvell/a8k/a7040_rz/dram_port.c
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#include <arch_helpers.h>
-#include <plat_marvell.h>
-#include <debug.h>
-#include <dram_if.h>
-
-struct dram_config dram_cfg = {
-	.iface_mask	= 0x1,
-	.printf		= printf,
-
-	/* Interface configuration */
-	.iface[0] = {
-		.mac_base = (void *)MVEBU_DRAM_MAC_BASE,
-		.phy_base = (void *)MVEBU_DRAM_PHY_BASE,
-		.ecc_enabled	= 0,
-		.cs_count	= 1,
-		.freq_mhz	= 650,
-
-		/* Bus configuration */
-		.bus[0] = {
-			.bus_width = 32,
-			.size_mb   = 0x1000,
-		},
-	},
-};
-
-/* This function may modify the default DRAM parameters
- * based on information recieved from SPD or bootloader
- * configuration located on non volatile storage */
-int update_dram_info(struct dram_config *cfg)
-{
-	NOTICE("Gathering DRAM information\n");
-	return 0;
-}
-
-void *plat_get_dram_data(void)
-{
-	/* Update DRAM for dynamic platforms */
-	update_dram_info(&dram_cfg);
-
-	return &dram_cfg;
-}
diff --git a/plat/marvell/a8k/a7040_rz/include/plat_macros.S b/plat/marvell/a8k/a7040_rz/include/plat_macros.S
deleted file mode 100644
index e5513f4..0000000
--- a/plat/marvell/a8k/a7040_rz/include/plat_macros.S
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
-* following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this list of conditions and the following
-* disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-* disclaimer in the documentation and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used to endorse or promote products derived from this
-* software without specific prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
-* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#ifndef __PLAT_MACROS_S__
-#define __PLAT_MACROS_S__
-
-#include <arm_macros.S>
-
-/*
- * Required platform porting macros
- * (Provided by included headers)
- */
-.macro plat_print_gic_regs
-.endm
-
-#endif /* __PLAT_MACROS_S__ */
diff --git a/plat/marvell/a8k/a7040_rz/include/platform_def.h b/plat/marvell/a8k/a7040_rz/include/platform_def.h
deleted file mode 100644
index 3cbe36a..0000000
--- a/plat/marvell/a8k/a7040_rz/include/platform_def.h
+++ /dev/null
@@ -1,167 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#ifndef __PLATFORM_DEF_H__
-#define __PLATFORM_DEF_H__
-
-#include <board_marvell_def.h>
-#include <plat_def.h>
-#ifndef __ASSEMBLY__
-#include <stdio.h>
-#endif /* __ASSEMBLY__ */
-
-/*
- * Most platform porting definitions provided by included headers
- */
-
-/*
- * DRAM Memory layout:
-				+-----------------------+
-				:						:
-				:		Linux			:
-0x04X00000 --->	+-----------------------+
-				|		BL3-3(u-boot)	|>>>>}>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
-				|-----------------------|	}										|
-				|		BL3-[0,1, 2]	|	}------------------------------------->	|
-				|-----------------------|	}									||	|
-				|		BL2				|	}->FIP (loaded by BootROM to DRAM)	||	|
-				|-----------------------|	}									||	|
-				|	FIP_TOC				|	}									||	|
-0x04120000 --->	|-----------------------|										||	|
-				|		BL1 (RO)		|										||	|
-0x04100000 --->	+-----------------------+										||	|
-				:						:										||	|
-				:	Trusted SRAM section:										\/	|
-0x04040000 --->	+-----------------------+	Replaced by BL2  +------------------+	|
-				|		BL1 (RW)		|	<<<<<<<<<<<<<<<<< |   BL3-1 NOBITS	 |	|
-0x04037000 --->	|-----------------------|	<<<<<<<<<<<<<<<<< |------------------|	|
-				|						|	<<<<<<<<<<<<<<<<< |   BL3-1 PROGBITS |	|
-0x04023000 --->	|-----------------------|					  +------------------+	|
-				|		BL2				|
-				|-----------------------|
-				|						|
-0x04001000 --->	|-----------------------|
-				|		Shared			|
-0x04000000 --->	+-----------------------+
-				:						:
-				:		Linux			:
-				:						:
-				|-----------------------|
-				|						|	U-Boot(BL3-3) Loaded by BL2				|
-				|		U-Boot			|	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
-0x00000000 --->	+-----------------------+
-
-Trusted SRAM section 0x4000000..0x4200000:
-----------------------------------------
- * SRAM_BASE		= 0x4001000
- * BL2_BASE			= 0x4006000
- * BL2_LIMIT		= BL31_BASE
- * BL31_BASE		= 0x4023000 = (64MB + 256KB - 0x1D000)
- * BL31_PROGBITS_LIMIT	= BL1_RW_BASE
- * BL1_RW_BASE		= 0x4037000 = (64MB + 256KB - 0x9000)
- * BL1_RW_LIMIT		= BL31_LIMIT = 0x4040000
- *
- *
- * PLAT_MARVELL_FIP_BASE	= 0x4120000
- */
-
-/* since BL33 is loaded by BL2 (and validated by BL31) to DRAM offset 0,
-   it is allowed to load/copy images to 'NULL' pointers */
-#if defined(IMAGE_BL2) || defined(IMAGE_BL31)
-#define PLAT_ALLOW_ZERO_ADDR_COPY
-#endif
-
-#define PLAT_MARVELL_SRAM_BASE	0xFFE1C048
-#define PLAT_MARVELL_SRAM_END	0xFFE3C000
-
-#define PLAT_MARVELL_ATF_BASE			0x4000000
-#define PLAT_MARVELL_ATF_LOAD_ADDR		(PLAT_MARVELL_ATF_BASE + 0x100000)
-
-#define PLAT_MARVELL_FIP_BASE			(PLAT_MARVELL_ATF_LOAD_ADDR +0x20000)
-#define PLAT_MARVELL_FIP_MAX_SIZE		0x4000000
-
-#define PLAT_MARVELL_CLUSTER0_CORE_COUNT	4
-#define PLAT_MARVELL_CLUSTER1_CORE_COUNT	4
-
-#define PLAT_MARVELL_TRUSTED_ROM_BASE	PLAT_MARVELL_ATF_LOAD_ADDR	/* DRAM[2MB..66MB] is used as Trusted ROM */
-#define PLAT_MARVELL_TRUSTED_ROM_SIZE	0x04000000	/* 64 MB TODO: reduce this to minimum needed according to fip image size*/
-
-#define PLAT_MARVELL_TRUSTED_DRAM_BASE	0x06000000	/* TODO: update SCP (Secure PayLoad) Trusted DRAM actual BASE & size */
-#define PLAT_MARVELL_TRUSTED_DRAM_SIZE	0x02000000	/* 32 MB */
-
-/* GIC related definitions */
-#define PLAT_MARVELL_GICD_BASE			(MVEBU_REGS_BASE + MVEBU_GICD_BASE)
-#define PLAT_MARVELL_GICC_BASE			(MVEBU_REGS_BASE + MVEBU_GICC_BASE)
-
-#define PLAT_MARVELL_G0_IRQS			MARVELL_G1S_IRQS
-#define PLAT_MARVELL_G1S_IRQS			MARVELL_G0_IRQS
-
-#define PLAT_MARVELL_SHARED_RAM_CACHED	1
-
-/*
- * Load address of BL3-3 for this platform port
- */
-#if PALLADIUM
-#define PLAT_MARVELL_NS_IMAGE_OFFSET	0x1000
-#else
-#define PLAT_MARVELL_NS_IMAGE_OFFSET	0x0
-#endif
-
-/* System Reference Clock*/
-#define PLAT_REF_CLK_IN_HZ				COUNTER_FREQUENCY
-
-/*
- * PL011 related constants
- */
-#define PLAT_MARVELL_BOOT_UART_BASE			(MVEBU_REGS_BASE + 0x512000)
-#if PALLADIUM
-#define PLAT_MARVELL_BOOT_UART_CLK_IN_HZ		384000
-#else
-#define PLAT_MARVELL_BOOT_UART_CLK_IN_HZ		200000000
-#endif
-
-#define PLAT_MARVELL_CRASH_UART_BASE			PLAT_MARVELL_BOOT_UART_BASE
-#define PLAT_MARVELL_CRASH_UART_CLK_IN_HZ		PLAT_MARVELL_BOOT_UART_CLK_IN_HZ
-
-#define PLAT_MARVELL_BL31_RUN_UART_BASE			PLAT_MARVELL_BOOT_UART_BASE
-#define PLAT_MARVELL_BL31_RUN_UART_CLK_IN_HZ	PLAT_MARVELL_BOOT_UART_CLK_IN_HZ
-
-/* Required platform porting definitions */
-#define PLAT_MAX_PWR_LVL				MPIDR_AFFLVL1
-
-/* System timer related constants */
-#define PLAT_MARVELL_NSTIMER_FRAME_ID		1
-
-
-#endif /* __PLATFORM_DEF_H__ */
diff --git a/plat/marvell/a8k/a7040_rz/plat_bl1_setup.c b/plat/marvell/a8k/a7040_rz/plat_bl1_setup.c
deleted file mode 100644
index 1cdc2bc..0000000
--- a/plat/marvell/a8k/a7040_rz/plat_bl1_setup.c
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#include <plat_marvell.h>
-#include <mmio.h>
-#include <apn806_setup.h>
-#include <cp110_setup.h>
-
-#define MVEBU_MPP_REGS(n)	(0x6F4000 + ((n) << 2))
-void marvell_bl1_setup_mpps(void)
-{
-	/* Enable UART MPPs.
-	** In a normal system, this is done by Bootrom.
-	*/
-	mmio_write_32(MVEBU_REGS_BASE + MVEBU_MPP_REGS(1), 0x3000);
-	mmio_write_32(MVEBU_REGS_BASE + MVEBU_MPP_REGS(2), 0x3000);
-}
-
diff --git a/plat/marvell/a8k/a7040_rz/plat_bl31_setup.c b/plat/marvell/a8k/a7040_rz/plat_bl31_setup.c
deleted file mode 100644
index 1b3571d..0000000
--- a/plat/marvell/a8k/a7040_rz/plat_bl31_setup.c
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#include <plat_marvell.h>
-#include <apn806_setup.h>
-#include <cp110_setup.h>
-
-/* This function overruns the same function in marvell_bl31_setup.c */
-void bl31_plat_arch_setup(void)
-{
-	marvell_bl31_plat_arch_setup();
-
-	/* configure apn806 */
-	apn806_init();
-
-	/* configure cp110 */
-	cp110_init();
-}
diff --git a/plat/marvell/a8k/a7040_rz/plat_def.h b/plat/marvell/a8k/a7040_rz/plat_def.h
deleted file mode 100644
index ae41cb1..0000000
--- a/plat/marvell/a8k/a7040_rz/plat_def.h
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
-* following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this list of conditions and the following
-* disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-* disclaimer in the documentation and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used to endorse or promote products derived from this
-* software without specific prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
-* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#ifndef __MVEBU_DEF_H__
-#define __MVEBU_DEF_H__
-
-#include <arm_def.h>
-
-
-#define MVEBU_MAX_CPUS_PER_CLUSTER	4
-
-#define MVEBU_PRIMARY_CPU		0x0
-
-#if PALLADIUM
-#define COUNTER_FREQUENCY		48000
-#else
-#define COUNTER_FREQUENCY		25000000
-#endif
-
-#define MVEBU_REGS_BASE			0xF0000000
-#define MVEBU_CP0_REGS_BASE		0xF2000000
-#define MVEBU_RFU_BASE			(MVEBU_REGS_BASE + 0x6F0000)
-#define MVEBU_CCU_BASE			(MVEBU_REGS_BASE + 0x4000)
-#define MVEBU_IOB_BASE			(MVEBU_CP0_REGS_BASE + 0x190000)
-#define MVEBU_DRAM_MAC_BASE		(MVEBU_REGS_BASE + 0x20000)
-#define MVEBU_DRAM_PHY_BASE		(MVEBU_REGS_BASE + 0x20000)
-#define MVEBU_AMB_IP_BASE		(MVEBU_CP0_REGS_BASE + 0x13ff00)
-
-/*******************************************************************************
- * MVEBU memory map related constants
- ******************************************************************************/
-
-/* Aggregate of all devices in the first GB */
-#define DEVICE0_BASE			MVEBU_REGS_BASE
-#define DEVICE0_SIZE			0x10000000
-
-/*******************************************************************************
- * GIC-400 & interrupt handling related constants
- ******************************************************************************/
-/* Base MVEBU compatible GIC memory map */
-#define MVEBU_GICD_BASE			0x210000
-#define MVEBU_GICC_BASE			0x220000
-
-#endif /* __MVEBU_DEF_H__ */
-
diff --git a/plat/marvell/a8k/a7040_rz/plat_pm.c b/plat/marvell/a8k/a7040_rz/plat_pm.c
deleted file mode 100644
index 2aa6725..0000000
--- a/plat/marvell/a8k/a7040_rz/plat_pm.c
+++ /dev/null
@@ -1,160 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-#include <arch_helpers.h>
-#include <plat_marvell.h>
-#include <psci.h>
-#include <debug.h>
-
-
-/*******************************************************************************
- * A8K handler called to check the validity of the power state
- * parameter.
- ******************************************************************************/
-int a8k_validate_power_state(unsigned int power_state,
-                            psci_power_state_t *req_state)
-{
-	ERROR("a8k_validate_power_state needs to be implemented\n");
-	panic();
-}
-
-/*******************************************************************************
- * A8K handler called when a CPU is about to enter standby.
- ******************************************************************************/
-void a8k_cpu_standby(plat_local_state_t cpu_state)
-{
-	ERROR("a8k_cpu_standby needs to be implemented\n");
-	panic();
-}
-
-/*******************************************************************************
- * A8K handler called when a power domain is about to be turned on. The
- * mpidr determines the CPU to be turned on.
- ******************************************************************************/
-int a8k_pwr_domain_on(u_register_t mpidr)
-{
-	psci_0_2_cpu_on_64(mpidr);
-	return 0;
-}
-
-/*******************************************************************************
- * A8K handler called to save the entry point which will be later on used
- * when performing CPU on process.
- ******************************************************************************/
-int a8k_validate_ns_entrypoint(uintptr_t entrypoint)
-{
-	psci_save_cpu_entrypoint(entrypoint);
-	return PSCI_E_SUCCESS;
-}
-
-
-/*******************************************************************************
- * A8K handler called when a power domain is about to be turned off. The
- * target_state encodes the power state that each level should transition to.
- ******************************************************************************/
-void a8k_pwr_domain_off(const psci_power_state_t *target_state)
-{
-	ERROR("a8k_pwr_domain_off needs to be implemented\n");
-	panic();
-}
-
-/*******************************************************************************
- * A8K handler called when a power domain is about to be suspended. The
- * target_state encodes the power state that each level should transition to.
- ******************************************************************************/
-void a8k_pwr_domain_suspend(const psci_power_state_t *target_state)
-{
-	ERROR("a8k_pwr_domain_suspend needs to be implemented\n");
-	panic();
-}
-
-/*******************************************************************************
- * A8K handler called when a power domain has just been powered on after
- * being turned off earlier. The target_state encodes the low power state that
- * each level has woken up from.
- ******************************************************************************/
-void a8k_pwr_domain_on_finish(const psci_power_state_t *target_state)
-{
-	ERROR("a8k_pwr_domain_on_finish needs to be implemented\n");
-	panic();
-}
-
-/*******************************************************************************
- * A8K handler called when a power domain has just been powered on after
- * having been suspended earlier. The target_state encodes the low power state
- * that each level has woken up from.
- * TODO: At the moment we reuse the on finisher and reinitialize the secure
- * context. Need to implement a separate suspend finisher.
- ******************************************************************************/
-void a8k_pwr_domain_suspend_finish(const psci_power_state_t *target_state)
-{
-	ERROR("a8k_pwr_domain_suspend_finish needs to be implemented\n");
-	panic();
-}
-
-/*******************************************************************************
- * A8K handlers to shutdown/reboot the system
- ******************************************************************************/
-static void __dead2 a8k_system_off(void)
-{
-	ERROR("a8k_system_off needs to be implemented\n");
-	panic();
-	wfi();
-	ERROR("A8K System Off: operation not handled.\n");
-	panic();
-}
-
-static void __dead2 a8k_system_reset(void)
-{
-	psci_0_2_system_reset();
-	/* we shouldn't get to this point */
-	panic();
-}
-
-/*******************************************************************************
- * Export the platform handlers via plat_arm_psci_pm_ops. The ARM Standard
- * platform layer will take care of registering the handlers with PSCI.
- ******************************************************************************/
-const plat_psci_ops_t plat_arm_psci_pm_ops = {
-	.cpu_standby = a8k_cpu_standby,
-	.pwr_domain_on = a8k_pwr_domain_on,
-	.pwr_domain_off = a8k_pwr_domain_off,
-	.pwr_domain_suspend = a8k_pwr_domain_suspend,
-	.pwr_domain_on_finish = a8k_pwr_domain_on_finish,
-	.pwr_domain_suspend_finish = a8k_pwr_domain_suspend_finish,
-	.system_off = a8k_system_off,
-	.system_reset = a8k_system_reset,
-	.validate_power_state = a8k_validate_power_state,
-	.validate_ns_entrypoint = a8k_validate_ns_entrypoint
-};
diff --git a/plat/marvell/a8k/a7040_rz/plat_topology.c b/plat/marvell/a8k/a7040_rz/plat_topology.c
deleted file mode 100644
index bf72182..0000000
--- a/plat/marvell/a8k/a7040_rz/plat_topology.c
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
-* ***************************************************************************
-* Copyright (C) 2016 Marvell International Ltd.
-* ***************************************************************************
-*
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-*
-* Redistributions of source code must retain the above copyright notice, this
-* list of conditions and the following disclaimer.
-*
-* Redistributions in binary form must reproduce the above copyright notice,
-* this list of conditions and the following disclaimer in the documentation
-* and/or other materials provided with the distribution.
-*
-* Neither the name of Marvell nor the names of its contributors may be used
-* to endorse or promote products derived from this software without specific
-* prior written permission.
-*
-* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGE.
-*
-***************************************************************************
-*/
-
-
-#include <plat_marvell.h>
-
-/* Note: This file implements functions and structures which
-   are required by ATF build */
-
-const unsigned char arm_power_domain_tree_desc[] = {
-	/* No of root nodes */
-	MARVELL_CLUSTER_COUNT,
-	/* No of children for the first node */
-	PLAT_MARVELL_CLUSTER0_CORE_COUNT,
-	/* No of children for the second node */
-	PLAT_MARVELL_CLUSTER1_CORE_COUNT
-};
-
-
-/*******************************************************************************
- * This function implements a part of the critical interface between the psci
- * generic layer and the platform that allows the former to query the platform
- * to convert an MPIDR to a unique linear index. An error code (-1) is returned
- * in case the MPIDR is invalid.
- ******************************************************************************/
-int plat_core_pos_by_mpidr(u_register_t mpidr)
-{
-	int target_id = mpidr / 0x100;
-
-	if (target_id < 1 || target_id > 3)
-		return -1;
-
-	return target_id;
-}
-
diff --git a/plat/marvell/a8k/a7040_rz/platform.mk b/plat/marvell/a8k/a7040_rz/platform.mk
index d439d55..abc97f4 100644
--- a/plat/marvell/a8k/a7040_rz/platform.mk
+++ b/plat/marvell/a8k/a7040_rz/platform.mk
@@ -30,9 +30,12 @@
 # POSSIBILITY OF SUCH DAMAGE.
 #
 
-PLAT_FAMILY			:= a8k
+# Use a70x0 platform sources since a7040_rz uses the same code excepting the CP110 configurations
+PLAT_SRC		:= a70x0
+PLAT_FAMILY		:= a8k
 PLAT_FAMILY_BASE	:= plat/marvell/$(PLAT_FAMILY)
-PLAT_SRC_BASE		:= $(PLAT_FAMILY_BASE)/$(PLAT)
+PLAT_SRC_BASE		:= $(PLAT_FAMILY_BASE)/$(PLAT_SRC)
+PLAT_7040_RZ_SRC_BASE	:= $(PLAT_FAMILY_BASE)/$(PLAT)
 PLAT_INCLUDE_BASE	:= include/plat/marvell/$(PLAT_FAMILY)
 MARVELL_DRV_BASE	:= drivers/marvell
 
@@ -51,10 +54,10 @@ MARVELL_GIC_SOURCES	:=	drivers/arm/gic/common/gic_common.c	\
 
 ATF_INCLUDES		:=	-Iinclude/common/tbbr
 
-PLAT_INCLUDES		:=	-I$(PLAT_FAMILY_BASE)/$(PLAT)			\
-				-I$(PLAT_FAMILY_BASE)/$(PLAT)/include		\
-				-I$(PLAT_INCLUDE_BASE)/$(PLAT)/board/common	\
-				-I$(PLAT_INCLUDE_BASE)/$(PLAT)/board		\
+PLAT_INCLUDES		:=	-I$(PLAT_FAMILY_BASE)/$(PLAT_SRC)		\
+				-I$(PLAT_FAMILY_BASE)/$(PLAT_SRC)/include	\
+				-I$(PLAT_INCLUDE_BASE)/$(PLAT_SRC)/board/common	\
+				-I$(PLAT_INCLUDE_BASE)/$(PLAT_SRC)/board	\
 				-I$(PLAT_INCLUDE_BASE)/common			\
 				-I$(PLAT_INCLUDE_BASE)/common/aarch64		\
 				-I$(PLAT_SRC_BASE)				\
@@ -72,10 +75,6 @@ BLE_SOURCES		:=	$(PLAT_SRC_BASE)/dram_port.c			\
 BL1_SOURCES		+=	$(PLAT_SRC_BASE)/aarch64/plat_helpers.S	\
 				lib/cpus/aarch64/cortex_a72.S
 
-ifeq (${PALLADIUM}, 1)
-BL1_SOURCES		+=	$(PLAT_SRC_BASE)/plat_bl1_setup.c
-endif
-
 MARVELL_DRV		:= 	$(MARVELL_DRV_BASE)/rfu.c	\
 				$(MARVELL_DRV_BASE)/iob.c	\
 				$(MARVELL_DRV_BASE)/ccu.c
diff --git a/plat/marvell/a8k/a70x0/aarch64/a7040_rz_common.c b/plat/marvell/a8k/a70x0/aarch64/a7040_rz_common.c
new file mode 100644
index 0000000..2d8f2d2
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/aarch64/a7040_rz_common.c
@@ -0,0 +1,110 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <plat_marvell.h>
+
+
+/* MMU entry for internal (register) space access */
+#define MAP_DEVICE0	MAP_REGION_FLAT(DEVICE0_BASE,			\
+					DEVICE0_SIZE,			\
+					MT_DEVICE | MT_RW | MT_SECURE)
+
+/*
+ * Table of regions for various BL stages to map using the MMU.
+ */
+#if IMAGE_BL1
+const mmap_region_t plat_arm_mmap[] = {
+	MARVELL_MAP_SHARED_RAM,
+	MAP_DEVICE0,
+	{0}
+};
+#endif
+#if IMAGE_BL2
+const mmap_region_t plat_arm_mmap[] = {
+	MARVELL_MAP_SHARED_RAM,
+	MAP_DEVICE0,
+	MARVELL_MAP_NS_DRAM1,
+	{0}
+};
+#endif
+
+#if IMAGE_BL2U
+const mmap_region_t plat_arm_mmap[] = {
+	MAP_DEVICE0,
+	{0}
+};
+#endif
+
+#if IMAGE_BLE
+const mmap_region_t plat_arm_mmap[] = {
+	MAP_DEVICE0,
+	{0}
+};
+#endif
+
+#if IMAGE_BL31
+const mmap_region_t plat_arm_mmap[] = {
+	MARVELL_MAP_SHARED_RAM,
+	MAP_DEVICE0,
+	MARVELL_MAP_NS_DRAM1,
+	{0}
+};
+#endif
+#if IMAGE_BL32
+const mmap_region_t plat_arm_mmap[] = {
+	MAP_DEVICE0,
+	{0}
+};
+#endif
+
+ARM_CASSERT_MMAP
+
+
+/*
+ * Following is the default definition that always
+ * returns BL2 image details.
+ */
+image_desc_t bl2_img_desc;
+image_desc_t *bl1_plat_get_image_desc(unsigned int image_id)
+{
+	bl2_img_desc.image_id = BL2_IMAGE_ID;
+	bl2_img_desc.image_info.h.version = VERSION_1;
+	bl2_img_desc.image_info.h.attr = SET_EXEC_STATE(EXECUTABLE);
+	bl2_img_desc.image_info.image_base = BL2_BASE;
+	bl2_img_desc.ep_info.h.attr = SET_SEC_STATE(SECURE);
+	bl2_img_desc.ep_info.pc = BL2_BASE;
+
+	return &bl2_img_desc;
+}
+
diff --git a/plat/marvell/a8k/a70x0/aarch64/plat_helpers.S b/plat/marvell/a8k/a70x0/aarch64/plat_helpers.S
new file mode 100644
index 0000000..e747119
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/aarch64/plat_helpers.S
@@ -0,0 +1,86 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <asm_macros.S>
+#include <platform_def.h>
+
+	.globl	plat_secondary_cold_boot_setup
+	.globl	plat_get_my_entrypoint
+	.globl	plat_is_my_cpu_primary
+
+	/* -----------------------------------------------------
+	 * void plat_secondary_cold_boot_setup (void);
+	 *
+	 * This function performs any platform specific actions
+	 * needed for a secondary cpu after a cold reset. Right
+	 * now this is a stub function.
+	 * -----------------------------------------------------
+	 */
+func plat_secondary_cold_boot_setup
+	mov	x0, #0
+	ret
+endfunc plat_secondary_cold_boot_setup
+
+	/* ---------------------------------------------------------------------
+	 * unsigned long plat_get_my_entrypoint (void);
+	 *
+	 * Main job of this routine is to distinguish between a cold and warm boot
+	 * For a cold boot, return 0.
+	 * For a warm boot, read the mailbox and return the address it contains.
+	 *
+	 * Note: warm boot is corrently not supported
+	 * ---------------------------------------------------------------------
+	 */
+func plat_get_my_entrypoint
+	/* Warm reset detection should be here */
+
+	/* Cold reset */
+	mov	x0, #0
+	ret
+endfunc plat_get_my_entrypoint
+
+	/* -----------------------------------------------------
+	 * unsigned int plat_is_my_cpu_primary (void);
+	 *
+	 * Find out whether the current cpu is the primary
+	 * cpu.
+	 * -----------------------------------------------------
+	 */
+func plat_is_my_cpu_primary
+	mrs	x0, mpidr_el1
+	and	x0, x0, #(MPIDR_CLUSTER_MASK | MPIDR_CPU_MASK)
+	cmp	x0, #MVEBU_PRIMARY_CPU
+	cset	w0, eq
+	ret
+endfunc plat_is_my_cpu_primary
diff --git a/plat/marvell/a8k/a70x0/aarch64/plat_psci.S b/plat/marvell/a8k/a70x0/aarch64/plat_psci.S
new file mode 100644
index 0000000..0bc7335
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/aarch64/plat_psci.S
@@ -0,0 +1,299 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+/*
+ * Copyright (C) 2013 - ARM Ltd
+ * Author: Marc Zyngier <marc.zyngier@arm.com>
+ *
+ * Based on code by Carl van Schaik <carl@ok-labs.com>.
+ *
+ * Copyright (C) 2015 Marvell International Ltd.
+ *
+ * This program is free software: you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the Free
+ * Software Foundation, either version 2 of the License, or any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * ***************************************************************************
+*/
+
+#include <plat_def.h>
+#include <asm/macro.h>
+
+#define MVEBU_CCU_HTC_ASET_REG	0x4264
+#define MVEBU_PRIVATE_UID_REG	0x30
+#define MVEBU_IO_AFFINITY		0xF00
+#define MVEBU_RFU_GLOBL_SW_RST	0x84
+#define ARM_PSCI_RET_SUCCESS	0
+
+#define MVEBU_CCU_RVBAR(i)	(0x640 + (i * 4))
+
+.pushsection ._secure.text, "ax"
+
+/*******************************************************************************
+ * A8K cpu entry.
+ * This function implements WA of entry point alignment.
+ * A8K jump address (in SMP mode) must be alogned to 65KB. Since Linux jump
+ * address is not aliogned, this function is used and it will set the jump
+ * address which was passed to the CPU on SMC
+ ******************************************************************************/
+.global _armada8k_cpu_entry
+_armada8k_cpu_entry:
+	/* get current CPU */
+	mrs 	x2, MPIDR_EL1   	/* get current CPU - Use affinity level 1 */
+	asr 	x2, x2, #8
+	and 	x2, x2, #0xff
+
+	/* set CPU private UID */
+	mov	x0, #(MVEBU_REGS_BASE)
+	add	x3, x0, #(MVEBU_PRIVATE_UID_REG)
+	add     x1, x2, #0x4
+	str 	w1, [x3]
+
+	bl	enable_affinity
+
+	isb
+
+	/*
+	 * Could be EL3/EL2/EL1, Initial State:
+	 * Little Endian, MMU Disabled, i/dCache Disabled
+	 */
+	/* Update vectors table address (which was obtained from Master) */
+	adr	x0, _vectors
+	ldr	x0, [x0]
+
+	switch_el x1, 3f, 2f, 1f
+3:	msr	vbar_el3, x0
+	mrs	x0, scr_el3
+	orr	x0, x0, #0xf			/* SCR_EL3.NS|IRQ|FIQ|EA */
+	msr	scr_el3, x0
+	msr	cptr_el3, xzr			/* Enable FP/SIMD */
+	ldr	x0, =COUNTER_FREQUENCY
+	msr	cntfrq_el0, x0			/* Initialize CNTFRQ */
+	b	0f
+2:	msr	vbar_el2, x0
+	mov	x0, #0x33ff
+	msr	cptr_el2, x0			/* Enable FP/SIMD */
+	b	0f
+1:	msr	vbar_el1, x0
+	mov	x0, #3 << 20
+	msr	cpacr_el1, x0			/* Enable FP/SIMD */
+0:
+
+#if 0
+	bl	gicv2_pcpu_distif_init
+
+	bl	gicv2_cpuif_enable
+#endif
+
+#if defined(CONFIG_GICV3)
+	ldr	x0, =PLAT_MARVELL_GICR_BASE
+	bl	gic_init_secure_percpu
+#elif defined(CONFIG_GICV2)
+	ldr	x0, =PLAT_MARVELL_GICD_BASE
+	ldr	x1, =PLAT_MARVELL_GICC_BASE
+	bl	gic_init_secure_percpu
+#endif
+
+	bl	psci_build_stack
+
+	bl	armv8_switch_to_el2
+#ifdef CONFIG_ARMV8_SWITCH_TO_EL1
+	bl	armv8_switch_to_el1
+#endif
+
+	/* Get linux start address - we use RVBARR for CPU's 2-3 as a WA. */
+	mrs 	x2, MPIDR_EL1   	/* get current CPU - Use affinity level 1 */
+	and	x5, x2, #0x3
+
+	mov	x0, #(MVEBU_REGS_BASE)
+	mov	x2, #(MVEBU_CCU_RVBAR(2))
+	add	x2, x2, x5, lsl #2
+	orr     x2, x2, x0
+	ldr     w0, [x2]
+
+	br	x0
+
+/*******************************************************************************
+ * This function saves Linux entry point which was passed by the SMC.
+ * It is required since ATF PSCI flow passed only the target CPU to CPU on
+ * routine. Therefore, the jump address should be saved before.
+ *
+ * Parameters:
+ * 		x0 = entry point
+ ******************************************************************************/
+.global psci_save_cpu_entrypoint
+psci_save_cpu_entrypoint:
+	adr	x2, _target_pc
+	str	x0, [x2]
+	ret
+
+.global enable_affinity
+enable_affinity:
+
+	/* get current CPU */
+	mrs 	x2, MPIDR_EL1   	/* get current CPU - Use affinity level 1 */
+	asr 	x2, x2, #8
+	and 	x2, x2, #0xff
+
+	/* Activate Affinity between current CPU */
+	mov	x0, #(MVEBU_REGS_BASE)
+	mov     x3, #(MVEBU_CCU_HTC_ASET_REG)
+	orr     x0, x3, x0
+	mov	x3, #0x1
+	lsl     x1, x3, x2
+	orr	x1, x1, #(MVEBU_IO_AFFINITY)
+	str     w1, [x0]
+
+	/* Activate Affinity in CA-57 configuration
+	 * Enable the SMPEN bit in CPUECTLR_EL1 */
+	mrs x0, S3_1_c15_c2_1
+	orr x0, x0, #0x40
+	msr S3_1_c15_c2_1, x0
+	ret
+
+.globl	psci_arch_init
+psci_arch_init:
+	add	x29, x30, 0 /* keep return address */
+	bl	enable_affinity
+	bl	psci_build_stack
+#ifdef CONFIG_MVEBU_LLC_ENABLE
+	bl	llc_enable
+#endif
+	ret	x29
+
+psci_build_stack:
+
+	mrs     x5, SCR_EL3
+	bic	x5, x5, #1	/* Secure mode */
+	msr	SCR_EL3, x5
+	isb
+
+	mrs 	x4, MPIDR_EL1	/* get current CPU - Use affinity level 1 */
+	asr 	x4, x4, #8
+	and 	x4, x4, #0xff
+
+	mov	x5, #400		/* 1kB of stack per CPU */
+	mul	x4, x4, x5
+
+	adr	x5, text_end		/* end of text */
+	add	x5, x5, #0x2000		/* Skip two pages */
+	lsr	x5, x5, #12		/* Align to start of page */
+	lsl	x5, x5, #12
+	sub	sp, x5, x4		/* here's our stack! */
+
+	ret
+
+.globl	psci_0_2_system_reset
+psci_0_2_system_reset:
+	mov	x0, #(MVEBU_RFU_BASE)
+	add	x3, x0, #(MVEBU_RFU_GLOBL_SW_RST)
+	mov	w0, #0
+	str	w0, [x3]
+	ret
+
+/* x0 = target CPU */
+.globl	psci_0_2_cpu_on_64
+psci_0_2_cpu_on_64:
+	mov 	x1, x0
+
+	dsb     sy
+
+	/* read vbar from master CPU and save it
+	   for later use when the slave CPUs are awaken */
+	mrs	x3, vbar_el1		/* Obtain vectors table address (for EL1) from Master */
+	adr	x2, _vectors
+	str	x3, [x2]		/* Store vectors table address for slaves */
+
+	/* get cpu number - use CPU ID */
+	and 	x5, x1, #0x3
+
+	/* get cluster number - use affinity level 1 */
+	asr 	x1, x1, #8
+	and 	x1, x1, #0xff
+
+	/* set CPU private UID */
+	mov	x0, #(MVEBU_REGS_BASE)
+	add	x3, x0, #(MVEBU_PRIVATE_UID_REG)
+	add     x2, x1, #0x4
+	str 	w2, [x3]
+
+	/* set the cpu start address */
+	mov	x2, #(MVEBU_CCU_RVBAR(0))
+	add	x2, x2, x5, lsl #2
+	add	x3, x0, x2
+
+	/* CPU reset vector address - must be aligned to 0x10000
+	   first instruction - jump to _armada8k_cpu_entry */
+	adr     x2, _armada8k_cpu_entry
+	lsr	x2, x2, #16	/* align to 0x10000 */
+	str 	w2, [x3]
+
+	/* Save the Linux out of reset address to unused register.
+	** We used the RVBAR for CPU's 2-3 to store the Linux return address
+	** for CPUs 0 & 1. */
+	adr	x1, _target_pc
+	ldr	x1, [x1]
+	mov	x2, #(MVEBU_CCU_RVBAR(2))
+	add	x2, x2, x5, lsl #2
+	add	x3, x0, x2
+	str     w1, [x3]
+
+	/* get the cpu out of reset */
+	mov	x2, #0x650
+	add	x2, x2, x5, lsl #2
+	add	x3, x0, x2
+	movz 	x2, #0x1, LSL #16
+	add	x2, x2, #0x1
+	str 	w2, [x3]
+
+	/* return success */
+	mov	x0, #ARM_PSCI_RET_SUCCESS	/* Return PSCI_RET_SUCCESS */
+	ret
+
+	/* 64 bit alignment for elements accessed as data */
+	.align 4
+_target_pc:
+	.quad 0x0
+
+_vectors:
+	.quad 0x0
+
+text_end:
+	.popsection
diff --git a/plat/marvell/a8k/a70x0/apn806_setup.c b/plat/marvell/a8k/a70x0/apn806_setup.c
new file mode 100644
index 0000000..c0b6094
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/apn806_setup.c
@@ -0,0 +1,46 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <apn806_setup.h>
+#include <rfu.h>
+#include <ccu.h>
+
+void apn806_init(void)
+{
+	/* configure RFU windows */
+	init_rfu();
+
+	/* configure CCU windows */
+	init_ccu();
+}
diff --git a/plat/marvell/a8k/a70x0/board/marvell_plat_config.c b/plat/marvell/a8k/a70x0/board/marvell_plat_config.c
new file mode 100644
index 0000000..4724f16
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/board/marvell_plat_config.c
@@ -0,0 +1,121 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <plat_config.h>
+#include <plat_def.h>
+
+
+/* Weak definitions may be overridden in specific Marvell standard platform */
+#pragma weak marvell_get_rfu_memory_map
+#pragma weak marvell_get_iob_memory_map
+#pragma weak marvell_get_ccu_memory_map
+
+/*******************************************************************************
+ * RFU Configuration
+ ******************************************************************************/
+struct rfu_win rfu_memory_map[] = {
+	{0x0,	0xfe000000,	0x0,	0x1f00000,	PCIE_PORT_TID}, /* PCIe window 31Mb for PCIe port*/
+	{0x0,	0xffe00000,	0x0,	0x100000,	PCIE_REGS_TID}, /* PCI-REG window 64Kb for PCIe-reg*/
+	{0x0,	0xf9100000,	0x0,	0x100000,	IHBPHY_TID},	/* IHB window  1Mb for PHY-reg*/
+};
+
+uintptr_t marvell_get_rfu_reg_offs(void)
+{
+	return MVEBU_RFU_BASE;
+}
+
+int marvell_get_rfu_memory_map(struct rfu_win **win, uint32_t *size)
+{
+	*win = rfu_memory_map;
+	*size = sizeof(rfu_memory_map)/sizeof(struct rfu_win);
+
+	return 0;
+}
+
+/*******************************************************************************
+ * IOB Configuration
+ ******************************************************************************/
+#define MARVELL_IOB_MAX_WIN	16
+
+struct iob_win iob_memory_map[] = {
+	{0x0,	0xf7000000,	0x0,	0x1000000,	PEX1_TID}, /* PEX1_X1 window */
+	{0x0,	0xf8000000,	0x0,	0x1000000,	PEX2_TID}, /* PEX2_X1 window */
+	{0x0,	0xf6000000,	0x0,	0x1000000,	PEX0_TID}, /* PEX0_X4 window */
+	{0x0,	0xf9000000,	0x0,	0x1000000,	NAND_TID}  /* NAND window */
+};
+
+uintptr_t marvell_get_iob_reg_offs(void)
+{
+	return MVEBU_IOB_BASE;
+}
+
+int marvell_get_iob_max_win(void)
+{
+	return MARVELL_IOB_MAX_WIN;
+}
+
+int marvell_get_iob_memory_map(struct iob_win **win, uint32_t *size)
+{
+	*win = iob_memory_map;
+	*size = sizeof(iob_memory_map)/sizeof(struct iob_win);
+
+	return 0;
+}
+
+/*******************************************************************************
+ * CCU Configuration
+ ******************************************************************************/
+#define MARVELL_CCU_MAX_WIN	8
+
+struct ccu_win ccu_memory_map[] = {
+	{0x0,	0xf2000000,	0x0,	0xe000000,	IO_0_TID}, /* IO window */
+};
+
+uintptr_t marvell_get_ccu_reg_offs(void)
+{
+	return MVEBU_CCU_BASE;
+}
+
+int marvell_get_ccu_max_win(void)
+{
+	return MARVELL_CCU_MAX_WIN;
+}
+
+int marvell_get_ccu_memory_map(struct ccu_win **win, uint32_t *size)
+{
+	*win = ccu_memory_map;
+	*size = sizeof(ccu_memory_map)/sizeof(struct ccu_win);
+
+	return 0;
+}
diff --git a/plat/marvell/a8k/a70x0/cp110_setup.c b/plat/marvell/a8k/a70x0/cp110_setup.c
new file mode 100644
index 0000000..e066c29
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/cp110_setup.c
@@ -0,0 +1,136 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <plat_def.h>
+#include <iob.h>
+#include <mmio.h>
+
+/*
+ * AXI Configuration.
+ */
+
+ /* Used for Units of CP-110 (e.g. USB device, USB Host, and etc) */
+#define MVEBU_AXI_ATTR_BASE			(MVEBU_CP0_REGS_BASE + 0x441300)
+#define MVEBU_AXI_ATTR_REG(index)		(MVEBU_AXI_ATTR_BASE + 0x4 * index)
+#define MVEBU_AXI_ATTR_ARCACHE_OFFSET		4
+#define MVEBU_AXI_ATTR_ARCACHE_MASK		(0xF << MVEBU_AXI_ATTR_ARCACHE_OFFSET)
+#define MVEBU_AXI_ATTR_ARDOMAIN_OFFSET		12
+#define MVEBU_AXI_ATTR_ARDOMAIN_MASK		(0x3 << MVEBU_AXI_ATTR_ARDOMAIN_OFFSET)
+#define MVEBU_AXI_ATTR_AWCACHE_OFFSET		20
+#define MVEBU_AXI_ATTR_AWCACHE_MASK		(0xF << MVEBU_AXI_ATTR_AWCACHE_OFFSET)
+#define MVEBU_AXI_ATTR_AWDOMAIN_OFFSET		28
+#define MVEBU_AXI_ATTR_AWDOMAIN_MASK		(0x3 << MVEBU_AXI_ATTR_AWDOMAIN_OFFSET)
+
+/* AXI to MBUS bridge registers */
+#define MVEBU_AMB_IP_BRIDGE_WIN_REG(win)	(MVEBU_AMB_IP_BASE + (win * 0x8))
+#define MVEBU_AMB_IP_BRIDGE_WIN_EN_OFFSET	0
+#define MVEBU_AMB_IP_BRIDGE_WIN_EN_MASK		(0x1 << MVEBU_AMB_IP_BRIDGE_WIN_EN_OFFSET)
+#define MVEBU_AMB_IP_BRIDGE_WIN_SIZE_OFFSET	16
+#define MVEBU_AMB_IP_BRIDGE_WIN_SIZE_MASK	(0xffff << MVEBU_AMB_IP_BRIDGE_WIN_SIZE_OFFSET)
+
+enum axi_attr {
+	AXI_ADUNIT_ATTR = 0,
+	AXI_COMUNIT_ATTR,
+	AXI_EIP197_ATTR,
+	AXI_USB3D_ATTR,
+	AXI_USB3H0_ATTR,
+	AXI_USB3H1_ATTR,
+	AXI_SATA0_ATTR,
+	AXI_SATA1_ATTR,
+	AXI_DAP_ATTR,
+	AXI_DFX_ATTR,
+	AXI_DBG_TRC_ATTR = 12,
+	AXI_SDIO_ATTR,
+	AXI_MSS_ATTR,
+	AXI_MAX_ATTR,
+};
+
+void cp110_axi_attr_init(void)
+{
+	uint32_t index, data;
+
+	/* Initialize AXI attributes for Armada-7040 SoC */
+	/* Releveant for 7040 SoC (and not AP-806 Stand alone) */
+
+	/* Go over the AXI attributes and set Ax-Cache and Ax-Domain */
+	for (index = 0; index < AXI_MAX_ATTR; index++) {
+		switch (index) {
+		/* DFX and MSS unit works with no coherent only -
+		   there's no option to configure the Ax-Cache and Ax-Domain */
+		case AXI_DFX_ATTR:
+		case AXI_MSS_ATTR:
+			continue;
+		default:
+			/* Set Ax-Cache as cacheable, no allocate, modifiable, bufferable
+			 The values are different because Read & Write definition
+			 is different in Ax-Cache */
+			data = mmio_read_32(MVEBU_AXI_ATTR_REG(index));
+			data &= ~MVEBU_AXI_ATTR_ARCACHE_MASK;
+			data |= 0xB << MVEBU_AXI_ATTR_ARCACHE_OFFSET;
+			data &= ~MVEBU_AXI_ATTR_AWCACHE_MASK;
+			data |= 0x7 << MVEBU_AXI_ATTR_AWCACHE_OFFSET;
+			/* Set Ax-Domain as Outer domain */
+			data &= ~MVEBU_AXI_ATTR_ARDOMAIN_MASK;
+			data |= 0x2 << MVEBU_AXI_ATTR_ARDOMAIN_OFFSET;
+			data &= ~MVEBU_AXI_ATTR_AWDOMAIN_MASK;
+			data |= 0x2 << MVEBU_AXI_ATTR_AWDOMAIN_OFFSET;
+			mmio_write_32(MVEBU_AXI_ATTR_REG(index), data);
+		}
+	}
+
+	return;
+}
+
+void amb_bridge_init(void)
+{
+	uint32_t reg;
+
+	/* Open AMB bridge Window to Access COMPHY/MDIO registers */
+	reg = mmio_read_32(MVEBU_AMB_IP_BRIDGE_WIN_REG(0));
+	reg &= ~(MVEBU_AMB_IP_BRIDGE_WIN_SIZE_MASK | MVEBU_AMB_IP_BRIDGE_WIN_EN_MASK);
+	reg |= (0x7ff << MVEBU_AMB_IP_BRIDGE_WIN_SIZE_OFFSET | 0x1 << MVEBU_AMB_IP_BRIDGE_WIN_EN_OFFSET);
+	mmio_write_32(MVEBU_AMB_IP_BRIDGE_WIN_REG(0), reg);
+}
+
+void cp110_init(void)
+{
+	/* configure IOB windows */
+	init_iob();
+
+	/* configure axi */
+	cp110_axi_attr_init();
+
+	/* Open AMB bridge for comphy */
+	amb_bridge_init();
+}
diff --git a/plat/marvell/a8k/a70x0/dram_port.c b/plat/marvell/a8k/a70x0/dram_port.c
new file mode 100644
index 0000000..c9b8346
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/dram_port.c
@@ -0,0 +1,75 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <arch_helpers.h>
+#include <plat_marvell.h>
+#include <debug.h>
+#include <dram_if.h>
+
+struct dram_config dram_cfg = {
+	.iface_mask	= 0x1,
+	.printf		= printf,
+
+	/* Interface configuration */
+	.iface[0] = {
+		.mac_base = (void *)MVEBU_DRAM_MAC_BASE,
+		.phy_base = (void *)MVEBU_DRAM_PHY_BASE,
+		.ecc_enabled	= 0,
+		.cs_count	= 1,
+		.freq_mhz	= 650,
+
+		/* Bus configuration */
+		.bus[0] = {
+			.bus_width = 32,
+			.size_mb   = 0x1000,
+		},
+	},
+};
+
+/* This function may modify the default DRAM parameters
+ * based on information recieved from SPD or bootloader
+ * configuration located on non volatile storage */
+int update_dram_info(struct dram_config *cfg)
+{
+	NOTICE("Gathering DRAM information\n");
+	return 0;
+}
+
+void *plat_get_dram_data(void)
+{
+	/* Update DRAM for dynamic platforms */
+	update_dram_info(&dram_cfg);
+
+	return &dram_cfg;
+}
diff --git a/plat/marvell/a8k/a70x0/include/plat_macros.S b/plat/marvell/a8k/a70x0/include/plat_macros.S
new file mode 100644
index 0000000..b908981
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/include/plat_macros.S
@@ -0,0 +1,47 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#ifndef __PLAT_MACROS_S__
+#define __PLAT_MACROS_S__
+
+#include <arm_macros.S>
+
+/*
+ * Required platform porting macros
+ * (Provided by included headers)
+ */
+.macro plat_print_gic_regs
+.endm
+
+#endif /* __PLAT_MACROS_S__ */
diff --git a/plat/marvell/a8k/a70x0/include/platform_def.h b/plat/marvell/a8k/a70x0/include/platform_def.h
new file mode 100644
index 0000000..2092f78
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/include/platform_def.h
@@ -0,0 +1,169 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#ifndef __PLATFORM_DEF_H__
+#define __PLATFORM_DEF_H__
+
+#include <board_marvell_def.h>
+#include <plat_def.h>
+#ifndef __ASSEMBLY__
+#include <stdio.h>
+#endif /* __ASSEMBLY__ */
+
+/*
+ * Most platform porting definitions provided by included headers
+ */
+
+/*
+ * DRAM Memory layout:
+		+-----------------------+
+		:			:
+		:	Linux		:
+0x04X00000 --->	+-----------------------+
+		|	BL3-3(u-boot)	|>>>>>>>}>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
+		|-----------------------|	}						|
+		|	BL3-[0,1, 2]	|	}---------------------------------------->	|
+		|-----------------------|	}					||	|
+		|	BL2		|	}->FIP (loaded by BootROM to DRAM)	||	|
+		|-----------------------|	}					||	|
+		|	FIP_TOC		|	}					||	|
+0x04120000 --->	|-----------------------|						||	|
+		|	BL1 (RO)	|						||	|
+0x04100000 --->	+-----------------------+						||	|
+		:			:						||	|
+		: Trusted SRAM section	:						\/	|
+0x04040000 --->	+-----------------------+	Replaced by BL2		+----------------+	|
+		|	BL1 (RW)	|	<<<<<<<<<<<<<<<<<<	| BL3-1 NOBITS	 |	|
+0x04037000 --->	|-----------------------|	<<<<<<<<<<<<<<<<<<	|----------------|	|
+		|			|	<<<<<<<<<<<<<<<<<<	| BL3-1 PROGBITS |	|
+0x04023000 --->	|-----------------------|				+----------------+	|
+		|	BL2		|
+		|-----------------------|
+		|			|
+0x04001000 --->	|-----------------------|
+		|	Shared		|
+0x04000000 --->	+-----------------------+
+		:			:
+		:	Linux		:
+		:			:
+		|-----------------------|
+		|			|	U-Boot(BL3-3) Loaded by BL2			|
+		|	U-Boot		|	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
+0x00000000 --->	+-----------------------+
+
+Trusted SRAM section 0x4000000..0x4200000:
+----------------------------------------
+ * SRAM_BASE		= 0x4001000
+ * BL2_BASE			= 0x4006000
+ * BL2_LIMIT		= BL31_BASE
+ * BL31_BASE		= 0x4023000 = (64MB + 256KB - 0x1D000)
+ * BL31_PROGBITS_LIMIT	= BL1_RW_BASE
+ * BL1_RW_BASE		= 0x4037000 = (64MB + 256KB - 0x9000)
+ * BL1_RW_LIMIT		= BL31_LIMIT = 0x4040000
+ *
+ *
+ * PLAT_MARVELL_FIP_BASE	= 0x4120000
+ */
+
+/* since BL33 is loaded by BL2 (and validated by BL31) to DRAM offset 0,
+   it is allowed to load/copy images to 'NULL' pointers */
+#if defined(IMAGE_BL2) || defined(IMAGE_BL31)
+#define PLAT_ALLOW_ZERO_ADDR_COPY
+#endif
+
+#define PLAT_MARVELL_SRAM_BASE	0xFFE1C048
+#define PLAT_MARVELL_SRAM_END	0xFFE3C000
+
+#define PLAT_MARVELL_ATF_BASE			0x4000000
+#define PLAT_MARVELL_ATF_LOAD_ADDR		(PLAT_MARVELL_ATF_BASE + 0x100000)
+
+#define PLAT_MARVELL_FIP_BASE			(PLAT_MARVELL_ATF_LOAD_ADDR + 0x20000)
+#define PLAT_MARVELL_FIP_MAX_SIZE		0x4000000
+
+#define PLAT_MARVELL_CLUSTER0_CORE_COUNT	4
+#define PLAT_MARVELL_CLUSTER1_CORE_COUNT	4
+
+#define PLAT_MARVELL_TRUSTED_ROM_BASE	PLAT_MARVELL_ATF_LOAD_ADDR	/* DRAM[2MB..66MB] is used as Trusted ROM */
+#define PLAT_MARVELL_TRUSTED_ROM_SIZE	0x04000000	/* 64 MB TODO: reduce this to minimum needed according
+								to fip image size*/
+
+#define PLAT_MARVELL_TRUSTED_DRAM_BASE	0x06000000	/* TODO: update SCP (Secure PayLoad) Trusted DRAM actual
+								BASE & size */
+#define PLAT_MARVELL_TRUSTED_DRAM_SIZE	0x02000000	/* 32 MB */
+
+/* GIC related definitions */
+#define PLAT_MARVELL_GICD_BASE			(MVEBU_REGS_BASE + MVEBU_GICD_BASE)
+#define PLAT_MARVELL_GICC_BASE			(MVEBU_REGS_BASE + MVEBU_GICC_BASE)
+
+#define PLAT_MARVELL_G0_IRQS			MARVELL_G1S_IRQS
+#define PLAT_MARVELL_G1S_IRQS			MARVELL_G0_IRQS
+
+#define PLAT_MARVELL_SHARED_RAM_CACHED	1
+
+/*
+ * Load address of BL3-3 for this platform port
+ */
+#if PALLADIUM
+#define PLAT_MARVELL_NS_IMAGE_OFFSET	0x1000
+#else
+#define PLAT_MARVELL_NS_IMAGE_OFFSET	0x0
+#endif
+
+/* System Reference Clock*/
+#define PLAT_REF_CLK_IN_HZ				COUNTER_FREQUENCY
+
+/*
+ * PL011 related constants
+ */
+#define PLAT_MARVELL_BOOT_UART_BASE			(MVEBU_REGS_BASE + 0x512000)
+#if PALLADIUM
+#define PLAT_MARVELL_BOOT_UART_CLK_IN_HZ		384000
+#else
+#define PLAT_MARVELL_BOOT_UART_CLK_IN_HZ		200000000
+#endif
+
+#define PLAT_MARVELL_CRASH_UART_BASE			PLAT_MARVELL_BOOT_UART_BASE
+#define PLAT_MARVELL_CRASH_UART_CLK_IN_HZ		PLAT_MARVELL_BOOT_UART_CLK_IN_HZ
+
+#define PLAT_MARVELL_BL31_RUN_UART_BASE			PLAT_MARVELL_BOOT_UART_BASE
+#define PLAT_MARVELL_BL31_RUN_UART_CLK_IN_HZ	PLAT_MARVELL_BOOT_UART_CLK_IN_HZ
+
+/* Required platform porting definitions */
+#define PLAT_MAX_PWR_LVL				MPIDR_AFFLVL1
+
+/* System timer related constants */
+#define PLAT_MARVELL_NSTIMER_FRAME_ID		1
+
+
+#endif /* __PLATFORM_DEF_H__ */
diff --git a/plat/marvell/a8k/a70x0/plat_bl1_setup.c b/plat/marvell/a8k/a70x0/plat_bl1_setup.c
new file mode 100644
index 0000000..1cdc2bc
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/plat_bl1_setup.c
@@ -0,0 +1,49 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <plat_marvell.h>
+#include <mmio.h>
+#include <apn806_setup.h>
+#include <cp110_setup.h>
+
+#define MVEBU_MPP_REGS(n)	(0x6F4000 + ((n) << 2))
+void marvell_bl1_setup_mpps(void)
+{
+	/* Enable UART MPPs.
+	** In a normal system, this is done by Bootrom.
+	*/
+	mmio_write_32(MVEBU_REGS_BASE + MVEBU_MPP_REGS(1), 0x3000);
+	mmio_write_32(MVEBU_REGS_BASE + MVEBU_MPP_REGS(2), 0x3000);
+}
+
diff --git a/plat/marvell/a8k/a70x0/plat_bl31_setup.c b/plat/marvell/a8k/a70x0/plat_bl31_setup.c
new file mode 100644
index 0000000..1b3571d
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/plat_bl31_setup.c
@@ -0,0 +1,49 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <plat_marvell.h>
+#include <apn806_setup.h>
+#include <cp110_setup.h>
+
+/* This function overruns the same function in marvell_bl31_setup.c */
+void bl31_plat_arch_setup(void)
+{
+	marvell_bl31_plat_arch_setup();
+
+	/* configure apn806 */
+	apn806_init();
+
+	/* configure cp110 */
+	cp110_init();
+}
diff --git a/plat/marvell/a8k/a70x0/plat_def.h b/plat/marvell/a8k/a70x0/plat_def.h
new file mode 100644
index 0000000..03cce51
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/plat_def.h
@@ -0,0 +1,76 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#ifndef __MVEBU_DEF_H__
+#define __MVEBU_DEF_H__
+
+#include <arm_def.h>
+
+
+#define MVEBU_MAX_CPUS_PER_CLUSTER	4
+
+#define MVEBU_PRIMARY_CPU		0x0
+
+#if PALLADIUM
+#define COUNTER_FREQUENCY		48000
+#else
+#define COUNTER_FREQUENCY		25000000
+#endif
+
+#define MVEBU_REGS_BASE			0xF0000000
+#define MVEBU_CP0_REGS_BASE		0xF2000000
+#define MVEBU_RFU_BASE			(MVEBU_REGS_BASE + 0x6F0000)
+#define MVEBU_CCU_BASE			(MVEBU_REGS_BASE + 0x4000)
+#define MVEBU_IOB_BASE			(MVEBU_CP0_REGS_BASE + 0x190000)
+#define MVEBU_DRAM_MAC_BASE		(MVEBU_REGS_BASE + 0x20000)
+#define MVEBU_DRAM_PHY_BASE		(MVEBU_REGS_BASE + 0x20000)
+#define MVEBU_AMB_IP_BASE		(MVEBU_CP0_REGS_BASE + 0x13ff00)
+
+/*******************************************************************************
+ * MVEBU memory map related constants
+ ******************************************************************************/
+
+/* Aggregate of all devices in the first GB */
+#define DEVICE0_BASE			MVEBU_REGS_BASE
+#define DEVICE0_SIZE			0x10000000
+
+/*******************************************************************************
+ * GIC-400 & interrupt handling related constants
+ ******************************************************************************/
+/* Base MVEBU compatible GIC memory map */
+#define MVEBU_GICD_BASE			0x210000
+#define MVEBU_GICC_BASE			0x220000
+
+#endif /* __MVEBU_DEF_H__ */
+
diff --git a/plat/marvell/a8k/a70x0/plat_pm.c b/plat/marvell/a8k/a70x0/plat_pm.c
new file mode 100644
index 0000000..964ac1f
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/plat_pm.c
@@ -0,0 +1,160 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <arch_helpers.h>
+#include <plat_marvell.h>
+#include <psci.h>
+#include <debug.h>
+
+
+/*******************************************************************************
+ * A8K handler called to check the validity of the power state
+ * parameter.
+ ******************************************************************************/
+int a8k_validate_power_state(unsigned int power_state,
+			    psci_power_state_t *req_state)
+{
+	ERROR("a8k_validate_power_state needs to be implemented\n");
+	panic();
+}
+
+/*******************************************************************************
+ * A8K handler called when a CPU is about to enter standby.
+ ******************************************************************************/
+void a8k_cpu_standby(plat_local_state_t cpu_state)
+{
+	ERROR("a8k_cpu_standby needs to be implemented\n");
+	panic();
+}
+
+/*******************************************************************************
+ * A8K handler called when a power domain is about to be turned on. The
+ * mpidr determines the CPU to be turned on.
+ ******************************************************************************/
+int a8k_pwr_domain_on(u_register_t mpidr)
+{
+	psci_0_2_cpu_on_64(mpidr);
+	return 0;
+}
+
+/*******************************************************************************
+ * A8K handler called to save the entry point which will be later on used
+ * when performing CPU on process.
+ ******************************************************************************/
+int a8k_validate_ns_entrypoint(uintptr_t entrypoint)
+{
+	psci_save_cpu_entrypoint(entrypoint);
+	return PSCI_E_SUCCESS;
+}
+
+
+/*******************************************************************************
+ * A8K handler called when a power domain is about to be turned off. The
+ * target_state encodes the power state that each level should transition to.
+ ******************************************************************************/
+void a8k_pwr_domain_off(const psci_power_state_t *target_state)
+{
+	ERROR("a8k_pwr_domain_off needs to be implemented\n");
+	panic();
+}
+
+/*******************************************************************************
+ * A8K handler called when a power domain is about to be suspended. The
+ * target_state encodes the power state that each level should transition to.
+ ******************************************************************************/
+void a8k_pwr_domain_suspend(const psci_power_state_t *target_state)
+{
+	ERROR("a8k_pwr_domain_suspend needs to be implemented\n");
+	panic();
+}
+
+/*******************************************************************************
+ * A8K handler called when a power domain has just been powered on after
+ * being turned off earlier. The target_state encodes the low power state that
+ * each level has woken up from.
+ ******************************************************************************/
+void a8k_pwr_domain_on_finish(const psci_power_state_t *target_state)
+{
+	ERROR("a8k_pwr_domain_on_finish needs to be implemented\n");
+	panic();
+}
+
+/*******************************************************************************
+ * A8K handler called when a power domain has just been powered on after
+ * having been suspended earlier. The target_state encodes the low power state
+ * that each level has woken up from.
+ * TODO: At the moment we reuse the on finisher and reinitialize the secure
+ * context. Need to implement a separate suspend finisher.
+ ******************************************************************************/
+void a8k_pwr_domain_suspend_finish(const psci_power_state_t *target_state)
+{
+	ERROR("a8k_pwr_domain_suspend_finish needs to be implemented\n");
+	panic();
+}
+
+/*******************************************************************************
+ * A8K handlers to shutdown/reboot the system
+ ******************************************************************************/
+static void __dead2 a8k_system_off(void)
+{
+	ERROR("a8k_system_off needs to be implemented\n");
+	panic();
+	wfi();
+	ERROR("A8K System Off: operation not handled.\n");
+	panic();
+}
+
+static void __dead2 a8k_system_reset(void)
+{
+	psci_0_2_system_reset();
+	/* we shouldn't get to this point */
+	panic();
+}
+
+/*******************************************************************************
+ * Export the platform handlers via plat_arm_psci_pm_ops. The ARM Standard
+ * platform layer will take care of registering the handlers with PSCI.
+ ******************************************************************************/
+const plat_psci_ops_t plat_arm_psci_pm_ops = {
+	.cpu_standby = a8k_cpu_standby,
+	.pwr_domain_on = a8k_pwr_domain_on,
+	.pwr_domain_off = a8k_pwr_domain_off,
+	.pwr_domain_suspend = a8k_pwr_domain_suspend,
+	.pwr_domain_on_finish = a8k_pwr_domain_on_finish,
+	.pwr_domain_suspend_finish = a8k_pwr_domain_suspend_finish,
+	.system_off = a8k_system_off,
+	.system_reset = a8k_system_reset,
+	.validate_power_state = a8k_validate_power_state,
+	.validate_ns_entrypoint = a8k_validate_ns_entrypoint
+};
diff --git a/plat/marvell/a8k/a70x0/plat_topology.c b/plat/marvell/a8k/a70x0/plat_topology.c
new file mode 100644
index 0000000..bf72182
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/plat_topology.c
@@ -0,0 +1,66 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+
+#include <plat_marvell.h>
+
+/* Note: This file implements functions and structures which
+   are required by ATF build */
+
+const unsigned char arm_power_domain_tree_desc[] = {
+	/* No of root nodes */
+	MARVELL_CLUSTER_COUNT,
+	/* No of children for the first node */
+	PLAT_MARVELL_CLUSTER0_CORE_COUNT,
+	/* No of children for the second node */
+	PLAT_MARVELL_CLUSTER1_CORE_COUNT
+};
+
+
+/*******************************************************************************
+ * This function implements a part of the critical interface between the psci
+ * generic layer and the platform that allows the former to query the platform
+ * to convert an MPIDR to a unique linear index. An error code (-1) is returned
+ * in case the MPIDR is invalid.
+ ******************************************************************************/
+int plat_core_pos_by_mpidr(u_register_t mpidr)
+{
+	int target_id = mpidr / 0x100;
+
+	if (target_id < 1 || target_id > 3)
+		return -1;
+
+	return target_id;
+}
+
diff --git a/plat/marvell/a8k/a70x0/platform.mk b/plat/marvell/a8k/a70x0/platform.mk
new file mode 100644
index 0000000..d439d55
--- /dev/null
+++ b/plat/marvell/a8k/a70x0/platform.mk
@@ -0,0 +1,102 @@
+#
+# ***************************************************************************
+# Copyright (C) 2016 Marvell International Ltd.
+# ***************************************************************************
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+# Redistributions of source code must retain the above copyright notice, this
+# list of conditions and the following disclaimer.
+#
+# Redistributions in binary form must reproduce the above copyright notice,
+# this list of conditions and the following disclaimer in the documentation
+# and/or other materials provided with the distribution.
+#
+# Neither the name of Marvell nor the names of its contributors may be used
+# to endorse or promote products derived from this software without specific
+# prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+
+PLAT_FAMILY			:= a8k
+PLAT_FAMILY_BASE	:= plat/marvell/$(PLAT_FAMILY)
+PLAT_SRC_BASE		:= $(PLAT_FAMILY_BASE)/$(PLAT)
+PLAT_INCLUDE_BASE	:= include/plat/marvell/$(PLAT_FAMILY)
+MARVELL_DRV_BASE	:= drivers/marvell
+
+CALL_DOIMAGE		:= y
+# This define is used in BL31 linker script to make sure
+# the PSCI code is alligned to 64KB
+$(eval $(call add_define,PLAT_MARVELL_7040_RZ1))
+
+# Enable GICV2
+$(eval $(call add_define,CONFIG_GICV2))
+
+MARVELL_GIC_SOURCES	:=	drivers/arm/gic/common/gic_common.c	\
+				drivers/arm/gic/v2/gicv2_main.c				\
+				drivers/arm/gic/v2/gicv2_helpers.c			\
+				plat/common/plat_gicv2.c
+
+ATF_INCLUDES		:=	-Iinclude/common/tbbr
+
+PLAT_INCLUDES		:=	-I$(PLAT_FAMILY_BASE)/$(PLAT)			\
+				-I$(PLAT_FAMILY_BASE)/$(PLAT)/include		\
+				-I$(PLAT_INCLUDE_BASE)/$(PLAT)/board/common	\
+				-I$(PLAT_INCLUDE_BASE)/$(PLAT)/board		\
+				-I$(PLAT_INCLUDE_BASE)/common			\
+				-I$(PLAT_INCLUDE_BASE)/common/aarch64		\
+				-I$(PLAT_SRC_BASE)				\
+				-Iinclude/drivers/marvell			\
+				${ATF_INCLUDES}
+
+PLAT_BL_COMMON_SOURCES	:=	$(PLAT_SRC_BASE)/aarch64/a7040_rz_common.c	\
+				drivers/console/console.S							\
+				drivers/ti/uart/16550_console.S
+
+BLE_SOURCES		:=	$(PLAT_SRC_BASE)/dram_port.c			\
+				plat/marvell/common/sys_info.c			\
+				plat/marvell/common/dram_setup.c
+
+BL1_SOURCES		+=	$(PLAT_SRC_BASE)/aarch64/plat_helpers.S	\
+				lib/cpus/aarch64/cortex_a72.S
+
+ifeq (${PALLADIUM}, 1)
+BL1_SOURCES		+=	$(PLAT_SRC_BASE)/plat_bl1_setup.c
+endif
+
+MARVELL_DRV		:= 	$(MARVELL_DRV_BASE)/rfu.c	\
+				$(MARVELL_DRV_BASE)/iob.c	\
+				$(MARVELL_DRV_BASE)/ccu.c
+
+BL31_SOURCES		+=	lib/cpus/aarch64/cortex_a72.S				\
+				$(PLAT_SRC_BASE)/aarch64/plat_helpers.S			\
+				$(PLAT_SRC_BASE)/aarch64/plat_psci.S			\
+				$(PLAT_FAMILY_BASE)/common/aarch64/gic_64.S		\
+				$(PLAT_SRC_BASE)/plat_pm.c				\
+				$(PLAT_SRC_BASE)/plat_topology.c			\
+				$(PLAT_SRC_BASE)/plat_bl31_setup.c			\
+				$(PLAT_SRC_BASE)/apn806_setup.c				\
+				$(PLAT_SRC_BASE)/cp110_setup.c				\
+				plat/marvell/common/marvell_gicv2.c			\
+				$(PLAT_SRC_BASE)/board/marvell_plat_config.c		\
+				${MARVELL_DRV}						\
+				${MARVELL_GIC_SOURCES}
+
+# Disable the PSCI platform compatibility layer (allows porting from Old Platform APIs
+# to the new APIs).
+# It is not needed since Marvell platform already used the new platform APIs.
+ENABLE_PLAT_COMPAT	:= 	0
+
+include plat/marvell/common/marvell_common.mk
diff --git a/plat/marvell/a8k/apn806/platform.mk b/plat/marvell/a8k/apn806/platform.mk
index e815bd2..e03d02d 100644
--- a/plat/marvell/a8k/apn806/platform.mk
+++ b/plat/marvell/a8k/apn806/platform.mk
@@ -30,9 +30,9 @@
 # POSSIBILITY OF SUCH DAMAGE.
 #
 
-# Use a7040_rz platform sources since apn806 uses the same code excepting the CP110 configurations
-PLAT_SRC			:= a7040_rz
-PLAT_FAMILY			:= a8k
+# Use a70x0 platform sources since apn806 uses the same code excepting the CP110 configurations
+PLAT_SRC		:= a70x0
+PLAT_FAMILY		:= a8k
 PLAT_FAMILY_BASE	:= plat/marvell/$(PLAT_FAMILY)
 PLAT_SRC_BASE		:= $(PLAT_FAMILY_BASE)/$(PLAT_SRC)
 PLAT_APN_SRC_BASE	:= $(PLAT_FAMILY_BASE)/$(PLAT)
-- 
1.9.1

