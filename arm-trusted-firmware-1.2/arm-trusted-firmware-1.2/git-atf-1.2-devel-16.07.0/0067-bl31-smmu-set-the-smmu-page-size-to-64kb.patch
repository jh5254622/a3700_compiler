From 1ebfaa0a7e8d8c54854f4fa0c928908f2821b263 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Wed, 16 Mar 2016 15:44:10 +0200
Subject: [PATCH 067/239] bl31: smmu: set the smmu page size to 64kb

The mmu-500 page size has to be configured once from secure state
the reset value is 4kb page which doesnt fit our mmu-500 configuration
so we change it to 64kb page size.

Change-Id: I9d3bebc9e1f6d8f1271f43e36bde9169dbeb6b88
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/28297
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Haim Boot <hayim@marvell.com>
---
 plat/marvell/a8k/a70x0/apn806_setup.c | 18 ++++++++++++++++++
 plat/marvell/a8k/a70x0/plat_def.h     |  1 +
 2 files changed, 19 insertions(+)

diff --git a/plat/marvell/a8k/a70x0/apn806_setup.c b/plat/marvell/a8k/a70x0/apn806_setup.c
index c0b6094..d8dcc34 100644
--- a/plat/marvell/a8k/a70x0/apn806_setup.c
+++ b/plat/marvell/a8k/a70x0/apn806_setup.c
@@ -32,9 +32,24 @@
 ***************************************************************************
 */
 
+#include <plat_def.h>
 #include <apn806_setup.h>
 #include <rfu.h>
 #include <ccu.h>
+#include <mmio.h>
+
+#define SMMU_sACR		(MVEBU_SMMU_BASE + 0x10)
+#define SMMU_sACR_PG_64K	(1 << 16)
+
+void setup_smmu(void)
+{
+	uint32_t reg;
+
+	/* Set the SMMU page size to 64 KB */
+	reg = mmio_read_32(SMMU_sACR);
+	reg |= SMMU_sACR_PG_64K;
+	mmio_write_32(SMMU_sACR, reg);
+}
 
 void apn806_init(void)
 {
@@ -43,4 +58,7 @@ void apn806_init(void)
 
 	/* configure CCU windows */
 	init_ccu();
+
+	/* configure the SMMU */
+	setup_smmu();
 }
diff --git a/plat/marvell/a8k/a70x0/plat_def.h b/plat/marvell/a8k/a70x0/plat_def.h
index 03cce51..8bc16cf 100644
--- a/plat/marvell/a8k/a70x0/plat_def.h
+++ b/plat/marvell/a8k/a70x0/plat_def.h
@@ -56,6 +56,7 @@
 #define MVEBU_DRAM_MAC_BASE		(MVEBU_REGS_BASE + 0x20000)
 #define MVEBU_DRAM_PHY_BASE		(MVEBU_REGS_BASE + 0x20000)
 #define MVEBU_AMB_IP_BASE		(MVEBU_CP0_REGS_BASE + 0x13ff00)
+#define MVEBU_SMMU_BASE			(MVEBU_REGS_BASE + 0x100000)
 
 /*******************************************************************************
  * MVEBU memory map related constants
-- 
1.9.1

