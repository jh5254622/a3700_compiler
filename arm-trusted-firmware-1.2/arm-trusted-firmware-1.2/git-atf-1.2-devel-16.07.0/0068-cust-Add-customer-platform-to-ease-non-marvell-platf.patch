From 009799d8b2a425f219334f80d5bddb702f5ab546 Mon Sep 17 00:00:00 2001
From: Shadi Ammouri <shadi@marvell.com>
Date: Wed, 16 Mar 2016 14:48:58 +0200
Subject: [PATCH 068/239] cust: Add customer platform to ease non-marvell
 platforms porting

- Added a7040_cust platform.
- Reuse a7040_rz platform.mk file.
- Keep only platform dependent porting files as part of the customer platform.

Change-Id: Id97709eb9172596d6d2247f821cc4173b57a141e
Signed-off-by: Shadi Ammouri <shadi@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/28302
Reviewed-by: Haim Boot <hayim@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
---
 .../a8k/a7040_cust/board/marvell_plat_config.c     | 116 +++++++++++++++++++++
 plat/marvell/a8k/a7040_cust/dram_port.c            |  75 +++++++++++++
 plat/marvell/a8k/a7040_cust/platform.mk            |  37 +++++++
 plat/marvell/a8k/a70x0/board/marvell_plat_config.c |   5 -
 plat/marvell/a8k/a70x0/platform.mk                 |  27 +++--
 5 files changed, 244 insertions(+), 16 deletions(-)
 create mode 100644 plat/marvell/a8k/a7040_cust/board/marvell_plat_config.c
 create mode 100644 plat/marvell/a8k/a7040_cust/dram_port.c
 create mode 100644 plat/marvell/a8k/a7040_cust/platform.mk

diff --git a/plat/marvell/a8k/a7040_cust/board/marvell_plat_config.c b/plat/marvell/a8k/a7040_cust/board/marvell_plat_config.c
new file mode 100644
index 0000000..34bab5c
--- /dev/null
+++ b/plat/marvell/a8k/a7040_cust/board/marvell_plat_config.c
@@ -0,0 +1,116 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <plat_config.h>
+#include <plat_def.h>
+
+
+/*******************************************************************************
+ * RFU Configuration
+ ******************************************************************************/
+struct rfu_win rfu_memory_map[] = {
+	{0x0,	0xfe000000,	0x0,	0x1f00000,	PCIE_PORT_TID}, /* PCIe window 31Mb for PCIe port*/
+	{0x0,	0xffe00000,	0x0,	0x100000,	PCIE_REGS_TID}, /* PCI-REG window 64Kb for PCIe-reg*/
+	{0x0,	0xf9100000,	0x0,	0x100000,	IHBPHY_TID},	/* IHB window  1Mb for PHY-reg*/
+};
+
+uintptr_t marvell_get_rfu_reg_offs(void)
+{
+	return MVEBU_RFU_BASE;
+}
+
+int marvell_get_rfu_memory_map(struct rfu_win **win, uint32_t *size)
+{
+	*win = rfu_memory_map;
+	*size = sizeof(rfu_memory_map)/sizeof(struct rfu_win);
+
+	return 0;
+}
+
+/*******************************************************************************
+ * IOB Configuration
+ ******************************************************************************/
+#define MARVELL_IOB_MAX_WIN	16
+
+struct iob_win iob_memory_map[] = {
+	{0x0,	0xf7000000,	0x0,	0x1000000,	PEX1_TID}, /* PEX1_X1 window */
+	{0x0,	0xf8000000,	0x0,	0x1000000,	PEX2_TID}, /* PEX2_X1 window */
+	{0x0,	0xf6000000,	0x0,	0x1000000,	PEX0_TID}, /* PEX0_X4 window */
+	{0x0,	0xf9000000,	0x0,	0x1000000,	NAND_TID}  /* NAND window */
+};
+
+uintptr_t marvell_get_iob_reg_offs(void)
+{
+	return MVEBU_IOB_BASE;
+}
+
+int marvell_get_iob_max_win(void)
+{
+	return MARVELL_IOB_MAX_WIN;
+}
+
+int marvell_get_iob_memory_map(struct iob_win **win, uint32_t *size)
+{
+	*win = iob_memory_map;
+	*size = sizeof(iob_memory_map)/sizeof(struct iob_win);
+
+	return 0;
+}
+
+/*******************************************************************************
+ * CCU Configuration
+ ******************************************************************************/
+#define MARVELL_CCU_MAX_WIN	8
+
+struct ccu_win ccu_memory_map[] = {
+	{0x0,	0xf2000000,	0x0,	0xe000000,	IO_0_TID}, /* IO window */
+};
+
+uintptr_t marvell_get_ccu_reg_offs(void)
+{
+	return MVEBU_CCU_BASE;
+}
+
+int marvell_get_ccu_max_win(void)
+{
+	return MARVELL_CCU_MAX_WIN;
+}
+
+int marvell_get_ccu_memory_map(struct ccu_win **win, uint32_t *size)
+{
+	*win = ccu_memory_map;
+	*size = sizeof(ccu_memory_map)/sizeof(struct ccu_win);
+
+	return 0;
+}
diff --git a/plat/marvell/a8k/a7040_cust/dram_port.c b/plat/marvell/a8k/a7040_cust/dram_port.c
new file mode 100644
index 0000000..c9b8346
--- /dev/null
+++ b/plat/marvell/a8k/a7040_cust/dram_port.c
@@ -0,0 +1,75 @@
+/*
+* ***************************************************************************
+* Copyright (C) 2016 Marvell International Ltd.
+* ***************************************************************************
+*
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+*
+* Redistributions of source code must retain the above copyright notice, this
+* list of conditions and the following disclaimer.
+*
+* Redistributions in binary form must reproduce the above copyright notice,
+* this list of conditions and the following disclaimer in the documentation
+* and/or other materials provided with the distribution.
+*
+* Neither the name of Marvell nor the names of its contributors may be used
+* to endorse or promote products derived from this software without specific
+* prior written permission.
+*
+* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGE.
+*
+***************************************************************************
+*/
+
+#include <arch_helpers.h>
+#include <plat_marvell.h>
+#include <debug.h>
+#include <dram_if.h>
+
+struct dram_config dram_cfg = {
+	.iface_mask	= 0x1,
+	.printf		= printf,
+
+	/* Interface configuration */
+	.iface[0] = {
+		.mac_base = (void *)MVEBU_DRAM_MAC_BASE,
+		.phy_base = (void *)MVEBU_DRAM_PHY_BASE,
+		.ecc_enabled	= 0,
+		.cs_count	= 1,
+		.freq_mhz	= 650,
+
+		/* Bus configuration */
+		.bus[0] = {
+			.bus_width = 32,
+			.size_mb   = 0x1000,
+		},
+	},
+};
+
+/* This function may modify the default DRAM parameters
+ * based on information recieved from SPD or bootloader
+ * configuration located on non volatile storage */
+int update_dram_info(struct dram_config *cfg)
+{
+	NOTICE("Gathering DRAM information\n");
+	return 0;
+}
+
+void *plat_get_dram_data(void)
+{
+	/* Update DRAM for dynamic platforms */
+	update_dram_info(&dram_cfg);
+
+	return &dram_cfg;
+}
diff --git a/plat/marvell/a8k/a7040_cust/platform.mk b/plat/marvell/a8k/a7040_cust/platform.mk
new file mode 100644
index 0000000..6028301
--- /dev/null
+++ b/plat/marvell/a8k/a7040_cust/platform.mk
@@ -0,0 +1,37 @@
+#
+# ***************************************************************************
+# Copyright (C) 2016 Marvell International Ltd.
+# ***************************************************************************
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+# Redistributions of source code must retain the above copyright notice, this
+# list of conditions and the following disclaimer.
+#
+# Redistributions in binary form must reproduce the above copyright notice,
+# this list of conditions and the following disclaimer in the documentation
+# and/or other materials provided with the distribution.
+#
+# Neither the name of Marvell nor the names of its contributors may be used
+# to endorse or promote products derived from this software without specific
+# prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+
+PLAT_SOC		:= a7040_rz
+PLAT_SOC_SRC_BASE	:= plat/marvell/a8k/$(PLAT_SOC)
+
+include $(PLAT_SOC_SRC_BASE)/platform.mk
+
diff --git a/plat/marvell/a8k/a70x0/board/marvell_plat_config.c b/plat/marvell/a8k/a70x0/board/marvell_plat_config.c
index 4724f16..34bab5c 100644
--- a/plat/marvell/a8k/a70x0/board/marvell_plat_config.c
+++ b/plat/marvell/a8k/a70x0/board/marvell_plat_config.c
@@ -36,11 +36,6 @@
 #include <plat_def.h>
 
 
-/* Weak definitions may be overridden in specific Marvell standard platform */
-#pragma weak marvell_get_rfu_memory_map
-#pragma weak marvell_get_iob_memory_map
-#pragma weak marvell_get_ccu_memory_map
-
 /*******************************************************************************
  * RFU Configuration
  ******************************************************************************/
diff --git a/plat/marvell/a8k/a70x0/platform.mk b/plat/marvell/a8k/a70x0/platform.mk
index d439d55..9fff791 100644
--- a/plat/marvell/a8k/a70x0/platform.mk
+++ b/plat/marvell/a8k/a70x0/platform.mk
@@ -30,9 +30,10 @@
 # POSSIBILITY OF SUCH DAMAGE.
 #
 
-PLAT_FAMILY			:= a8k
+PLAT_SOC		?= $(PLAT)
+PLAT_FAMILY		:= a8k
 PLAT_FAMILY_BASE	:= plat/marvell/$(PLAT_FAMILY)
-PLAT_SRC_BASE		:= $(PLAT_FAMILY_BASE)/$(PLAT)
+PLAT_SRC_BASE		:= $(PLAT_FAMILY_BASE)/$(PLAT_SOC)
 PLAT_INCLUDE_BASE	:= include/plat/marvell/$(PLAT_FAMILY)
 MARVELL_DRV_BASE	:= drivers/marvell
 
@@ -51,10 +52,10 @@ MARVELL_GIC_SOURCES	:=	drivers/arm/gic/common/gic_common.c	\
 
 ATF_INCLUDES		:=	-Iinclude/common/tbbr
 
-PLAT_INCLUDES		:=	-I$(PLAT_FAMILY_BASE)/$(PLAT)			\
-				-I$(PLAT_FAMILY_BASE)/$(PLAT)/include		\
-				-I$(PLAT_INCLUDE_BASE)/$(PLAT)/board/common	\
-				-I$(PLAT_INCLUDE_BASE)/$(PLAT)/board		\
+PLAT_INCLUDES		:=	-I$(PLAT_SRC_BASE)/				\
+				-I$(PLAT_SRC_BASE)/include			\
+				-I$(PLAT_INCLUDE_BASE)/$(PLAT_SOC)/board/common	\
+				-I$(PLAT_INCLUDE_BASE)/$(PLAT_SOC)/board	\
 				-I$(PLAT_INCLUDE_BASE)/common			\
 				-I$(PLAT_INCLUDE_BASE)/common/aarch64		\
 				-I$(PLAT_SRC_BASE)				\
@@ -62,12 +63,14 @@ PLAT_INCLUDES		:=	-I$(PLAT_FAMILY_BASE)/$(PLAT)			\
 				${ATF_INCLUDES}
 
 PLAT_BL_COMMON_SOURCES	:=	$(PLAT_SRC_BASE)/aarch64/a7040_rz_common.c	\
-				drivers/console/console.S							\
+				drivers/console/console.S			\
 				drivers/ti/uart/16550_console.S
 
-BLE_SOURCES		:=	$(PLAT_SRC_BASE)/dram_port.c			\
-				plat/marvell/common/sys_info.c			\
-				plat/marvell/common/dram_setup.c
+BLE_PORTING_SOURCES	:=	$(PLAT_FAMILY_BASE)/$(PLAT)/dram_port.c
+
+BLE_SOURCES		:=	plat/marvell/common/sys_info.c			\
+				plat/marvell/common/dram_setup.c		\
+				${BLE_PORTING_SOURCES}
 
 BL1_SOURCES		+=	$(PLAT_SRC_BASE)/aarch64/plat_helpers.S	\
 				lib/cpus/aarch64/cortex_a72.S
@@ -80,6 +83,8 @@ MARVELL_DRV		:= 	$(MARVELL_DRV_BASE)/rfu.c	\
 				$(MARVELL_DRV_BASE)/iob.c	\
 				$(MARVELL_DRV_BASE)/ccu.c
 
+BL31_PORTING_SOURCES	:=	$(PLAT_FAMILY_BASE)/$(PLAT)/board/marvell_plat_config.c
+
 BL31_SOURCES		+=	lib/cpus/aarch64/cortex_a72.S				\
 				$(PLAT_SRC_BASE)/aarch64/plat_helpers.S			\
 				$(PLAT_SRC_BASE)/aarch64/plat_psci.S			\
@@ -90,7 +95,7 @@ BL31_SOURCES		+=	lib/cpus/aarch64/cortex_a72.S				\
 				$(PLAT_SRC_BASE)/apn806_setup.c				\
 				$(PLAT_SRC_BASE)/cp110_setup.c				\
 				plat/marvell/common/marvell_gicv2.c			\
-				$(PLAT_SRC_BASE)/board/marvell_plat_config.c		\
+				${BL31_PORTING_SOURCES}					\
 				${MARVELL_DRV}						\
 				${MARVELL_GIC_SOURCES}
 
-- 
1.9.1

