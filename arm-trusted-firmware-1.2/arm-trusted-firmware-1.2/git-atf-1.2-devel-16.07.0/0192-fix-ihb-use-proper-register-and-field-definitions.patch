From aa45c4d6b904e3487414cc862c045a397f98023c Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Sun, 29 May 2016 13:01:07 +0300
Subject: [PATCH 192/239] fix: ihb: use proper register and field definitions

replaced hard-coded values with detailed definitions of the fields.

Change-Id: I47e8fd40106c9abf2119e467f15adfb95f6d3dec
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30114
Reviewed-by: Haim Boot <hayim@marvell.com>
Tested-by: Haim Boot <hayim@marvell.com>
---
 plat/marvell/a8k/a70x0/apn806_setup.c | 44 +++++++++++++++++++++++++++--------
 1 file changed, 34 insertions(+), 10 deletions(-)

diff --git a/plat/marvell/a8k/a70x0/apn806_setup.c b/plat/marvell/a8k/a70x0/apn806_setup.c
index a76d508..7955715 100644
--- a/plat/marvell/a8k/a70x0/apn806_setup.c
+++ b/plat/marvell/a8k/a70x0/apn806_setup.c
@@ -53,12 +53,19 @@
 #define IHBX4_REG_START_ADDRESS_REG(unit_id)	(MVEBU_REGS_BASE + 0x6F4218 + (unit_id * 0x20))
 #define IHB_REMAP_OFF_SHIFT			8
 
-/* IHB indirect access defintions */
+/* IHB indirect access definitions */
 #define IHB_WRITE_READ_DATA_REG(ihb_index)	MVEBU_IHB_REG_BASE_REMAP(ihb_index)
 #define IHB_ACCESS_CMD_REG(ihb_index)		(MVEBU_IHB_REG_BASE_REMAP(ihb_index) + 0x4)
 
 #define IHB_CTRL_STATUS_REG_NUM			5
-#define IHB_CTRL_PHY_READY			0x0f009000 /* expected successful Link result */
+#define IHB_CTRL_STATUS_REG_PHY_READY		(1 << 12)
+#define IHB_CTRL_STATUS_REG_PHY_READY_RESERVERD	(1 << 15)
+#define IHB_CTRL_STATUS_REG_PHY_CID_VIO_OFFSET	24
+#define IHB_CTRL_STATUS_REG_PHY_CID_VIO_MASK	(0xF << IHB_CTRL_STATUS_REG_PHY_CID_VIO_OFFSET)
+/* Expected successful Link result, including reserved bit */
+#define IHB_CTRL_PHY_READY			(IHB_CTRL_STATUS_REG_PHY_READY | \
+						 IHB_CTRL_STATUS_REG_PHY_READY_RESERVERD | \
+						 IHB_CTRL_STATUS_REG_PHY_CID_VIO_MASK)
 
 #define IHB_PHY_PWM3_REG_NUM			7
 #define PWM3_LINK_ERROR_OFFSET			8	/* [11:8] : LINK_ERROR */
@@ -67,11 +74,28 @@
 #define PWM4_NUM_OF_LANES_MASK			(0x7 << PWM4_NUM_OF_LANES_OFFSET)
 #define PWM4_LINK_SPEED_MASK			0x7	/* [3:0] AUTO_SPEED */
 
-#define IHB_PHY_ACCESS_ENABLE			(1 << 22 | 1 << 23)
-#define IHB_INDIRECT_REG_CTRL_ADDR(reg_num)	((reg_num << 16) | 0x21)
 
-#define IHB_REG_ENABLE_PHY_ADDR			((0x7 << 16) | 0x20)
-#define IHB_REG_ENABLE_PHY_DATA			0x03002016
+#define IHB_INDIRECT_CTRL_READ_EN		0x1 /* BIT0 */
+#define IHB_INDIRECT_CTRL_LOCAL_PKT		(1 << 5) /* BIT5: Local destination packet */
+#define IHB_INDIRECT_CTRL_REG_CHIPID_OFST	16
+#define IHB_INDIRECT_REG_CTRL_ADDR(reg_num)	((reg_num << IHB_INDIRECT_CTRL_REG_CHIPID_OFST) | \
+						  IHB_INDIRECT_CTRL_LOCAL_PKT | IHB_INDIRECT_CTRL_READ_EN)
+
+#define IHB_INDIRECT_CTRL_PHY_ACCESS_EN		(0xC0  << IHB_INDIRECT_CTRL_REG_CHIPID_OFST) /* PHY access domain */
+
+#define IHB_PHY_CTRL_ADDR			((IHB_PHY_PWM3_REG_NUM << IHB_INDIRECT_CTRL_REG_CHIPID_OFST) \
+						  | IHB_INDIRECT_CTRL_LOCAL_PKT)
+
+#define IHB_PHY_CTRL_IHB_MINOR			0x6 /* BITS [3:0] */
+#define IHB_PHY_CTRL_IHB_MAJOR_OFFSET		4
+#define IHB_PHY_CTRL_IHB_MAJOR			(1 << IHB_PHY_CTRL_IHB_MAJOR_OFFSET)
+#define IHB_PHY_CTRL_IHB_PHY_MODE_OFFSET	24
+#define IHB_PHY_CTRL_IHB_PHY_MODE_HOST		(1 << IHB_PHY_CTRL_IHB_PHY_MODE_OFFSET)
+#define IHB_PHY_CTRL_IHB_PHY_REG_IF_MODE_OFFSET	25
+#define IHB_PHY_CTRL_IHB_PHY_REG_IF_MODE	(1 << IHB_PHY_CTRL_IHB_PHY_REG_IF_MODE_OFFSET)
+#define IHB_PHY_CTRL_ENABLE_PHY_ACCESS		(IHB_PHY_CTRL_IHB_PHY_MODE_HOST | \
+						IHB_PHY_CTRL_IHB_PHY_REG_IF_MODE | \
+						IHB_PHY_CTRL_IHB_MAJOR | IHB_PHY_CTRL_IHB_MINOR)
 
 enum ihb_register_type {
 	IHB_REG_TYPE_PHY = 0,
@@ -90,12 +114,12 @@ void ihb_remap_indirect_access_base(void)
 		mmio_write_32(IHBX4_REG_START_ADDRESS_REG(i), MVEBU_IHB_REG_BASE_REMAP(i) >> IHB_REMAP_OFF_SHIFT);
 }
 
-/* routine to enable access to PHY registers over IHB0 indirect read/write*/
+/* Routine to enable access to PHY registers over IHB0 indirect read/write*/
 void ihb_enable_phy_regs_access(int ihb_index)
 {
 	/* Enable PHY local access (reg 7 bit 25) */
-	mmio_write_32(IHB_WRITE_READ_DATA_REG(ihb_index), IHB_REG_ENABLE_PHY_DATA);
-	mmio_write_32(IHB_ACCESS_CMD_REG(ihb_index), IHB_REG_ENABLE_PHY_ADDR);
+	mmio_write_32(IHB_WRITE_READ_DATA_REG(ihb_index), IHB_PHY_CTRL_ENABLE_PHY_ACCESS);
+	mmio_write_32(IHB_ACCESS_CMD_REG(ihb_index), IHB_PHY_CTRL_ADDR);
 }
 
 /* read ihb0 PHY/CTRL registers via indirect access */
@@ -105,7 +129,7 @@ uint32_t ihb_indirect_read(int reg_num, enum ihb_register_type reg_type, int ihb
 
 	/* Access to PHY registers requires special configuration */
 	if (reg_type == IHB_REG_TYPE_PHY)
-		indirect_reg_address |= IHB_PHY_ACCESS_ENABLE;
+		indirect_reg_address |= IHB_INDIRECT_CTRL_PHY_ACCESS_EN;
 
 	indirect_reg_address |= IHB_INDIRECT_REG_CTRL_ADDR(reg_num);
 
-- 
1.9.1

