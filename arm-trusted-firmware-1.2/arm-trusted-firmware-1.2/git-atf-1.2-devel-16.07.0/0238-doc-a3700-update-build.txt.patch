From f5f88bfae950a861e3a903ce7acea4fdb55abf21 Mon Sep 17 00:00:00 2001
From: jinghua <jinghua@marvell.com>
Date: Thu, 30 Jun 2016 03:53:31 +0800
Subject: [PATCH 238/239] doc: a3700: update build.txt

- Add WTP tool installation description.
- Add ARM 32-bit cross compiler description, which is for building
  of WTMI image.
- Rename all preset of CPU_xxx_DDR_xx to CPU_xxx_DDR3_xxx
- Add new preset of CPU_xxx_DDR4_xxx.
- Modify a3700 to A3700.

Change-Id: I23779da654aa3c1564131f10eacf8213b974a528
Signed-off-by: jinghua <jinghua@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30857
Reviewed-by: Wilson Ding <dingwei@marvell.com>
Tested-by: Wilson Ding <dingwei@marvell.com>
---
 docs/marvell/build.txt | 68 ++++++++++++++++++++++++++++++++++++--------------
 1 file changed, 49 insertions(+), 19 deletions(-)

diff --git a/docs/marvell/build.txt b/docs/marvell/build.txt
index 5ecd5b2..0e109fc 100644
--- a/docs/marvell/build.txt
+++ b/docs/marvell/build.txt
@@ -31,8 +31,9 @@ Build Instruction:
 	For example: if U-Boot project (and its images) is located at ~/project/u-boot, BL33
 				 should be ~/project/u-boot/u-boot.bin
 	Note: u-boot.bin should be used and not u-boot-spl.bin
-6. A3700 Only:
-	install ARM 32-bit cross compiler, which is required by building WTMI image for CM3.
+6. A3700 Only(Armada-3700 builds required WTP tools installation -
+   Refer to the section "Tools installation for Armada-3700 builds"):
+	Install ARM 32-bit cross compiler, which is required by building WTMI image for CM3.
 	#sudo apt-get install gcc-arm-linux-gnueabi
 7. Clean build residuals: (for non fresh builds)
 	# make distclean
@@ -48,32 +49,29 @@ Build Instruction:
 				LOG_LEVEL_VERBOSE	50
 	- USE_COHERENT_MEM: This flag determines whether to include the coherent memory region in the
 						BL memory map or not. It should be set to 0.
-	- SECURE: For a3700 only, trusted(=1)/non trusted(=0) in wtp, default is non trusted.
-	- CLOCKSPRESET: For a3700 only, the clock tree configuration preset
-			including cpu and ddr frequency, default is CPU_800_DDR_800
-				CPU_600_DDR_600		-	CPU at 600 MHz, DDR at 600 MHz
-				CPU_800_DDR_800		-	CPU at 800 MHz, DDR at 800 MHz
-				CPU_1000_DDR_800	-	CPU at 1000 MHz, DDR at 800 MHz
-	- BOOTDEV: For a3700 only, the flash boot device, default is SPINOR,
-			now a3700 only supports	SPINOR, SPINAND, EMMCNORM and SATA.
+	- SECURE: For A3700 only, trusted(=1)/non trusted(=0) in wtp, default is non trusted.
+	- CLOCKSPRESET: For A3700 only, the clock tree configuration preset
+			including CPU and DDR frequency, default is CPU_800_DDR_800
+				CPU_600_DDR3_600	-	CPU at 600 MHz, DDR3 at 600 MHz
+				CPU_800_DDR3_800	-	CPU at 800 MHz, DDR3 at 800 MHz
+				CPU_1000_DDR3_800	-	CPU at 1000 MHz, DDR3 at 800 MHz
+				CPU_800_DDR4_800	-	CPU at 800 MHz, DDR4 at 800 MHz
+				CPU_1000_DDR4_800	-	CPU at 1000 MHz, DDR4 at 800 MHz
+	- BOOTDEV: For A3700 only, the flash boot device, default is SPINOR,
+			Now A3700 only supports	SPINOR, SPINAND, EMMCNORM and SATA.
 				SPINOR		- SPI NOR flash boot
-				SPINAND		- SPI NAND flash boot
 				EMMCNORM	- eMMC Download Mode
 						Download boot loader or program code from eMMC flash into CM3 or CA53
 						Requires full initialization and command sequence
-				EMMCALT		- eMMC Alternate Download Mode
-						Download boot loader or program code from eMMC flash into CM3 or CA53
-						For cases when the eMMC Device is pre-programmed to support eMMC
-						Alternate Boot Mode.
 				SATA		- SATA device boot
-	- PARTNUM: For a3700 only, the boot partition number, default is 0
+	- PARTNUM: For A3700 only, the boot partition number, default is 0
 
 	For example: in order to build the image in debug mode with log level up to 'notice' level run:
 	# make DEBUG=1 USE_COHERENT_MEM=0 LOG_LEVEL=20 PLAT=<MARVELL_PLATFORM> all fip
-	And if we want to build a a3700 image in debug mode with log level up to 'notice' level run,
-	the image has the preset CPU at 600 MHz, preset DDR at 600 MHz, the image boot from SPI NOR
+	And if we want to build a A3700 image in debug mode with log level up to 'notice' level run,
+	the image has the preset CPU at 600 MHz, preset DDR3 at 600 MHz, the image boot from SPI NOR
 	flash partition 0, and the image is non trusted in wtp, the command line is as following:
-	# make DEBUG=1 USE_COHERENT_MEM=0 LOG_LEVEL=20 SECURE=0 CLOCKSPRESET=CPU_600_DDR_600 BOOTDEV=SPINOR
+	# make DEBUG=1 USE_COHERENT_MEM=0 LOG_LEVEL=20 SECURE=0 CLOCKSPRESET=CPU_600_DDR3_600 BOOTDEV=SPINOR
 	PARTNUM=0 PLAT=<MARVELL_PLATFORM> all fip
 
 	Supported MARVELL_PLATFORM are:
@@ -104,3 +102,35 @@ Build output:
 	flash-image.bin	- Image which contains boot-image.bin and SPL image.
 
 	flash-image.bin should be burnt/placed on the boot flash/device.
+
+Tools installation for Armada-3700 builds:
+------------------------------------------
+1. Extract the tools/wtp/WTPTP_TOOLS_x_x_xx.zip into a temporary directory
+
+   # cd tools/wtp
+   # 7z x WTPTP_TOOLS_x_x_xx.zip
+
+2. If required, add executable permissions to files in the extracted
+   WTPTP_TOOLS_x_x_xx/Linux_Tools folder:
+
+   # sudo chmod a+x WTPTP_TOOLS_x_x_xx/Linux_Tools/*.exe
+
+3. Copy executable files from WTPTP_TOOLS_x_x_xx/Linux_Tools
+   to location pointed to $PATH environment variable.
+   For instance:
+
+   # sudo cp WTPTP_TOOLS_x_x_xx/Linux_Tools/*.exe /usr/local/bin
+
+4. Make sure the "ntbb_linux.exe" can be executed from any
+   location and "make" passes without error.
+
+5. Install a cross GNU ARM tool chain for building the WTMI binary.
+   Any cross GNU ARM tool chain able to build ARM Cortex M3 binaries
+   is suitable.
+   On Debian/Uboot hosts the default GNU ARM tool chain can be installed
+   using the following command:
+   # sudo apt-get install gcc-arm-linux-gnueabi
+   If required, the default tool chain prefix "arm-linux-gnueabi-" can be
+   overwritten using environment variable CROSS_CM3.
+   Example for BASH shell:
+   # export CROSS_CM3=/opt/arm-cross/bin/arm-linux-gnueabi
-- 
1.9.1

