From 4d1a74d761b6119e64c04009cd88e2dffe2a371c Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Sun, 14 Feb 2016 11:10:04 +0200
Subject: [PATCH 138/538] xhci: plat: add support for registering multiple
 clocks

Change-Id: I41bcb10461b9661c592539c31e1d675f68c67e91
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27469
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Shadi Ammouri <shadi@marvell.com>
---
 drivers/usb/host/xhci-plat.c | 46 ++++++++++++++++++++++++++------------------
 drivers/usb/host/xhci.h      |  4 +++-
 2 files changed, 30 insertions(+), 20 deletions(-)

diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index dba3fe2d..24b3d71 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -84,6 +84,7 @@ static int xhci_plat_probe(struct platform_device *pdev)
 	struct clk              *clk;
 	int			ret;
 	int			irq;
+	int			i;
 
 	if (usb_disabled())
 		return -ENODEV;
@@ -123,36 +124,38 @@ static int xhci_plat_probe(struct platform_device *pdev)
 	hcd->rsrc_start = res->start;
 	hcd->rsrc_len = resource_size(res);
 
-	/*
-	 * Not all platforms have a clk so it is not an error if the
-	 * clock does not exists.
-	 */
-	clk = devm_clk_get(&pdev->dev, NULL);
-	if (!IS_ERR(clk)) {
-		ret = clk_prepare_enable(clk);
-		if (ret)
-			goto put_hcd;
-	}
-
 	if (of_device_is_compatible(pdev->dev.of_node,
 				    "marvell,armada-375-xhci") ||
 	    of_device_is_compatible(pdev->dev.of_node,
 				    "marvell,armada-380-xhci")) {
 		ret = xhci_mvebu_mbus_init_quirk(pdev);
 		if (ret)
-			goto disable_clk;
+			goto put_hcd;
 	}
 
 	device_wakeup_enable(hcd->self.controller);
 
 	xhci = hcd_to_xhci(hcd);
-	xhci->clk = clk;
 	xhci->main_hcd = hcd;
 	xhci->shared_hcd = usb_create_shared_hcd(driver, &pdev->dev,
 			dev_name(&pdev->dev), hcd);
 	if (!xhci->shared_hcd) {
 		ret = -ENOMEM;
-		goto disable_clk;
+		goto put_hcd;
+	}
+
+	/*
+	 * Not all platforms have a clk so it is not an error if the
+	 * clock does not exists.
+	 */
+	for (i = 0; i < MAX_XHCI_CLOCKS; i++) {
+		clk = of_clk_get(pdev->dev.of_node, i);
+		if (!IS_ERR(clk)) {
+			ret = clk_prepare_enable(clk);
+			if (ret)
+				goto disable_clk;
+			xhci->clk[i] = clk;
+		}
 	}
 
 	if ((node && of_property_read_bool(node, "usb3-lpm-capable")) ||
@@ -195,8 +198,10 @@ put_usb3_hcd:
 	usb_put_hcd(xhci->shared_hcd);
 
 disable_clk:
-	if (!IS_ERR(clk))
-		clk_disable_unprepare(clk);
+	for (i = 0; i < MAX_XHCI_CLOCKS; i++) {
+		if (!IS_ERR(xhci->clk[i]))
+			clk_disable_unprepare(xhci->clk[i]);
+	}
 
 put_hcd:
 	usb_put_hcd(hcd);
@@ -208,7 +213,7 @@ static int xhci_plat_remove(struct platform_device *dev)
 {
 	struct usb_hcd	*hcd = platform_get_drvdata(dev);
 	struct xhci_hcd	*xhci = hcd_to_xhci(hcd);
-	struct clk *clk = xhci->clk;
+	int i;
 
 	usb_remove_hcd(xhci->shared_hcd);
 	usb_phy_shutdown(hcd->usb_phy);
@@ -216,8 +221,11 @@ static int xhci_plat_remove(struct platform_device *dev)
 	usb_remove_hcd(hcd);
 	usb_put_hcd(xhci->shared_hcd);
 
-	if (!IS_ERR(clk))
-		clk_disable_unprepare(clk);
+	for (i = 0; i < MAX_XHCI_CLOCKS; i++) {
+		if (!IS_ERR(xhci->clk[i]))
+			clk_disable_unprepare(xhci->clk[i]);
+	}
+
 	usb_put_hcd(hcd);
 
 	return 0;
diff --git a/drivers/usb/host/xhci.h b/drivers/usb/host/xhci.h
index 0b94512..d53ce1d 100644
--- a/drivers/usb/host/xhci.h
+++ b/drivers/usb/host/xhci.h
@@ -1330,6 +1330,8 @@ union xhci_trb {
 #define TRB_MAX_BUFF_SHIFT		16
 #define TRB_MAX_BUFF_SIZE	(1 << TRB_MAX_BUFF_SHIFT)
 
+#define MAX_XHCI_CLOCKS		4
+
 struct xhci_segment {
 	union xhci_trb		*trbs;
 	/* private to HCD */
@@ -1540,7 +1542,7 @@ struct xhci_hcd {
 	int		msix_count;
 	struct msix_entry	*msix_entries;
 	/* optional clock */
-	struct clk		*clk;
+	struct clk		*clk[MAX_XHCI_CLOCKS];
 	/* data structures */
 	struct xhci_device_context_array *dcbaa;
 	struct xhci_ring	*cmd_ring;
-- 
1.9.1

