From d00cd900395fcea16802e8a5d3df9d73192fb230 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Tue, 23 Feb 2016 10:36:10 +0200
Subject: [PATCH 182/538] dma: mv_xor_v2: added support for optional clock
 registration

The XOR device in CP-110 has to register a gating clock in order
to function. This patch adds an optional clock registration to
mv_xor_v2 driver.

Change-Id: Ic63bdb19bb9f15a2c0e9a174f6b1dd2f7f56747a
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
---
 drivers/dma/mv_xor_v2.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/dma/mv_xor_v2.c b/drivers/dma/mv_xor_v2.c
index 5f76e1d..0dd6fc9 100644
--- a/drivers/dma/mv_xor_v2.c
+++ b/drivers/dma/mv_xor_v2.c
@@ -12,6 +12,7 @@
  * General Public License for more details.
  */
 
+#include <linux/clk.h>
 #include <linux/dma-mapping.h>
 #include <linux/interrupt.h>
 #include <linux/io.h>
@@ -149,6 +150,7 @@ struct mv_xor_v2_device {
 	spinlock_t cookie_lock;
 	void __iomem *dma_base;
 	void __iomem *glob_base;
+	struct clk *clk;
 	struct tasklet_struct irq_tasklet;
 	struct list_head free_sw_desc;
 	struct dma_device dmadev;
@@ -735,6 +737,7 @@ static int mv_xor_v2_probe(struct platform_device *pdev)
 	struct dma_device *dma_dev;
 	struct mv_xor_v2_sw_desc *sw_desc;
 	struct msi_desc *msi_desc;
+	struct device *dev = &pdev->dev;
 
 	dev_notice(&pdev->dev, "Marvell Version 2 XOR driver\n");
 
@@ -754,6 +757,16 @@ static int mv_xor_v2_probe(struct platform_device *pdev)
 
 	platform_set_drvdata(pdev, xor_dev);
 
+	xor_dev->clk = devm_clk_get(dev, NULL);
+	if (!IS_ERR(xor_dev->clk)) {
+		ret = clk_prepare_enable(xor_dev->clk);
+		if (ret) {
+			dev_err(dev, "Failed to enable XOR clock.\n");
+			devm_clk_put(dev, xor_dev->clk);
+			return ret;
+		}
+	}
+
 	ret = platform_msi_domain_alloc_irqs(&pdev->dev, 1,
 					     mv_xor_v2_set_msi_msg);
 	if (ret)
-- 
1.9.1

