From 957cfc335b8b7631b4424efdcb6fbce15a421638 Mon Sep 17 00:00:00 2001
From: Lior Amsalem <alior@marvell.com>
Date: Wed, 24 Feb 2016 11:41:24 +0200
Subject: [PATCH 210/538] fix: dma: mv_xor_v2: fix crash when no more
 decriptors available

Adding support to return NULL pointer to the _prep functions to
notify the request that no more descriptors are available.

Change-Id: I815831d12646055e3acda93a817cd34d855f7b7a
Signed-off-by: Lior Amsalem <alior@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27853
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
---
 drivers/dma/mv_xor_v2.c | 41 ++++++++++++++++++++++++++++++++---------
 1 file changed, 32 insertions(+), 9 deletions(-)

diff --git a/drivers/dma/mv_xor_v2.c b/drivers/dma/mv_xor_v2.c
index 0dd6fc9..5062faf 100644
--- a/drivers/dma/mv_xor_v2.c
+++ b/drivers/dma/mv_xor_v2.c
@@ -375,20 +375,31 @@ mv_xor_v2_prep_sw_desc(struct mv_xor_v2_device *xor_dev)
 	/* Lock the channel */
 	spin_lock_bh(&xor_dev->sw_ll_lock);
 
-	/* get a free SW descriptor from the SW DESQ */
-	sw_desc = list_first_entry(&xor_dev->free_sw_desc,
-				   struct mv_xor_v2_sw_desc, free_list);
-	list_del(&sw_desc->free_list);
+	if (!list_empty(&xor_dev->free_sw_desc)) {
+		/* get a free SW descriptor from the SW DESQ */
+		sw_desc = list_first_entry(&xor_dev->free_sw_desc,
+					   struct mv_xor_v2_sw_desc, free_list);
+		list_del(&sw_desc->free_list);
+
+		/* Release the channel */
+		spin_unlock_bh(&xor_dev->sw_ll_lock);
+
+		/* set the async tx descriptor */
+		dma_async_tx_descriptor_init(&sw_desc->async_tx, &xor_dev->dmachan);
+		sw_desc->async_tx.tx_submit = mv_xor_v2_tx_submit;
+		async_tx_ack(&sw_desc->async_tx);
+
+		return sw_desc;
+	}
 
 	/* Release the channel */
 	spin_unlock_bh(&xor_dev->sw_ll_lock);
 
-	/* set the async tx descriptor */
-	dma_async_tx_descriptor_init(&sw_desc->async_tx, &xor_dev->dmachan);
-	sw_desc->async_tx.tx_submit = mv_xor_v2_tx_submit;
-	async_tx_ack(&sw_desc->async_tx);
+	/* schedule tasklet to free some descriptors */
+	tasklet_schedule(&xor_dev->irq_tasklet);
 
-	return sw_desc;
+	/* no free descriptors */
+	return NULL;
 }
 
 /*
@@ -410,6 +421,10 @@ mv_xor_v2_prep_dma_memcpy(struct dma_chan *chan, dma_addr_t dest, dma_addr_t src
 
 	sw_desc = mv_xor_v2_prep_sw_desc(xor_dev);
 
+	/* did we get a valid descriptor? */
+	if (!sw_desc)
+		return NULL;
+
 	sw_desc->async_tx.flags = flags;
 
 	/* set the HW descriptor */
@@ -474,6 +489,10 @@ mv_xor_v2_prep_dma_xor(struct dma_chan *chan, dma_addr_t dest, dma_addr_t *src,
 
 	sw_desc = mv_xor_v2_prep_sw_desc(xor_dev);
 
+	/* did we get a valid descriptor? */
+	if (!sw_desc)
+		return NULL;
+
 	sw_desc->async_tx.flags = flags;
 
 	/* set the HW descriptor */
@@ -526,6 +545,10 @@ mv_xor_v2_prep_dma_interrupt(struct dma_chan *chan, unsigned long flags)
 
 	sw_desc = mv_xor_v2_prep_sw_desc(xor_dev);
 
+	/* did we get a valid descriptor? */
+	if (!sw_desc)
+		return NULL;
+
 	/* set the HW descriptor */
 	hw_descriptor = &sw_desc->hw_desc;
 
-- 
1.9.1

