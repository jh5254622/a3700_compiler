From fca66b585acafd4f67d7f44b8fe67b8a59849d3e Mon Sep 17 00:00:00 2001
From: Terry Zhou <bjzhou@marvell.com>
Date: Fri, 5 Feb 2016 18:57:11 +0800
Subject: [PATCH 289/538] fix: pinctrl: mvebu: relocate the definiton of MPP

- relocate the soc related MPP definition into per pinctrl driver
- rewrite the default_mpp_ctrl_get/set function with global variable
  and make it more generic.
- mvebu_pinctrl_set_mpps is prepared here for those SOCs which not
  aligned with the default settings.

Change-Id: Ide1a1fa48b7a359656124c1a617a0e0d8f82f6e6
Signed-off-by: Terry Zhou <bjzhou@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27949
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
---
 drivers/pinctrl/mvebu/pinctrl-armada-370.c |  4 +++
 drivers/pinctrl/mvebu/pinctrl-armada-375.c |  4 +++
 drivers/pinctrl/mvebu/pinctrl-armada-38x.c |  4 +++
 drivers/pinctrl/mvebu/pinctrl-armada-39x.c |  4 +++
 drivers/pinctrl/mvebu/pinctrl-armada-xp.c  |  4 +++
 drivers/pinctrl/mvebu/pinctrl-dove.c       |  4 +++
 drivers/pinctrl/mvebu/pinctrl-kirkwood.c   |  5 ++++
 drivers/pinctrl/mvebu/pinctrl-mvebu.c      | 44 ++++++++++++++++++++++++++++--
 drivers/pinctrl/mvebu/pinctrl-mvebu.h      | 33 ++++------------------
 drivers/pinctrl/mvebu/pinctrl-orion.c      |  4 +++
 10 files changed, 79 insertions(+), 31 deletions(-)

diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-370.c b/drivers/pinctrl/mvebu/pinctrl-armada-370.c
index 73dc1bc..72d0649 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-370.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-370.c
@@ -23,6 +23,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static void __iomem *mpp_base;
 
 static int armada_370_mpp_ctrl_get(unsigned pid, unsigned long *config)
diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-375.c b/drivers/pinctrl/mvebu/pinctrl-armada-375.c
index 54e9fbd..6735c60 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-375.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-375.c
@@ -23,6 +23,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static void __iomem *mpp_base;
 
 static int armada_375_mpp_ctrl_get(unsigned pid, unsigned long *config)
diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-38x.c b/drivers/pinctrl/mvebu/pinctrl-armada-38x.c
index 094cb48..95fe27b 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-38x.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-38x.c
@@ -22,6 +22,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static void __iomem *mpp_base;
 static u32 *mpp_saved_regs;
 
diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-39x.c b/drivers/pinctrl/mvebu/pinctrl-armada-39x.c
index fcfe9b4..4c6d917 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-39x.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-39x.c
@@ -22,6 +22,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static void __iomem *mpp_base;
 
 static int armada_39x_mpp_ctrl_get(unsigned pid, unsigned long *config)
diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-xp.c b/drivers/pinctrl/mvebu/pinctrl-armada-xp.c
index bf70e09..b944787 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-xp.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-xp.c
@@ -30,6 +30,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static void __iomem *mpp_base;
 static u32 *mpp_saved_regs;
 
diff --git a/drivers/pinctrl/mvebu/pinctrl-dove.c b/drivers/pinctrl/mvebu/pinctrl-dove.c
index 95bfd06..f25487d 100644
--- a/drivers/pinctrl/mvebu/pinctrl-dove.c
+++ b/drivers/pinctrl/mvebu/pinctrl-dove.c
@@ -24,6 +24,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 /* Internal registers can be configured at any 1 MiB aligned address */
 #define INT_REGS_MASK		~(SZ_1M - 1)
 #define MPP4_REGS_OFFS		0xd0440
diff --git a/drivers/pinctrl/mvebu/pinctrl-kirkwood.c b/drivers/pinctrl/mvebu/pinctrl-kirkwood.c
index 0f07dc55..07671de 100644
--- a/drivers/pinctrl/mvebu/pinctrl-kirkwood.c
+++ b/drivers/pinctrl/mvebu/pinctrl-kirkwood.c
@@ -21,6 +21,11 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
+
 static void __iomem *mpp_base;
 
 static int kirkwood_mpp_ctrl_get(unsigned pid, unsigned long *config)
diff --git a/drivers/pinctrl/mvebu/pinctrl-mvebu.c b/drivers/pinctrl/mvebu/pinctrl-mvebu.c
index 77d2221..faf7649 100644
--- a/drivers/pinctrl/mvebu/pinctrl-mvebu.c
+++ b/drivers/pinctrl/mvebu/pinctrl-mvebu.c
@@ -26,9 +26,10 @@
 
 #include "pinctrl-mvebu.h"
 
-#define MPPS_PER_REG	8
-#define MPP_BITS	4
-#define MPP_MASK	0xf
+/* need to align with the Soc settings, changed by mvebu_pinctrl_set_mpps() */
+static unsigned mpps_per_reg = 8;
+static unsigned mpp_bits = 4;
+static unsigned mpp_mask = 0xf;
 
 struct mvebu_pinctrl_function {
 	const char *name;
@@ -545,6 +546,43 @@ static int mvebu_pinctrl_build_functions(struct platform_device *pdev,
 	return 0;
 }
 
+/*
+ * set the number of pins per reg in the soc, only needed by those
+ * socs which doesn't align to the default settings
+ */
+int mvebu_pinctrl_set_mpps(unsigned int npins)
+{
+	mpps_per_reg = npins;
+	mpp_bits = 32/mpps_per_reg;
+	mpp_mask = ((1UL<<(mpp_bits))-1);
+
+	return 0;
+}
+
+int default_mpp_ctrl_get(void __iomem *base, unsigned int pid,
+				       unsigned long *config)
+{
+	unsigned off = (pid / mpps_per_reg) * mpp_bits;
+	unsigned shift = (pid % mpps_per_reg) * mpp_bits;
+
+	*config = (readl(base + off) >> shift) & mpp_mask;
+
+	return 0;
+}
+
+int default_mpp_ctrl_set(void __iomem *base, unsigned int pid,
+				       unsigned long config)
+{
+	unsigned off = (pid / mpps_per_reg) * mpp_bits;
+	unsigned shift = (pid % mpps_per_reg) * mpp_bits;
+	unsigned long reg;
+
+	reg = readl(base + off) & ~(mpp_mask << shift);
+	writel(reg | (config << shift), base + off);
+
+	return 0;
+}
+
 int mvebu_pinctrl_probe(struct platform_device *pdev)
 {
 	struct mvebu_pinctrl_soc_info *soc = dev_get_platdata(&pdev->dev);
diff --git a/drivers/pinctrl/mvebu/pinctrl-mvebu.h b/drivers/pinctrl/mvebu/pinctrl-mvebu.h
index 65a98e6..7dd621e 100644
--- a/drivers/pinctrl/mvebu/pinctrl-mvebu.h
+++ b/drivers/pinctrl/mvebu/pinctrl-mvebu.h
@@ -173,34 +173,11 @@ struct mvebu_pinctrl_soc_info {
 		.npins = _npins,				\
 	}
 
-#define MVEBU_MPPS_PER_REG	8
-#define MVEBU_MPP_BITS		4
-#define MVEBU_MPP_MASK		0xf
-
-static inline int default_mpp_ctrl_get(void __iomem *base, unsigned int pid,
-				       unsigned long *config)
-{
-	unsigned off = (pid / MVEBU_MPPS_PER_REG) * MVEBU_MPP_BITS;
-	unsigned shift = (pid % MVEBU_MPPS_PER_REG) * MVEBU_MPP_BITS;
-
-	*config = (readl(base + off) >> shift) & MVEBU_MPP_MASK;
-
-	return 0;
-}
-
-static inline int default_mpp_ctrl_set(void __iomem *base, unsigned int pid,
-				       unsigned long config)
-{
-	unsigned off = (pid / MVEBU_MPPS_PER_REG) * MVEBU_MPP_BITS;
-	unsigned shift = (pid % MVEBU_MPPS_PER_REG) * MVEBU_MPP_BITS;
-	unsigned long reg;
-
-	reg = readl(base + off) & ~(MVEBU_MPP_MASK << shift);
-	writel(reg | (config << shift), base + off);
-
-	return 0;
-}
-
+int default_mpp_ctrl_get(void __iomem *base, unsigned int pid,
+				       unsigned long *config);
+int default_mpp_ctrl_set(void __iomem *base, unsigned int pid,
+				       unsigned long config);
+int mvebu_pinctrl_set_mpps(unsigned int npins);
 int mvebu_pinctrl_probe(struct platform_device *pdev);
 int mvebu_pinctrl_remove(struct platform_device *pdev);
 
diff --git a/drivers/pinctrl/mvebu/pinctrl-orion.c b/drivers/pinctrl/mvebu/pinctrl-orion.c
index 3b7122d..f11d2f7 100644
--- a/drivers/pinctrl/mvebu/pinctrl-orion.c
+++ b/drivers/pinctrl/mvebu/pinctrl-orion.c
@@ -29,6 +29,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static void __iomem *mpp_base;
 static void __iomem *high_mpp_base;
 
-- 
1.9.1

