From 047d50d01ec7be57b562bc7f26c72c5ca207b4d8 Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Thu, 5 May 2016 02:05:53 +0800
Subject: [PATCH 388/538] fix: mmc: mvebu: ignore sampling tuning in DDR50 mode

Xenon SD host controller only supports tuning in SDR50
and SDR104 mode for SD cards.
If execute the tuning in DDR50 mode, the host will be in
an uncertain status.
This patch ignores the sampling tuning for Xenon SD
host controller in DDR50 mode
- add a SDHCI quirk SDHCI_QUIRK2_BROKEN_DDR50_TUNING
- ignore tuning in DDR50 mode when this quirk is set
- set this quirk for Xenon SDHCI by default

Change-Id: I53cdf0d0f49173fb8792403f16e7bbda591d4f75
Signed-off-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/29623
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/mmc/host/sdhci-xenon.c | 3 ++-
 drivers/mmc/host/sdhci.c       | 5 +++++
 drivers/mmc/host/sdhci.h       | 3 ++-
 3 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/mmc/host/sdhci-xenon.c b/drivers/mmc/host/sdhci-xenon.c
index a4ddf11..ba5eea4 100644
--- a/drivers/mmc/host/sdhci-xenon.c
+++ b/drivers/mmc/host/sdhci-xenon.c
@@ -1010,7 +1010,8 @@ static struct sdhci_pltfm_data sdhci_xenon_pdata = {
 	.quirks = SDHCI_QUIRK_NO_ENDATTR_IN_NOPDESC |
 		  SDHCI_QUIRK_MULTIBLOCK_READ_ACMD12 |
 		  SDHCI_QUIRK_NO_SIMULT_VDD_AND_POWER,
-	.quirks2 = SDHCI_QUIRK2_TIMING_HS200_HS400,
+	.quirks2 = SDHCI_QUIRK2_TIMING_HS200_HS400 |
+		   SDHCI_QUIRK2_BROKEN_DDR50_TUNING,
 	/* Add SOC specific quirks in the above .quirks, .quirks2
 	 * fields.
 	 */
diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index 3baf1c3..0636dea 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -1925,6 +1925,11 @@ static int sdhci_execute_tuning(struct mmc_host *mmc, u32 opcode)
 	unsigned int tuning_count = 0;
 	bool hs400_tuning;
 
+	/* Some host controller does not support tuning in DDR50 mode */
+	if ((host->timing == MMC_TIMING_UHS_DDR50) &&
+	    (host->quirks2 & SDHCI_QUIRK2_BROKEN_DDR50_TUNING))
+		return 0;
+
 	sdhci_runtime_pm_get(host);
 	spin_lock_irqsave(&host->lock, flags);
 
diff --git a/drivers/mmc/host/sdhci.h b/drivers/mmc/host/sdhci.h
index fbbffd2..091c701 100644
--- a/drivers/mmc/host/sdhci.h
+++ b/drivers/mmc/host/sdhci.h
@@ -421,7 +421,8 @@ struct sdhci_host {
 #define SDHCI_QUIRK2_NEED_DELAY_AFTER_INT_CLK_RST	(1<<16)
 /* Some host controller separates HS200 and HS400 definitions */
 #define SDHCI_QUIRK2_TIMING_HS200_HS400			(1<<17)
-
+/* Some host controller does not support tuning in DDR50 mode */
+#define SDHCI_QUIRK2_BROKEN_DDR50_TUNING		(1<<18)
 	int irq;		/* Device IRQ */
 	void __iomem *ioaddr;	/* Mapped address */
 
-- 
1.9.1

