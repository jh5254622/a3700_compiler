From f7bafcf309948369b4da13e348a181128d8126fd Mon Sep 17 00:00:00 2001
From: Terry Zhou <bjzhou@marvell.com>
Date: Tue, 3 May 2016 16:00:31 +0800
Subject: [PATCH 392/538] clk: mvebu: add gating clk and core clk support for
 msys.

- core clk: DDR and MPLL
- gating clk: GE0/GE1, PEX0, SDIO, USB0, and XOR0

Change-Id: I9d4f04ae00a65a04dedca0cafb8afd75229bae4e
Signed-off-by: Terry Zhou <bjzhou@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/29690
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
Reviewed-by: Lior Amsalem <alior@marvell.com>
---
 .../devicetree/bindings/clock/mvebu-core-clock.txt |   7 +
 .../bindings/clock/mvebu-gated-clock.txt           |  11 ++
 drivers/clk/mvebu/Kconfig                          |   6 +
 drivers/clk/mvebu/Makefile                         |   1 +
 drivers/clk/mvebu/msys.c                           | 142 +++++++++++++++++++++
 5 files changed, 167 insertions(+)
 create mode 100644 drivers/clk/mvebu/msys.c

diff --git a/Documentation/devicetree/bindings/clock/mvebu-core-clock.txt b/Documentation/devicetree/bindings/clock/mvebu-core-clock.txt
index 670c2af..5c13787 100644
--- a/Documentation/devicetree/bindings/clock/mvebu-core-clock.txt
+++ b/Documentation/devicetree/bindings/clock/mvebu-core-clock.txt
@@ -31,6 +31,12 @@ The following is a list of provided IDs and clock names on Armada 39x:
  4 = dclk    (SDRAM Interface Clock)
  5 = refclk  (Reference Clock)
 
+The following is a list of provided IDs and clock names on Msys:
+ 0 = tclk    (Internal Bus clock)
+ 1 = cpuclk  (CPU clock)
+ 2 = ddrclk   (DDR clock)
+ 3 = mpll    (MPLL Clock)
+
 The following is a list of provided IDs and clock names on Kirkwood and Dove:
  0 = tclk   (Internal Bus clock)
  1 = cpuclk (CPU0 clock)
@@ -49,6 +55,7 @@ Required properties:
 	"marvell,armada-380-core-clock" - For Armada 380/385 SoC core clocks
 	"marvell,armada-390-core-clock" - For Armada 39x SoC core clocks
 	"marvell,armada-xp-core-clock" - For Armada XP SoC core clocks
+	"marvell,msys-core-clock" - For Msys family SoC core clocks
 	"marvell,dove-core-clock" - for Dove SoC core clocks
 	"marvell,kirkwood-core-clock" - for Kirkwood SoC (except mv88f6180)
 	"marvell,mv88f6180-core-clock" - for Kirkwood MV88f6180 SoC
diff --git a/Documentation/devicetree/bindings/clock/mvebu-gated-clock.txt b/Documentation/devicetree/bindings/clock/mvebu-gated-clock.txt
index 0ea7b6f..95c722e 100644
--- a/Documentation/devicetree/bindings/clock/mvebu-gated-clock.txt
+++ b/Documentation/devicetree/bindings/clock/mvebu-gated-clock.txt
@@ -143,6 +143,16 @@ ID	Clock	Peripheral
 29	sata1lnk
 30	sata1	SATA Host 0
 
+The following is a list of provided IDs for Msys:
+ID	Clock	Peripheral
+-----------------------------------
+3	ge1	Gigabit Ethernet 1
+4	ge0	Gigabit Ethernet 0
+5	pex0	PCIe Cntrl 0
+17	sdio	SDHCI Host
+18	usb0	USB Host 0
+22	xor0	XOR DMA 0
+
 The following is a list of provided IDs for Dove:
 ID	Clock	Peripheral
 -----------------------------------
@@ -194,6 +204,7 @@ Required properties:
 	"marvell,armada-380-gating-clock" - for Armada 380/385 SoC clock gating
 	"marvell,armada-390-gating-clock" - for Armada 39x SoC clock gating
 	"marvell,armada-xp-gating-clock" - for Armada XP SoC clock gating
+	"marvell,msys-gating-clock" - for Msys SoC clock gating
 	"marvell,dove-gating-clock" - for Dove SoC clock gating
 	"marvell,kirkwood-gating-clock" - for Kirkwood SoC clock gating
 - reg : shall be the register address of the Clock Gating Control register
diff --git a/drivers/clk/mvebu/Kconfig b/drivers/clk/mvebu/Kconfig
index 61d25df..e2a3351 100644
--- a/drivers/clk/mvebu/Kconfig
+++ b/drivers/clk/mvebu/Kconfig
@@ -31,6 +31,12 @@ config ARMADA_XP_CLK
 	select MVEBU_CLK_CPU
 	select MVEBU_CLK_COREDIV
 
+config MSYS_CLK
+	bool
+	select MVEBU_CLK_COMMON
+	select MVEBU_CLK_CPU
+	select MVEBU_CLK_COREDIV
+
 config ARMADA_3700_CLK
 	bool
 	select MVEBU_CLK_COMMON
diff --git a/drivers/clk/mvebu/Makefile b/drivers/clk/mvebu/Makefile
index 7be6dfc..4d2b0b5 100644
--- a/drivers/clk/mvebu/Makefile
+++ b/drivers/clk/mvebu/Makefile
@@ -6,6 +6,7 @@ obj-$(CONFIG_ARMADA_375_CLK)	+= armada-375.o
 obj-$(CONFIG_ARMADA_38X_CLK)	+= armada-38x.o
 obj-$(CONFIG_ARMADA_39X_CLK)	+= armada-39x.o
 obj-$(CONFIG_ARMADA_3700_CLK)	+= armada-3700.o
+obj-$(CONFIG_MSYS_CLK)	+= msys.o
 obj-$(CONFIG_ARMADA_AP806_SYSCON) += ap806-system-controller.o
 obj-$(CONFIG_ARMADA_AP806_CORE_CLK) += ap806-core.o
 obj-$(CONFIG_ARMADA_AP806_RING_CLK) += ap806-ring.o
diff --git a/drivers/clk/mvebu/msys.c b/drivers/clk/mvebu/msys.c
new file mode 100644
index 0000000..17e35c5
--- /dev/null
+++ b/drivers/clk/mvebu/msys.c
@@ -0,0 +1,142 @@
+/*
+ * Marvell MSYS SoC clocks
+ *
+ * Copyright (C) 2012 Marvell
+ *
+ * Gregory CLEMENT <gregory.clement@free-electrons.com>
+ * Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
+ * Andrew Lunn <andrew@lunn.ch>
+ *
+ * This file is licensed under the terms of the GNU General Public
+ * License version 2.  This program is licensed "as is" without any
+ * warranty of any kind, whether express or implied.
+ */
+
+#include <linux/kernel.h>
+#include <linux/clk-provider.h>
+#include <linux/io.h>
+#include <linux/of.h>
+#include "common.h"
+
+
+/* For Msys AlleyCat3 Sample At Reset the CPU, DDR and Main PLL clocks are all
+ * defined in the same time
+ *
+ * SAR1[20:18]   : CPU frequency    DDR frequency   MPLL frequency
+ *		 1  =  667 MHz	    667 MHz	    2000 MHz
+ *		 2  =  400 MHz	    400 MHz	    400 MHz
+ *		 3  =  800 MHz	    800 MHz	    800 MHz
+ *		 5  =  800 MHz	    400 MHz	    800 MHz
+ *		 others reserved.
+ */
+
+#define	    SAR1_MSYS_CPU_DDR_MPLL_FREQ_OPT		18
+#define	    SAR1_MSYS_CPU_DDR_MPLL_FREQ_OPT_MASK	0x7
+
+static u32 __init msys_get_tclk_freq(void __iomem *sar)
+{
+	/* Tclk = 200MHz, no SaR dependency */
+	return 200000000;
+}
+
+static const u32 msys_ac3_cpu_frequencies[] __initconst = {
+	0,
+	667000000,
+	400000000,
+	800000000,
+	0,
+	800000000,
+	0, 0,
+};
+
+static u32 __init msys_get_cpu_freq(void __iomem *sar)
+{
+	u32 cpu_freq = 0;
+	u8 cpu_freq_select = 0;
+
+	cpu_freq_select = ((readl(sar) >> SAR1_MSYS_CPU_DDR_MPLL_FREQ_OPT) &
+			   SAR1_MSYS_CPU_DDR_MPLL_FREQ_OPT_MASK);
+
+	if (of_machine_is_compatible("marvell,msys-ac3"))
+		cpu_freq = msys_ac3_cpu_frequencies[cpu_freq_select];
+
+	if (!cpu_freq)
+		pr_err("CPU freq select unsupported %d\n", cpu_freq_select);
+
+	return cpu_freq;
+}
+
+enum {MSYS_CPU_TO_DDR, MSYS_CPU_TO_MPLL};
+
+static const struct coreclk_ratio msys_core_ratios[] __initconst = {
+	{ .id = MSYS_CPU_TO_DDR, .name = "ddrclk" },
+	{ .id = MSYS_CPU_TO_MPLL, .name = "mpll" },
+};
+
+static const int __initconst msys_ac3_cpu_mpll_ratios[8][2] = {
+	{0, 1}, {3, 1}, {1, 1}, {1, 1},
+	{0, 1}, {1, 1}, {0, 1}, {0, 1},
+};
+
+static const int __initconst msys_ac3_cpu_ddr_ratios[8][2] = {
+	{0, 1}, {1, 1}, {1, 1}, {1, 1},
+	{0, 1}, {1, 2}, {0, 1}, {0, 1},
+};
+
+static void __init msys_get_clk_ratio(
+	void __iomem *sar, int id, int *mult, int *div)
+{
+	u32 opt = ((readl(sar) >> SAR1_MSYS_CPU_DDR_MPLL_FREQ_OPT) &
+		SAR1_MSYS_CPU_DDR_MPLL_FREQ_OPT_MASK);
+
+	switch (id) {
+	case MSYS_CPU_TO_DDR:
+		if (of_machine_is_compatible("marvell,msys-ac3")) {
+			*mult = msys_ac3_cpu_ddr_ratios[opt][0];
+			*div = msys_ac3_cpu_ddr_ratios[opt][1];
+		}
+		break;
+	case MSYS_CPU_TO_MPLL:
+		if (of_machine_is_compatible("marvell,msys-ac3")) {
+			*mult = msys_ac3_cpu_mpll_ratios[opt][0];
+			*div = msys_ac3_cpu_mpll_ratios[opt][1];
+		}
+		break;
+	}
+}
+
+static const struct coreclk_soc_desc msys_core_clocks = {
+	.get_tclk_freq = msys_get_tclk_freq,
+	.get_cpu_freq = msys_get_cpu_freq,
+	.get_clk_ratio = msys_get_clk_ratio,
+	.ratios = msys_core_ratios,
+	.num_ratios = ARRAY_SIZE(msys_core_ratios),
+};
+
+
+/*
+ * Clock Gating Control
+ */
+
+static const struct clk_gating_soc_desc msys_gating_desc[] __initconst = {
+	{ "ge1", NULL, 3, 0 },
+	{ "ge0", NULL, 4, 0 },
+	{ "pex00", NULL, 5, 0 },
+	{ "sdio", NULL, 17, 0 },
+	{ "usb0", NULL, 18, 0 },
+	{ "xor0", NULL, 22, 0 },
+	{ }
+};
+
+static void __init msys_clk_init(struct device_node *np)
+{
+	struct device_node *cgnp =
+		of_find_compatible_node(NULL, NULL, "marvell,msys-gating-clock");
+
+	mvebu_coreclk_setup(np, &msys_core_clocks);
+
+	if (cgnp)
+		mvebu_clk_gating_setup(cgnp, msys_gating_desc);
+}
+CLK_OF_DECLARE(msys_clk, "marvell,msys-core-clock", msys_clk_init);
+
-- 
1.9.1

