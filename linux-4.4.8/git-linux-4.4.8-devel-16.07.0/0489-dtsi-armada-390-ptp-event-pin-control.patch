From 238876eb1ae565a519e4bf1e906b523cf66e5749 Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Wed, 1 Jun 2016 16:28:49 +0300
Subject: [PATCH 489/538] dtsi: armada-390: ptp-event pin control

PTP synchronization from External-Clock (GPS) requires
pin-function alternate capability (pinctrl)

This requires declaration for 2 named func-sets for the
same pin and pinctrl-0/1 device alternating between named sets.

Change-Id: I0bd7e7b54797ea1079e1fa95b294e5c1d03dfde2
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30258
Reviewed-by: Dovrat Zifroni <dovrat@marvell.com>
Tested-by: Dovrat Zifroni <dovrat@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Lior Amsalem <alior@marvell.com>
---
 .../bindings/pinctrl/marvell,ptp-event.txt         | 71 ++++++++++++++++++++++
 arch/arm/boot/dts/armada-390.dtsi                  | 17 ++++++
 2 files changed, 88 insertions(+)
 create mode 100644 Documentation/devicetree/bindings/pinctrl/marvell,ptp-event.txt

diff --git a/Documentation/devicetree/bindings/pinctrl/marvell,ptp-event.txt b/Documentation/devicetree/bindings/pinctrl/marvell,ptp-event.txt
new file mode 100644
index 0000000..6d47f27
--- /dev/null
+++ b/Documentation/devicetree/bindings/pinctrl/marvell,ptp-event.txt
@@ -0,0 +1,71 @@
+* Marvell Armada 39x SoC ptp-event pinctrl driver
+
+Capability to alternate PTP-pin functions gpio/ptp in run-time.
+
+For general understanding pin-control please refer pinctrl.txt.
+
+For gpio refer gpio/gpio.txt.
+Pay attention, gpio request toggles the pin-function to gpio.
+
+The same pin-number is used for gpio and for pin-control.
+Refer
+ pin-control is {mpp10}  here
+ gpio number is <10>  in net/marvell-pp3-platform.txt:"ptp-event-pin"
+
+Required properties:
+- compatible: "marvell,ptp-event",
+- "marvell,mv88f6920-pinctrl"
+  Based on the pinctrl-armada-38x.c::armada_38x_mpp_modes[] variants
+     V_88F6810_PLUS and V_88F6920_PLUS
+- internal-regs: register specifier of MPP registers
+
+Available mpp pins/groups and functions:
+
+name          pins     function-names        Values (for reference)
+====================================================================
+mpp10         10       "gpio", "ptp"         gpio=0, ptp=0x7(0111b)
+
+Other pins related to PTP used with default values without pinctrl:
+mpp8          8        "gpio", "ptp"         gpio=0, ptp=0x7(0111b)
+mpp9          9        "gpio", "ptp"         gpio=0, ptp=0x7(0111b)
+mpp11         11       "gpio", "ptp"         gpio=0, ptp=0x7(0111b)
+
+
+DTS/DTSI configuration EXAMPLE (2 parts)
+========================================
+1). Configuration-SETs for ptp-event pin control:
+internal-regs {
+	pinctrl {
+		compatible = "marvell,mv88f6920-pinctrl";
+		........................................
+		ptp_event_pin_gpio: ptp_event_pin_gpio {
+			marvell,pins = "mpp10";
+			marvell,function = "gpio";
+		};
+		ptp_event_pin_ptp: ptp_event_pin_ptp {
+			marvell,pins = "mpp10";
+			marvell,function = "ptp";
+		};
+	};
+
+
+2). Device for SET alternation:
+	ptp_event: ptp-event {
+		compatible = "marvell,ptp-event";
+		status = "okay";
+		pinctrl-0 = <&ptp_event_pin_gpio>;
+		pinctrl-1 = <&ptp_event_pin_ptp>;
+		pinctrl-names = "gpio", "ptp";
+	};
+
+
+EXAMPLE of init and usage in C-sorce
+====================================
+  Init:
+	pinctrl = devm_pinctrl_get(&pdev->dev);
+	pin_gpio_state = pinctrl_lookup_state(pinctrl, "gpio");
+	pin_ptp_state  = pinctrl_lookup_state(pinctrl, "ptp");
+  Usage - select the state according to required logic:
+	pinctrl_select_state(pinctrl, pin_gpio_state);
+          or
+	pinctrl_select_state(pinctrl, pin_ptp_state);
diff --git a/arch/arm/boot/dts/armada-390.dtsi b/arch/arm/boot/dts/armada-390.dtsi
index 8158977..2465fc8 100644
--- a/arch/arm/boot/dts/armada-390.dtsi
+++ b/arch/arm/boot/dts/armada-390.dtsi
@@ -66,6 +66,14 @@
 							"mpp39", "mpp40", "mpp41";
 					marvell,function = "ge";
 				};
+				ptp_event_pin_gpio: ptp_event_pin_gpio {
+					marvell,pins = "mpp10";
+					marvell,function = "gpio";
+				};
+				ptp_event_pin_ptp: ptp_event_pin_ptp {
+					marvell,pins = "mpp10";
+					marvell,function = "ptp";
+				};
 			};
 			mdio {
 				#address-cells = <1>;
@@ -114,6 +122,7 @@
 			      <MBUS_ID(NSS_TARGET_ID, NSS_REGS_ATTR)  0 NSS_REGS_SIZE>, /* NSS IP registers */
 			      <MBUS_ID(NSS_TARGET_ID, NSS_SPACE_ATTR) 0 NSS_SPACE_SIZE>; /* NSS IP space */
 			clock-frequency = <250000000>;
+			ptp-event-pin = <10>;
 			gop_access = <&mg_base>;
 			msi-parent = <&odmi>;
 
@@ -142,5 +151,13 @@
 				id = <0>;
 			};
 		};
+
+		pp3_ptp_event: ptp-event {
+			compatible = "marvell,ptp-event";
+			status = "okay";
+			pinctrl-0 = <&ptp_event_pin_gpio>;
+			pinctrl-1 = <&ptp_event_pin_ptp>;
+			pinctrl-names = "gpio", "ptp";
+		};
 	};
 };
-- 
1.9.1

