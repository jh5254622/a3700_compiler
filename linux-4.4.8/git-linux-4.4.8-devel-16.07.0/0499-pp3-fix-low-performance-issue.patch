From 0b37dee34a080a8cb709378dead113478da475a3 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Tue, 14 Jun 2016 10:35:32 +0300
Subject: [PATCH 499/538] pp3: fix low performance issue

- Eliminate call to coherency_available() function for each
cache management call.
- Call coherency_available() only once in the probe and update
global variable. On data path driver access only the global variable
- Routing performance for 64 byte packets is 410 kpps

Change-Id: I4db5c2576f536ca57027f8ab82d1bfcb61a97d55
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30446
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Lior Amsalem <alior@marvell.com>
---
 drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h   | 8 ++++----
 drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c | 7 +++----
 drivers/net/ethernet/marvell/pp3/platform/mv_pp3.c   | 1 +
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h b/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h
index f965fde..b658097 100644
--- a/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h
+++ b/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h
@@ -35,8 +35,8 @@ disclaimer.
 #include <linux/interrupt.h>
 #include <linux/platform_device.h>
 #include <linux/dma-mapping.h>
-#include "coherency.h"
 
+extern bool coherency_hard_mode;
 /*
 	access_addr - absolute address: Silicon base + unit base + table base + entry offset
 	words_num   - number of words (word = 32 bits) to read
@@ -92,14 +92,14 @@ static inline void mv_pp3_hw_reg_write(void __iomem *access_addr, u32 data)
 /* Cache coherency functions */
 static inline void mv_pp3_os_cache_io_sync(void *handle)
 {
-	if (likely(coherency_available()))
+	if (likely(coherency_hard_mode))
 		dma_sync_single_for_cpu(handle, (dma_addr_t) NULL,
 			(size_t) NULL, DMA_FROM_DEVICE);
 }
 
 static inline dma_addr_t mv_pp3_os_dma_map_single(struct device *dev, void *addr, size_t size, int direction)
 {
-	if (unlikely(!coherency_available()))
+	if (unlikely(!coherency_hard_mode))
 		return dma_map_single(dev, addr, size, direction);
 
 	return virt_to_phys(addr);
@@ -108,7 +108,7 @@ static inline dma_addr_t mv_pp3_os_dma_map_single(struct device *dev, void *addr
 static inline dma_addr_t mv_pp3_os_dma_map_page(struct device *dev, struct page *page, int offset,
 						size_t size, int direction)
 {
-	if (unlikely(!coherency_available()))
+	if (unlikely(!coherency_hard_mode))
 		return dma_map_page(dev, page, offset, size, direction);
 
 	return pfn_to_dma(dev, page_to_pfn(page)) + offset;
diff --git a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
index dcf32e4..5548f63 100644
--- a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
+++ b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
@@ -359,9 +359,7 @@ void mv_pp3_config_show(void)
 
 	pr_info("  o %d PPCs num supported\n", mv_pp3_fw_ppc_num_get());
 
-#ifdef CONFIG_ARCH_MVEBU
-	pr_info("  o Cache coherency mode: %s\n", coherency_available() ? "HW" : "SW");
-#endif
+	pr_info("  o Cache coherency mode: %s\n", coherency_hard_mode ? "HW" : "SW");
 
 #ifdef CONFIG_MV_PP3_STAT_ERR
 	pr_info("  o ERROR statistics enabled\n");
@@ -1566,6 +1564,7 @@ static int mv_pp3_rx(struct net_device *dev, struct pp3_vport *cpu_vp, struct pp
 	mv_pp3_os_cache_io_sync(dev->dev.parent);
 
 	cpu = cpu_vp->port.cpu.cpu_ctrl->cpu;
+
 #ifdef CONFIG_MV_PP3_DEBUG_CODE
 	if (dev_priv->flags & MV_PP3_F_DBG_RX) {
 		if (occ_dg)
@@ -1573,7 +1572,7 @@ static int mv_pp3_rx(struct net_device *dev, struct pp3_vport *cpu_vp, struct pp
 				dev->name, DEV_PRIV_STATS(dev_priv, cpu)->rx_pkt_dev,
 				rx_swq->frame_num, rx_swq->swq, cpu, budget, occ_dg);
 	}
-#endif
+#endif /* CONFIG_MV_PP3_DEBUG_CODE */
 
 	while ((occ_dg > 0) && (rx_pkt_done < budget)) {
 
diff --git a/drivers/net/ethernet/marvell/pp3/platform/mv_pp3.c b/drivers/net/ethernet/marvell/pp3/platform/mv_pp3.c
index dbc0abd..533700b 100644
--- a/drivers/net/ethernet/marvell/pp3/platform/mv_pp3.c
+++ b/drivers/net/ethernet/marvell/pp3/platform/mv_pp3.c
@@ -49,6 +49,7 @@
 #include "common/mv_sw_if.h"
 #include "a390_gic_odmi_if.h"
 #include "gnss/mv_pp3_gnss_api.h"
+#include "coherency.h"
 
 #define MV_PP3_SHARED_NAME        "mv_pp3_shared"
 
-- 
1.9.1

