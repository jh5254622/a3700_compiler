From e89e09f9c937352e9ed54247e78d7af69b26ee18 Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Thu, 30 Jun 2016 17:16:32 +0800
Subject: [PATCH 537/538] fix: mmc: disable the command conflict error

The "command conflict error" feature is enabled by
default to detect command conflict between host and
device and report error. When the timing is very high
such as in SD SDR104 mode, the command conflict error may
be reported, which leads to error printing and device reset.
This patch disables this feature that do not to detect and
report the conflict, which does not affect SD/MMC
functionalities.

Change-Id: Ide40c6fb7c5a84e30061b93f82f5e39667580d98
Signed-off-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30856
Reviewed-by: Shadi Ammouri <shadi@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
---
 drivers/mmc/host/sdhci-xenon.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/drivers/mmc/host/sdhci-xenon.c b/drivers/mmc/host/sdhci-xenon.c
index 2e1b5b7..226c892 100644
--- a/drivers/mmc/host/sdhci-xenon.c
+++ b/drivers/mmc/host/sdhci-xenon.c
@@ -852,6 +852,20 @@ static void sdhci_xenon_enable_parallel_tran(struct sdhci_host *host,
 	sdhci_writel(host, reg, SDHC_SYS_EXT_OP_CTRL);
 }
 
+/*
+ * Disable the command conflict warning
+ * between host and device
+ */
+static void sdhci_xenon_disable_cmd_conflict(struct sdhci_host *host,
+					     unsigned char slot)
+{
+	u32 reg;
+
+	reg = sdhci_readl(host, SDHC_SYS_EXT_OP_CTRL);
+	reg |= (0x100 << slot);
+	sdhci_writel(host, reg, SDHC_SYS_EXT_OP_CTRL);
+}
+
 /* Disable re-tuning request, event and auto-retuning*/
 static void sdhci_xenon_setup_tuning(struct sdhci_host *host)
 {
@@ -1147,6 +1161,9 @@ static int sdhci_xenon_slot_probe(struct sdhci_host *host)
 	/* Enable Parallel Transfer Mode */
 	sdhci_xenon_enable_parallel_tran(host, slotno);
 
+	/* Disable command confliction */
+	sdhci_xenon_disable_cmd_conflict(host, slotno);
+
 	/* Do eMMC setup if it is an eMMC slot */
 	if (sdhci_xenon_slot_type_emmc(host, slotno)) {
 		/* Mark the flag which requires Xenon eMMC-specific
-- 
1.9.1

