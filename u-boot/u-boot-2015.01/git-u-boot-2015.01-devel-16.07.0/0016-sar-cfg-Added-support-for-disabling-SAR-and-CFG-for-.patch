From 505e137311ea1e334445a156e6c8cd76aad857d5 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Wed, 5 Mar 2014 10:58:56 +0200
Subject: [PATCH 0016/1240] sar: cfg: Added support for disabling SAR and CFG
 for each board

Change-Id: I8134f475098ff350bdf9b413a7ff9711a4a02fac
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
---
 board/mvebu/armada8k/board-info.c   | 12 ++++++------
 board/mvebu/armada8k/db-8210-info.c |  8 +++++---
 board/mvebu/armada8k/rd-8210-info.c |  9 +++++++++
 board/mvebu/common/board-common.c   | 26 +++++++++++++++++++++-----
 board/mvebu/common/board.h          |  4 ++--
 board/mvebu/common/config.c         |  2 +-
 board/mvebu/common/config.h         |  1 +
 board/mvebu/common/sar.c            |  2 +-
 board/mvebu/common/sar.h            |  1 +
 9 files changed, 47 insertions(+), 18 deletions(-)

diff --git a/board/mvebu/armada8k/board-info.c b/board/mvebu/armada8k/board-info.c
index ad2f895..c00f625 100644
--- a/board/mvebu/armada8k/board-info.c
+++ b/board/mvebu/armada8k/board-info.c
@@ -27,16 +27,16 @@
 /* Define all SAR variables available for SOC */
 /* Assuming their location is equal on all boards */
 struct sar_var a8k_sar_lookup[MAX_SAR] = {
-	[CPUS_NUM_SAR] = {0, 2, 3,
+	[CPUS_NUM_SAR] = {0, 2, 3, 0,
 		{{0x0, "Single CPU", 0},
 		 {0x2, "Dual CPU", 0},
 		 {0x3, "Quad CPU", VAR_IS_DEFUALT} },
 	},
-	[FREQ_SAR] = {2, 5, 2,
+	[FREQ_SAR] = {2, 5, 2, 0,
 		{{0x0, "800 / 400 / 400"},
 		 {0x5, "1200 / 600 / 600"} },
 	},
-	[BOOT_SRC_SAR] = {7, 2, 3,
+	[BOOT_SRC_SAR] = {7, 2, 3, 0,
 		{{0x0, "NAND boot", 0},
 		 {0x2, "SPI boot", VAR_IS_DEFUALT},
 		 {0x3, "NOR boot", 0} },
@@ -54,17 +54,17 @@ struct sar_data a8k_sar = {
 /* Define all board configuration variables */
 /* Assuming their location is equal on all boards */
 struct cfg_var a8k_cfg_lookup[MAX_CFG] = {
-	[BOARD_ID_CFG] = {0, 0, 3, 4,
+	[BOARD_ID_CFG] = {0, 0, 3, 4, 0,
 		{{ARMADA_8021_DB_ID, "DB-8021", VAR_IS_DEFUALT},
 		 {ARMADA_8021_RD_ID, "RD-8021", 0},
 		 {ARMADA_8022_DB_ID, "DB-8022", 0},
 		 {ARMADA_8022_RD_ID, "RD-8022", 0} },
 	},
-	[SERDES_0_CFG] = {1, 0, 3, 2,
+	[SERDES_0_CFG] = {1, 0, 3, 2, 0,
 		{{0x0, "pcie 0", VAR_IS_DEFUALT},
 		 {0x1, "sata 0", 0} },
 	},
-	[SERDES_1_CFG] = {1, 3, 3, 3,
+	[SERDES_1_CFG] = {1, 3, 3, 3, 0,
 		{{0x0, "pcie 1", 0},
 		 {0x1, "sata 1", VAR_IS_DEFUALT},
 		 {0x2, "usb3 1", 0} },
diff --git a/board/mvebu/armada8k/db-8210-info.c b/board/mvebu/armada8k/db-8210-info.c
index ab6aec0..1b005e0 100644
--- a/board/mvebu/armada8k/db-8210-info.c
+++ b/board/mvebu/armada8k/db-8210-info.c
@@ -22,15 +22,17 @@
 #include <asm/arch-mvebu/unit-info.h>
 #include "board-info.h"
 
-struct mvebu_board_config a8021_db_config = {
+struct mvebu_board_config db_a8021_config = {
 	.sar_cnt = 2,
-	.supported_sar = {BOOT_SRC_SAR, CPUS_NUM_SAR},
+	.active_sar = {BOOT_SRC_SAR, CPUS_NUM_SAR},
+	.cfg_cnt = 2,
+	.active_cfg = {BOARD_ID_CFG, SERDES_0_CFG}
 };
 
 struct mvebu_board_info a8021_db_info = {
 	.name = "DB-MV8021",
 	.id = ARMADA_8021_DB_ID,
 	.configurable = 1,
-	.config_data = &a8021_db_config,
+	.config_data = &db_a8021_config,
 };
 
diff --git a/board/mvebu/armada8k/rd-8210-info.c b/board/mvebu/armada8k/rd-8210-info.c
index fea047b..deb2a23 100644
--- a/board/mvebu/armada8k/rd-8210-info.c
+++ b/board/mvebu/armada8k/rd-8210-info.c
@@ -23,6 +23,13 @@
 #include "board-info.h"
 
 
+struct mvebu_board_config rd_a8021_config = {
+	.sar_cnt = 1,
+	.active_sar = {CPUS_NUM_SAR},
+	.cfg_cnt = 1,
+	.active_cfg = {BOARD_ID_CFG}
+};
+
 u16 a8021_rd_unit_disable[MAX_UNIT_ID] = {
 	[NAND_UNIT_ID] = id_to_mask(0),
 	[SDIO_UNIT_ID] = id_to_mask(0)
@@ -33,5 +40,7 @@ struct mvebu_board_info a8021_rd_info = {
 	.id = ARMADA_8021_RD_ID,
 	.unit_mask = a8021_rd_unit_disable,
 	.unit_update_mode = UNIT_INFO_DISABLE,
+	.configurable = 1,
+	.config_data = &rd_a8021_config,
 };
 
diff --git a/board/mvebu/common/board-common.c b/board/mvebu/common/board-common.c
index 5a62243..fd5845d 100644
--- a/board/mvebu/common/board-common.c
+++ b/board/mvebu/common/board-common.c
@@ -46,6 +46,7 @@ int common_board_init(struct mvebu_board_family *board_family)
 	int board_id = board_get_id();
 	struct mvebu_board_info *curr_board;
 	u16 *unit_mask = soc_get_unit_mask_table();
+	int sar_id, cfg_id, idx;
 
 	brd = board_family;
 
@@ -65,11 +66,26 @@ int common_board_init(struct mvebu_board_family *board_family)
 		update_unit_info(unit_mask, curr_board->unit_mask,
 				 curr_board->unit_update_mode);
 
-	/* Update sar tables */
-	/*if (curr_board->configurable) {
-		if (curr_board->config_data->sar_override)
-			update_sar_table();
-	}*/
+	/* Update SAR and CFG for board */
+	if (curr_board->configurable) {
+		struct mvebu_board_config *brd_cfg = curr_board->config_data;
+
+		/* Deactivate all SAR entries */
+		for (sar_id = 0; sar_id < MAX_SAR; sar_id++)
+			brd->sar->sar_lookup[sar_id].active = 0;
+
+		/* Activate board entries */
+		for (idx = 0; idx < brd_cfg->sar_cnt; idx++)
+			brd->sar->sar_lookup[brd_cfg->active_sar[idx]].active = 1;
+
+		/* Deactivate all CFG entries */
+		for (cfg_id = 0; cfg_id < MAX_CFG; cfg_id++)
+			brd->sar->sar_lookup[cfg_id].active = 0;
+
+		/* Activate board entries */
+		for (idx = 0; idx < brd_cfg->cfg_cnt; idx++)
+			brd->sar->sar_lookup[brd_cfg->active_cfg[idx]].active = 1;
+	}
 
 	return 0;
 }
diff --git a/board/mvebu/common/board.h b/board/mvebu/common/board.h
index 6c38d9e..6841fd8 100644
--- a/board/mvebu/common/board.h
+++ b/board/mvebu/common/board.h
@@ -38,10 +38,10 @@
  */
 struct mvebu_board_config {
 	int sar_cnt;
-	enum sar_variables supported_sar[MAX_SAR];
+	enum sar_variables active_sar[MAX_SAR];
 	struct sar_var *sar_override;
 	int cfg_cnt;
-	enum cfg_variables supported_cfg[MAX_SAR];
+	enum cfg_variables active_cfg[MAX_SAR];
 };
 
 /*
diff --git a/board/mvebu/common/config.c b/board/mvebu/common/config.c
index 1b8c494..99a5225 100644
--- a/board/mvebu/common/config.c
+++ b/board/mvebu/common/config.c
@@ -49,7 +49,7 @@ static int i2c_read_dummy(uchar chip, uint addr, int alen, uchar *buffer, int le
 int cfg_is_var_active(int id)
 {
 	struct cfg_var *cfg_table = board_get_cfg_table();
-	return ((cfg_table[id].option_cnt > 0) ? 1 : 0);
+	return cfg_table[id].active;
 }
 
 struct var_opts *cfg_get_var_opts(int id, int *cnt)
diff --git a/board/mvebu/common/config.h b/board/mvebu/common/config.h
index 523ce94..e78d49a 100644
--- a/board/mvebu/common/config.h
+++ b/board/mvebu/common/config.h
@@ -31,6 +31,7 @@ struct cfg_var {
 	u8 start_bit;
 	u8 bit_length;
 	u8 option_cnt;
+	u8 active;
 	struct var_opts option_desc[MAX_VAR_OPTIONS];
 };
 
diff --git a/board/mvebu/common/sar.c b/board/mvebu/common/sar.c
index 90d8df5..d76f00a 100644
--- a/board/mvebu/common/sar.c
+++ b/board/mvebu/common/sar.c
@@ -184,7 +184,7 @@ int sar_get_key_id(const char *key)
 int sar_is_var_active(int id)
 {
 	struct sar_var *sar_table = board_get_sar_table();
-	return ((sar_table[id].option_cnt > 0) ? 1 : 0);
+	return sar_table[id].active;
 }
 
 struct var_opts *sar_get_var_opts(int id, int *cnt)
diff --git a/board/mvebu/common/sar.h b/board/mvebu/common/sar.h
index 6aaa126..72233da 100644
--- a/board/mvebu/common/sar.h
+++ b/board/mvebu/common/sar.h
@@ -31,6 +31,7 @@ struct sar_var {
 	u8 start_bit;
 	u8 bit_length;
 	u8 option_cnt;
+	u8 active;
 	struct var_opts option_desc[MAX_VAR_OPTIONS];
 };
 
-- 
1.9.1

