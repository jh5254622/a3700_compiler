From 07c9690d1d40c53fa6cdf288bd9c1900956135a0 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Mon, 7 Apr 2014 15:54:31 +0300
Subject: [PATCH 0028/1240] a8k: pxp: fixed compilation for A8K palladium XP

Change-Id: I338d5a94fe6549adc6a50a4b4e4694fb4b944608
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
---
 arch/arm/cpu/armv8/armada8k/Makefile           |  1 +
 arch/arm/cpu/armv8/armada8k/clock.c            | 46 ++++++++++++++++++++++++++
 arch/arm/cpu/armv8/armada8k/soc-init.c         |  6 ++--
 arch/arm/cpu/armv8/armada8k/tables.c           |  4 +--
 arch/arm/cpu/mvebu-common/Makefile             |  1 +
 arch/arm/cpu/mvebu-common/misc.c               |  6 ++--
 arch/arm/cpu/mvebu-common/mpp.c                |  6 ++--
 arch/arm/cpu/mvebu-common/timer_aurora_2.c     | 26 +++++++++++++++
 arch/arm/include/asm/arch-armada8k/regs-base.h |  7 ++++
 arch/arm/include/asm/arch-armada8k/soc-info.h  |  3 ++
 board/mvebu/armada8021-pxp/armada8021-pxp.c    | 45 ++-----------------------
 board/mvebu/armada8021-pxp/board-info.c        |  6 ++--
 board/mvebu/armada8021-pxp/db-8210-info.c      |  2 +-
 include/configs/armada8021-pxp.h               | 12 ++++---
 14 files changed, 110 insertions(+), 61 deletions(-)
 create mode 100644 arch/arm/cpu/armv8/armada8k/clock.c
 create mode 100644 arch/arm/cpu/mvebu-common/timer_aurora_2.c

diff --git a/arch/arm/cpu/armv8/armada8k/Makefile b/arch/arm/cpu/armv8/armada8k/Makefile
index fe4e59c..6530bf5 100644
--- a/arch/arm/cpu/armv8/armada8k/Makefile
+++ b/arch/arm/cpu/armv8/armada8k/Makefile
@@ -19,3 +19,4 @@
 
 obj-y += soc-init.o
 obj-y += tables.o
+obj-y += clock.o
diff --git a/arch/arm/cpu/armv8/armada8k/clock.c b/arch/arm/cpu/armv8/armada8k/clock.c
new file mode 100644
index 0000000..fc83ed6
--- /dev/null
+++ b/arch/arm/cpu/armv8/armada8k/clock.c
@@ -0,0 +1,46 @@
+/*
+ * ***************************************************************************
+ * Copyright (C) Marvell International Ltd. and its affiliates
+ * ***************************************************************************
+ * Marvell GPL License Option
+ * If you received this File from Marvell, you may opt to use, redistribute
+ * and/or modify this File in accordance with the terms and conditions of the
+ * General Public License Version 2, June 1991 (the "GPL License"), a copy of
+ * which is available along with the File in the license.txt file or by writing
+ * to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 or on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+ *
+ * THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE
+ * EXPRESSLY DISCLAIMED. The GPL License provides additional details about this
+ * warranty disclaimer.
+ * ***************************************************************************
+ */
+
+#include <common.h>
+#include <asm/arch-mvebu/clock.h>
+
+u32 soc_tclk_get(void)
+{
+	return 200000000;
+}
+
+u32 soc_cpu_clk_get(void)
+{
+	return 200000000;
+}
+
+u32 soc_ddr_clk_get(void)
+{
+	return 200000000;
+}
+
+u32 soc_l2_clk_get(void)
+{
+	return 800000000;
+}
+
+u32 soc_timer_clk_get(void)
+{
+	return 800000000;
+}
diff --git a/arch/arm/cpu/armv8/armada8k/soc-init.c b/arch/arm/cpu/armv8/armada8k/soc-init.c
index a185db1..00c622a 100644
--- a/arch/arm/cpu/armv8/armada8k/soc-init.c
+++ b/arch/arm/cpu/armv8/armada8k/soc-init.c
@@ -37,9 +37,7 @@ int soc_get_id(void)
 	return 8022;
 }
 
-int a8k_init(void)
+struct mvebu_soc_family *soc_init(void)
 {
-	common_soc_init(&a8k_family_info);
-
-	return 0;
+	return &a8k_family_info;
 }
diff --git a/arch/arm/cpu/armv8/armada8k/tables.c b/arch/arm/cpu/armv8/armada8k/tables.c
index 9cc0a20..3281e2f 100644
--- a/arch/arm/cpu/armv8/armada8k/tables.c
+++ b/arch/arm/cpu/armv8/armada8k/tables.c
@@ -58,7 +58,7 @@ u16 armada8022_unit_disable[MAX_UNIT_ID] = {
 };
 
 /* MPP description table. Informative only */
-char a8k_mpp_desc[MAX_MPP_ID + 1][MAX_MPP_OPTS][MAX_MPP_NAME] = {
+char *a8k_mpp_desc[MAX_MPP_ID + 1][MAX_MPP_OPTS] = {
 	{"GPIO_0", "NF_IO_2", "SPI_0_CSn",	"SPI_1_CSn",	"NA",           "ND_IO_2", "NA"},	/* 0  */
 	{"GPIO_1", "NF_IO_3", "SPI_0_MOSI",	"SPI_1_MOSI",	"NA",	        "ND_IO_3", "NA"},	 /* 1  */
 	{"GPIO_2", "NF_IO_4", "PTP_EVENT_REQ",  "C0_LED",	"AU_I2S_DI",	"ND_IO_4", "SPI_1_MOSI"}, /* 2  */
@@ -90,6 +90,6 @@ struct mvebu_soc_family a8k_family_info = {
 	.id   = 8000,
 	.base_unit_info = base_unit_mask_table,
 	.soc_table = a8k_soc_info,
-	.mpp_desc  = a8k_mpp_desc,
+	.mpp_desc  = (char **)a8k_mpp_desc,
 	.adec_type = 0,
 };
diff --git a/arch/arm/cpu/mvebu-common/Makefile b/arch/arm/cpu/mvebu-common/Makefile
index fc4180b..90efbbf 100644
--- a/arch/arm/cpu/mvebu-common/Makefile
+++ b/arch/arm/cpu/mvebu-common/Makefile
@@ -22,5 +22,6 @@ obj-y += soc-init.o
 obj-y += misc.o
 obj-y += mpp.o
 obj-$(CONFIG_AURORA_TIMER) += timer_aurora.o
+obj-$(CONFIG_AURORA_2_TIMER) += timer_aurora_2.o
 obj-$(CONFIG_MVEBU_CA9) += platform.o
 obj-$(CONFIG_ADEC) += adec.o
diff --git a/arch/arm/cpu/mvebu-common/misc.c b/arch/arm/cpu/mvebu-common/misc.c
index 464993e..34afbc6 100644
--- a/arch/arm/cpu/mvebu-common/misc.c
+++ b/arch/arm/cpu/mvebu-common/misc.c
@@ -97,7 +97,7 @@ void mvebu_print_soc_info(void)
 #endif
 #endif
 
-	__print_soc_specific_info();
+	print_soc_specific_info();
 
 }
 
@@ -126,8 +126,8 @@ void reset_cpu(ulong addr) __attribute__((weak, alias("__reset_cpu")));
 
 
 
-void enable_caches(void)
+void _enable_caches(void)
 {
 	/* Nothing to be done */
 }
-
+void enable_caches(void) __attribute__((weak, alias("_enable_caches")));
diff --git a/arch/arm/cpu/mvebu-common/mpp.c b/arch/arm/cpu/mvebu-common/mpp.c
index f383262..0ca84d5 100644
--- a/arch/arm/cpu/mvebu-common/mpp.c
+++ b/arch/arm/cpu/mvebu-common/mpp.c
@@ -93,9 +93,10 @@ u8 mpp_get_pin(int mpp_id)
 void mpp_set_reg(u32 *mpp_reg, int first_reg, int last_reg)
 {
 	int reg;
+	u32 *base = (u32 *)MPP_REGS_BASE;
 
 	for (reg = first_reg; reg < last_reg; reg++, mpp_reg++)
-		writel(*mpp_reg, MPP_REGS_BASE + reg);
+		writel(*mpp_reg, base + reg);
 }
 
 void mpp_set_and_update(u32 *mpp_reg)
@@ -104,6 +105,7 @@ void mpp_set_and_update(u32 *mpp_reg)
 	u32 *update_mask = soc_get_mpp_update_mask();
 	u32 *update_val = soc_get_mpp_update_val();
 	u32 *protect_mask = soc_get_mpp_protect_mask();
+	u32 *base = (u32 *)MPP_REGS_BASE;
 
 	for (i = 0; i < MAX_MPP_REGS; i++) {
 		/* Disable modifying protected MPPs */
@@ -120,7 +122,7 @@ void mpp_set_and_update(u32 *mpp_reg)
 		debug("Set mpp reg 0x%08x\n", mpp_reg[i]);
 
 		/* Write to register */
-		writel(mpp_reg[i], MPP_REGS_BASE + (4 * i));
+		writel(mpp_reg[i], base + i);
 	}
 }
 
diff --git a/arch/arm/cpu/mvebu-common/timer_aurora_2.c b/arch/arm/cpu/mvebu-common/timer_aurora_2.c
new file mode 100644
index 0000000..da2723e
--- /dev/null
+++ b/arch/arm/cpu/mvebu-common/timer_aurora_2.c
@@ -0,0 +1,26 @@
+/*
+ * ***************************************************************************
+ * Copyright (C) Marvell International Ltd. and its affiliates
+ * ***************************************************************************
+ * Marvell GPL License Option
+ * If you received this File from Marvell, you may opt to use, redistribute
+ * and/or modify this File in accordance with the terms and conditions of the
+ * General Public License Version 2, June 1991 (the "GPL License"), a copy of
+ * which is available along with the File in the license.txt file or by writing
+ * to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 or on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+ *
+ * THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE
+ * EXPRESSLY DISCLAIMED. The GPL License provides additional details about this
+ * warranty disclaimer.
+ * ***************************************************************************
+ */
+
+#include <common.h>
+
+/* Currently timer is not needed for ARMv8 */
+int timer_init(void)
+{
+	return 0;
+}
diff --git a/arch/arm/include/asm/arch-armada8k/regs-base.h b/arch/arm/include/asm/arch-armada8k/regs-base.h
index 1f6fadf..be4ef1c 100644
--- a/arch/arm/include/asm/arch-armada8k/regs-base.h
+++ b/arch/arm/include/asm/arch-armada8k/regs-base.h
@@ -27,4 +27,11 @@
 /* List of register base for all units */
 #define MVEBU_ADEC_AP_BASE (MVEBU_REGS_BASE + 0x0)
 
+#define MVEBU_MISC_REGS_BASE	(MVEBU_REGS_BASE + 0x18200)
+#define MVEBU_DEVICE_ID_REG	(MVEBU_MISC_REGS_BASE + 0x38)
+#define MVEBU_DEVICE_REV_REG	(MVEBU_MISC_REGS_BASE + 0x3C)
+#define MVEBU_RESET_MASK_REG	(MVEBU_MISC_REGS_BASE + 0x60)
+#define MVEBU_SOFT_RESET_REG	(MVEBU_MISC_REGS_BASE + 0x64)
+
+
 #endif	/* _ARMADA8K_H_ */
diff --git a/arch/arm/include/asm/arch-armada8k/soc-info.h b/arch/arm/include/asm/arch-armada8k/soc-info.h
index d18ec25..a670951 100644
--- a/arch/arm/include/asm/arch-armada8k/soc-info.h
+++ b/arch/arm/include/asm/arch-armada8k/soc-info.h
@@ -29,4 +29,7 @@
 #define MPP_FIELD_BITS		3
 #define MPP_VAL_MASK		0xF
 
+#define MPPS_PER_REG		(32 / MPP_BIT_CNT)
+#define MAX_MPP_REGS		((MAX_MPP_ID + MPPS_PER_REG) / MPPS_PER_REG)
+
 #endif	/* _SOC_INFO_H_ */
diff --git a/board/mvebu/armada8021-pxp/armada8021-pxp.c b/board/mvebu/armada8021-pxp/armada8021-pxp.c
index 1e97c1d..2d54a92 100644
--- a/board/mvebu/armada8021-pxp/armada8021-pxp.c
+++ b/board/mvebu/armada8021-pxp/armada8021-pxp.c
@@ -28,49 +28,10 @@
 #include <linux/compiler.h>
 #include "board-info.h"
 
-DECLARE_GLOBAL_DATA_PTR;
 
-int board_init(void)
+struct mvebu_board_family *board_init_family(void)
 {
-	debug("Start Armada8021-pxp board init\n");
+	/* Board family specific init goes here */
 
-	a8k_init();
-
-	common_board_init(&a8k_board_family);
-
-	/* a8k specific board init goes here */
-
-	return 0;
-}
-
-int dram_init(void)
-{
-	/*
-	 * Clear spin table so that secondary processors
-	 * observe the correct value after waken up from wfe.
-	 */
-	*(unsigned long *)CPU_RELEASE_ADDR = 0;
-
-	gd->ram_size = PHYS_SDRAM_1_SIZE;
-	return 0;
-}
-
-int timer_init(void)
-{
-	return 0;
-}
-
-/*
- * Board specific reset that is system reset.
- */
-void reset_cpu(ulong addr)
-{
-}
-
-/*
- * Board specific ethernet initialization routine.
- */
-int board_eth_init(bd_t *bis)
-{
-	return 0;
+	return &a8k_board_family;
 }
diff --git a/board/mvebu/armada8021-pxp/board-info.c b/board/mvebu/armada8021-pxp/board-info.c
index 2e6e5bf..4a73663 100644
--- a/board/mvebu/armada8021-pxp/board-info.c
+++ b/board/mvebu/armada8021-pxp/board-info.c
@@ -27,16 +27,16 @@
 /* Define all SAR variables available for SOC */
 /* Assuming their location is equal on all boards */
 struct sar_var a8k_sar_lookup[MAX_SAR] = {
-	[CPUS_NUM_SAR] = {0, 2, 3,
+	[CPUS_NUM_SAR] = {0, 2, 3, 0,
 		{{0x0, "Single CPU", 0},
 		 {0x2, "Dual CPU", 0},
 		 {0x3, "Quad CPU", VAR_IS_DEFUALT} },
 	},
-	[FREQ_SAR] = {2, 5, 2,
+	[FREQ_SAR] = {2, 5, 2, 0,
 		{{0x0, "800 / 400 / 400"},
 		 {0x5, "1200 / 600 / 600"} },
 	},
-	[BOOT_SRC_SAR] = {7, 2, 3,
+	[BOOT_SRC_SAR] = {7, 2, 3, 0,
 		{{0x0, "NAND boot", 0},
 		 {0x2, "SPI boot", VAR_IS_DEFUALT},
 		 {0x3, "NOR boot", 0} },
diff --git a/board/mvebu/armada8021-pxp/db-8210-info.c b/board/mvebu/armada8021-pxp/db-8210-info.c
index ab6aec0..3d3dd4c 100644
--- a/board/mvebu/armada8021-pxp/db-8210-info.c
+++ b/board/mvebu/armada8021-pxp/db-8210-info.c
@@ -24,7 +24,7 @@
 
 struct mvebu_board_config a8021_db_config = {
 	.sar_cnt = 2,
-	.supported_sar = {BOOT_SRC_SAR, CPUS_NUM_SAR},
+	.active_sar = {BOOT_SRC_SAR, CPUS_NUM_SAR},
 };
 
 struct mvebu_board_info a8021_db_info = {
diff --git a/include/configs/armada8021-pxp.h b/include/configs/armada8021-pxp.h
index 9b1e7f2..93b6f38 100644
--- a/include/configs/armada8021-pxp.h
+++ b/include/configs/armada8021-pxp.h
@@ -22,6 +22,14 @@
 
 #include "mvebu-common.h"
 
+#undef CONFIG_SYS_INIT_SP_ADDR
+#undef CONFIG_SYS_MALLOC_LEN
+#undef CONFIG_SYS_LOAD_ADDR
+#undef CONFIG_SYS_SDRAM_BASE
+#undef CONFIG_ENV_IS_NOWHERE
+
+#define CONFIG_AURORA_2_TIMER
+
 #define DEBUG
 
 #define CONFIG_REMAKE_ELF
@@ -185,14 +193,11 @@
 #define CONFIG_BOOTARGS			"console=ttyAMA0 root=/dev/ram0"
 #define CONFIG_BOOTCOMMAND		"bootm $kernel_addr " \
 					"$initrd_addr:$initrd_size $fdt_addr"
-#define CONFIG_BOOTDELAY		-1
 
 /* Do not preserve environment */
 #define CONFIG_ENV_IS_NOWHERE		1
-#define CONFIG_ENV_SIZE			0x1000
 
 /* Monitor Command Prompt */
-#define CONFIG_SYS_CBSIZE		512	/* Console I/O Buffer Size */
 #define CONFIG_SYS_PBSIZE		(CONFIG_SYS_CBSIZE + \
 					sizeof(CONFIG_SYS_PROMPT) + 16)
 #define CONFIG_SYS_HUSH_PARSER
@@ -200,6 +205,5 @@
 #define CONFIG_SYS_BARGSIZE		CONFIG_SYS_CBSIZE
 #define CONFIG_SYS_LONGHELP
 #define CONFIG_CMDLINE_EDITING		1
-#define CONFIG_SYS_MAXARGS		64	/* max command args */
 
 #endif /* __ARMADA8021_PXP_H */
-- 
1.9.1

