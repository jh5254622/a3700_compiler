From c4ecc8f891582a143cc192bea005730f7aa46f55 Mon Sep 17 00:00:00 2001
From: Joe Zhou <shjzhou@marvell.com>
Date: Thu, 11 Sep 2014 13:49:50 +0800
Subject: [PATCH 0073/1240] bubt: add nand support in bubt command

Change-Id: I54ef75cd0bb0fdba167fb2dd3e8be01999b6a613
Signed-off-by: Joe Zhou <shjzhou@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/11635
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 common/mvebu/cmd_bubt.c | 44 ++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 40 insertions(+), 4 deletions(-)

diff --git a/common/mvebu/cmd_bubt.c b/common/mvebu/cmd_bubt.c
index feedced..95d464f 100644
--- a/common/mvebu/cmd_bubt.c
+++ b/common/mvebu/cmd_bubt.c
@@ -24,8 +24,11 @@
 #include <errno.h>
 
 #include <asm/arch-mvebu/unit-info.h>
+
 #include <spi_flash.h>
 
+#include <nand.h>
+
 struct mvebu_image_header {
 	u8	block_id;		/* 0 */
 	u8	rsvd1;			/* 1 */
@@ -125,9 +128,42 @@ int is_spi_active(void)
 #endif /* CONFIG_SPI_FLASH */
 
 #ifdef CONFIG_CMD_NAND
-static int (int image_size)
+static int nand_burn_image(int image_size)
 {
-	return 0;
+	int ret, block_size;
+	nand_info_t *nand;
+	int dev = nand_curr_device;
+
+	if ((dev < 0) || (dev >= CONFIG_SYS_MAX_NAND_DEVICE) ||
+	    (!nand_info[dev].name)) {
+		puts("\nno devices available\n");
+		return 1;
+	}
+	nand = &nand_info[dev];
+	block_size = nand->erasesize;
+
+	/* Align U-Boot size to currently used blocksize */
+	image_size = ((image_size + (block_size - 1)) & (~(block_size-1)));
+
+	/* Erase the U-BOOT image space */
+	printf("Erasing 0x%x - 0x%x:...", 0, image_size);
+	ret = nand_erase(nand, 0, (size_t)image_size);
+	if (ret) {
+		printf("Error!\n");
+		goto error;
+	}
+	printf("Done!\n");
+
+	/* Write the image to flash */
+	printf("Writing image:...");
+	ret = nand_write(nand, 0, (size_t *)&image_size, (void *)get_load_addr());
+	if (ret)
+		printf("Error!\n");
+	else
+		printf("Done!\n");
+
+error:
+	return ret;
 }
 
 int is_nand_active(void)
@@ -348,9 +384,9 @@ struct bubt_dev *find_bubt_dev(char *dev_name)
 
 #ifdef CONFIG_MVEBU_SPI_BOOT
 #define DEFAULT_BUBT_DST "spi"
-#elif CONFIG_MVEBU_NAND_BOOT
+#elif defined(CONFIG_MVEBU_NAND_BOOT)
 #define DEFAULT_BUBT_DST "nand"
-#elif CONFIG_MVEBU_NOR_BOOT
+#elif defined(CONFIG_MVEBU_NOR_BOOT)
 #define DEFAULT_BUBT_DST "nor"
 #else
 #define DEFAULT_BUBT_DST "error"
-- 
1.9.1

