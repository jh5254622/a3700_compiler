From 2997afd58a6465b0277d7190ff448c16fb4c72d8 Mon Sep 17 00:00:00 2001
From: Neta Zur <neta@marvell.com>
Date: Wed, 25 Mar 2015 10:05:16 +0200
Subject: [PATCH 0166/1240] a8k: smp: move affinity code to PSCI functions

The affinity setting is part of the PSCI

Change-Id: I0e61ac0f868b75c611f0f6fda4ccbb358bca2438
Signed-off-by: Neta Zur <neta@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/17854
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
---
 arch/arm/cpu/armv8/armada8k/psci.S | 52 ++++++++++++++++++++++++++------------
 arch/arm/cpu/armv8/start.S         | 23 -----------------
 2 files changed, 36 insertions(+), 39 deletions(-)

diff --git a/arch/arm/cpu/armv8/armada8k/psci.S b/arch/arm/cpu/armv8/armada8k/psci.S
index 8db9811..b765851 100644
--- a/arch/arm/cpu/armv8/armada8k/psci.S
+++ b/arch/arm/cpu/armv8/armada8k/psci.S
@@ -24,10 +24,41 @@
 #include <asm/psci.h>
 #include <asm/macro.h>
 
+#define MVEBU_CCU_HTC_ASET_REG	0x4264
+#define MVEBU_PRIVATE_UID_REG	0x30
+
 .pushsection ._secure.text, "ax"
 
+enable_affinity:
+	/* get current CPU */
+	mrs 	x2, MPIDR_EL1   	/* get current CPU - Use affinity level 1 */
+	asr 	x2, x2, #8
+	and 	x2, x2, #0xff
+
+	/* Activate Affinity between current CPU */
+	mov	x0, #(MVEBU_REGS_BASE)
+	mov     x3, #(MVEBU_CCU_HTC_ASET_REG)
+	orr     x0, x3, x0
+	mov	x3, #0x1
+	lsl     x1, x3, x2
+	str     w1, [x0]
+
+	/* Activate Affinity in CA-57 configuration
+	 * Enable the SMPEN bit in CPUECTLR_EL1 */
+	mrs x0, S3_1_c15_c2_1
+	orr x0, x0, #0x40
+	msr S3_1_c15_c2_1, x0
+	ret
+
 .globl	psci_arch_init
 psci_arch_init:
+	add     x29, x30, 0 /* keep return address */
+	bl	enable_affinity
+	bl	psci_build_stack
+	ret	x29
+
+psci_build_stack:
+
 	mrs     x5, SCR_EL3
 	bic	x5, x5, #1	/* Secure mode */
 	msr	SCR_EL3, x5
@@ -46,7 +77,7 @@ psci_arch_init:
 	lsl	x5, x5, #12
 	sub	sp, x5, x4		/* here's our stack! */
 
-	 ret
+	ret
 
 	/* x1 = target CPU */
 	/* x2 = target PC */
@@ -64,7 +95,7 @@ psci_0_2_cpu_on_64:
 
 	/* set CPU private UID */
 	mov	x0, #(MVEBU_REGS_BASE)
-	add	x3, x0, #0x30
+	add	x3, x0, #(MVEBU_PRIVATE_UID_REG)
 	add     x2, x1, #0x4
 	str 	w2, [x3]
 
@@ -101,22 +132,11 @@ _armada8k_cpu_entry:
 
 	/* set CPU private UID */
 	mov	x0, #(MVEBU_REGS_BASE)
-	add	x3, x0, #0x30
+	add	x3, x0, #(MVEBU_PRIVATE_UID_REG)
 	add     x1, x2, #0x4
 	str 	w1, [x3]
 
-	/* Activate Affinity between cpu0 and cpu1 */
-	mov     x3, #0x4264
-	orr     x0, x3, x0
-	mov	x3, #0x1
-	lsl     x1, x3, x2
-	str     w1, [x0]
-
-	/* Activate Affinity in CA-57 configuration
-	 * Enable the SMPEN bit in CPUECTLR_EL1 */
-	mrs x0, S3_1_c15_c2_1
-	orr x0, x0, #0x40
-	msr S3_1_c15_c2_1, x0
+	bl	enable_affinity
 
 	isb
 
@@ -152,7 +172,7 @@ _armada8k_cpu_entry:
 	bl	gic_init_secure_percpu
 #endif
 
-	bl	psci_arch_init
+	bl	psci_build_stack
 
 	bl	armv8_switch_to_el2
 #ifdef CONFIG_ARMV8_SWITCH_TO_EL1
diff --git a/arch/arm/cpu/armv8/start.S b/arch/arm/cpu/armv8/start.S
index f6da2c7..9d59814 100644
--- a/arch/arm/cpu/armv8/start.S
+++ b/arch/arm/cpu/armv8/start.S
@@ -37,9 +37,6 @@ _start:
 	ldp	x19, x20,[sp], #16
 	ret
 #else
-#ifdef CONFIG_PALLADIUM
-	bl	enable_wa
-#endif
 	b	reset
 
 	.align 3
@@ -195,24 +192,4 @@ ENTRY(c_runtime_cpu_setup)
 	ret
 ENDPROC(c_runtime_cpu_setup)
 
-#ifdef CONFIG_PALLADIUM
-ENTRY(enable_wa)
-	/* This setup is temporary, eventually it should go into
-	 * the PSCI firmware */
-
-	/* Activate Affinity between cpu0 and cpu1 */
-	ldr     x0, =0xf0004264
-	ldr     w1, =0x1
-	str     w1, [x0]
-
-	/* Activate Affinity in CA-57 configuration
-	 * Enable the SMPEN bit in CPUECTLR_EL1 */
-	mrs x0, S3_1_c15_c2_1
-	orr x0, x0, #0x40
-	msr S3_1_c15_c2_1, x0
-
-	ret
-
-ENDPROC(enable_wa)
-#endif /* CONFIG_PALLADIUM */
 #endif /* defined(CONFIG_MVEBU) && defined(CONFIG_SPL_BUILD) */
-- 
1.9.1

