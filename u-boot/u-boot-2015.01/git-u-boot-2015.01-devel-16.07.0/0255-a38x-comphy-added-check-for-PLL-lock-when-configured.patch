From a27b629f3b07a927b006f006b14e7ed30f62ddc6 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Thu, 16 Jul 2015 15:47:53 +0300
Subject: [PATCH 0255/1240] a38x: comphy: added check for PLL lock when
 configured COMPHY as PCIe

Change-Id: I070bcdfcddb7ecf369ce3acc2cf476620df096aa
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/21952
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
---
 arch/arm/include/asm/arch-mvebu/comphy_hpipe.h |  1 +
 drivers/phy/comphy_a38x.c                      | 14 +++++++-------
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/arch/arm/include/asm/arch-mvebu/comphy_hpipe.h b/arch/arm/include/asm/arch-mvebu/comphy_hpipe.h
index 6e58385..1f06a17 100644
--- a/arch/arm/include/asm/arch-mvebu/comphy_hpipe.h
+++ b/arch/arm/include/asm/arch-mvebu/comphy_hpipe.h
@@ -43,6 +43,7 @@
 #define HPIPE_G1_SETTINGS_4_REG                 0x444
 #define HPIPE_G2_SETTINGS_3_REG                 0x448
 #define HPIPE_G2_SETTINGS_4_REG                 0x44C
+#define HPIPE_LANE_STATUS0_REG			0x60C
 #define HPIPE_LANE_CFG4_REG                     0x620
 #define HPIPE_GLOBAL_CLK_CTRL                   0x704
 #define HPIPE_GLOBAL_MISC_CTRL                  0x718
diff --git a/drivers/phy/comphy_a38x.c b/drivers/phy/comphy_a38x.c
index fbdc23d..4ab54a7 100644
--- a/drivers/phy/comphy_a38x.c
+++ b/drivers/phy/comphy_a38x.c
@@ -130,7 +130,7 @@ static void comphy_mux_init(struct chip_serdes_phy_config *ptr_chip_cfg, struct
 	debug_exit();
 }
 
-static int comphy_pcie_power_up(u32 lane, u32 pex_index, u32 comphy_addr, u32 hpipe_addr)
+static int comphy_pcie_power_up(u32 pex_index, u32 comphy_addr, u32 hpipe_addr)
 {
 	debug_enter();
 
@@ -190,14 +190,14 @@ static int comphy_pcie_power_up(u32 lane, u32 pex_index, u32 comphy_addr, u32 hp
 	udelay(20000);
 
 	debug_exit();
-	return 0;
+	return readl(hpipe_addr + HPIPE_LANE_STATUS0_REG) & 0x1;
 }
 
 int comphy_a38x_init(struct chip_serdes_phy_config *ptr_chip_cfg, struct comphy_map *serdes_map)
 {
 	struct comphy_map *ptr_comphy_map;
 	u32 comphy_base_addr, hpipe3_base_addr;
-	u32 comphy_max_count, lane;
+	u32 comphy_max_count, lane, ret = 0;
 	bool is_pex_enabled = false;
 
 	debug_enter();
@@ -216,21 +216,21 @@ int comphy_a38x_init(struct chip_serdes_phy_config *ptr_chip_cfg, struct comphy_
 		switch (ptr_comphy_map->type) {
 		case UNCONNECTED:
 			continue;
-			break;
 		case PEX0:
 		case PEX1:
 		case PEX2:
 		case PEX3:
 			is_pex_enabled = true;
 			/* TODO: add support for PEX by4 initialization */
-			comphy_pcie_power_up(lane, ptr_comphy_map->type - PEX0,
+			ret = comphy_pcie_power_up(ptr_comphy_map->type - PEX0,
 					comphy_base_addr + 0x28 * lane, hpipe3_base_addr + 0x800 * lane);
-			udelay(20);
 			break;
 		default:
 			debug("Unknown SerDes type, skip initialize SerDes %d\n", lane);
-			break;
+			continue;
 		}
+		if (ret == 0)
+			printf("PLL is not locked - Failed to initialize lane %d\n", lane);
 	}
 
 	if (is_pex_enabled) {
-- 
1.9.1

