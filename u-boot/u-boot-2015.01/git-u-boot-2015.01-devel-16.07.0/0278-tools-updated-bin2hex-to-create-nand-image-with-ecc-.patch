From 1671c5b34babfef8093d52120f9570bc1d8d633a Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Sun, 26 Jul 2015 17:27:49 +0300
Subject: [PATCH 0278/1240] tools: updated bin2hex to create nand image with
 ecc info

Change-Id: If06bfb599a7f5575221c01a0bec3fd4a2ba292a9
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/22161
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Shadi Ammouri <shadi@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 scripts/bin2phex.pl | 78 ++++++++++++++++++++++++++++++++++++++---------------
 1 file changed, 57 insertions(+), 21 deletions(-)

diff --git a/scripts/bin2phex.pl b/scripts/bin2phex.pl
index 5ae1975..0d6ff79 100755
--- a/scripts/bin2phex.pl
+++ b/scripts/bin2phex.pl
@@ -1,8 +1,25 @@
 #!/usr/bin/perl
 
+# This table describes the total size read by the NFC
+# controller depending on the page size and ecc strength
+# The input image must contain ecc information based on
+# marvell NFC data layout
+our %chunk_info = (
+	# page size
+	2048 => {
+		# ecc size
+		4 =>  { data_size => 2112},
+	},
+	4096 => {
+		# ecc size
+		4 =>  { data_size => 4222},
+	},
+);
+
 sub bin2hex
 {
-	my ($in_file, $out_file, $base_addr, $width, $page_size) = @_;
+	my ($in_file, $out_file, $base_addr, $width, $page_size, $ecc_size) = @_;
+	my $ecc_info;
 
 	unless(open ($src, "<$in_file"))
 	{
@@ -19,8 +36,13 @@ sub bin2hex
 
 	# Convert base address to 16 byte resolution
 	my $addr = sprintf("%d", hex($base_addr));
-	my $addr_str = sprintf("@%07x",$addr / $width);
-	print $dst "$addr_str\n";
+	my $data_size = undef;
+	if ($page_size) {
+		# For Double the base address to acount
+		# for the spare area page
+		$addr = $addr * 2;
+		$data_size = $page_size;
+	}
 
 	my @bin;
 	while (<$src>)
@@ -29,32 +51,45 @@ sub bin2hex
 		push(@bin, @bytes);
 	}
 
+
+	# extract the actual data size based on page and ecc size
+	if ($ecc_size) {
+		unless (exists $chunk_info{$page_size}{$ecc_size}) {
+			print ("Failed to find ecc info in table\n");
+			goto ERROR;
+		}
+		$data_size = $chunk_info{$page_size}{$ecc_size}{data_size};
+	}
+
 	my $size = scalar(@bin);
-	my $idx = 0;
+	my $in_idx = 0;
+	my $out_idx = $addr;
+
+	# Put the base address
+	my $addr_str = sprintf("@%07x",$addr / $width);
+	print $dst "$addr_str\n";
+
 	while ($size > 0) {
 
 		$byte = 0;
 		while ($byte < $width) {
-			print $dst @bin[$idx + ($width - 1) - $byte];
+			print $dst @bin[$in_idx + ($width - 1) - $byte];
 			$byte++;
 		}
 
 		print $dst "\n";
-		$idx += $width;
+		$in_idx += $width;
+		$out_idx += $width;
 		$size -= $width;
 
-		# Fill spare size with FF
-		if(defined($page_size) and (($idx % $page_size) == 0)) {
-			my $spare = $page_size;
-			while ($spare > 0) {
-				$byte = 0;
-				while ($byte < $width) {
-					print $dst "ff";
-					$byte++;
-				}
-				print $dst "\n";
-				$spare -= $width;
-			}
+		# PD model allocates a full page for the spare are while
+		# only some if it used. Find where the real data ends
+		# and increment the address to the next page.
+		if(defined($data_size) and (($in_idx % $data_size) == 0)) {
+			# Round up address to next page
+			$out_idx = int(($out_idx + $page_size - 1) / $page_size) * $page_size ;
+			my $addr_str = sprintf("@%07x",$out_idx	/ $width);
+			print $dst "$addr_str\n";
 		}
 	}
 
@@ -78,6 +113,7 @@ sub usage
 	print "\t-w\tByte width of output file upto 16.\n";
 	print "\t  \tMust be power of 2 (1,2,4,8...). Default = 16\n";
 	print "\t-p\tNand page size. Can be 2048, 4096, or 8192\n";
+	print "\t-e\tECC strength. Can be 4, 8, 12, or 16\n";
 	print "\n";
 }
 
@@ -86,9 +122,9 @@ use strict;
 use warnings;
 use Getopt::Std;
 
-use vars qw($opt_o $opt_b $opt_h $opt_i $opt_w $opt_p);
+use vars qw($opt_o $opt_b $opt_h $opt_i $opt_w $opt_p $opt_e);
 
-getopt('o:i:b:w:p');
+getopt('o:i:b:w:p:e');
 
 if ($opt_h)
 {
@@ -139,7 +175,7 @@ if ($opt_p) {
 	}
 }
 
-if(bin2hex($opt_i, $opt_o, $opt_b, $opt_w, $opt_p)) {
+if(bin2hex($opt_i, $opt_o, $opt_b, $opt_w, $opt_p, $opt_e)) {
 	printf "\nError: Failed converting image\n\n";
 	exit 1;
 }
-- 
1.9.1

