From 15414d84dae5db852fcaeb35bc18bbec0cdda466 Mon Sep 17 00:00:00 2001
From: Neta Zur <neta@marvell.com>
Date: Thu, 3 Sep 2015 10:59:59 +0300
Subject: [PATCH 0399/1240] fix: thermal: update thermal v2 driver

- fix mvebu-thermal-v2.txt register offset
- fix thermal start bit offset
- add loop with timeout to check the valid bit
- get tsen_divisor from device tree

Change-Id: I7f05c1c8295249d085a8ab51e0b52327e8f9fa10
Signed-off-by: Neta Zur <neta@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/23406
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 .../thermal/mvebu-thermal-v2.txt                   |  2 +-
 drivers/thermal/mvebu_thermal_28nm_v2.c            | 22 ++++++++++++++++------
 2 files changed, 17 insertions(+), 7 deletions(-)

diff --git a/doc/device-tree-bindings/thermal/mvebu-thermal-v2.txt b/doc/device-tree-bindings/thermal/mvebu-thermal-v2.txt
index 70f8779..4f018de 100644
--- a/doc/device-tree-bindings/thermal/mvebu-thermal-v2.txt
+++ b/doc/device-tree-bindings/thermal/mvebu-thermal-v2.txt
@@ -25,7 +25,7 @@ T(in celsius) = (T(read value) * 425 + 153400) / 1000
 Example:
 	thermal: thermal@ {
 		compatible = "marvell,thermal-sensor-v2";
-		reg = <0x7F0084 0x12>;
+		reg = <0x6f8084 0x12>;
 		gain = <425>;
 		offset = <153400>;
 		divisor = <1000>;
diff --git a/drivers/thermal/mvebu_thermal_28nm_v2.c b/drivers/thermal/mvebu_thermal_28nm_v2.c
index 815dfc0..6573929 100644
--- a/drivers/thermal/mvebu_thermal_28nm_v2.c
+++ b/drivers/thermal/mvebu_thermal_28nm_v2.c
@@ -16,8 +16,6 @@
  * ***************************************************************************
  */
 
-#define DEBUG
-
 #include <common.h>
 #include <asm/io.h>
 #include <fdtdec.h>
@@ -32,13 +30,16 @@ struct tsen_info {
 	u32 tsen_offset;
 	u32 tsen_gain;
 	u32 tsen_ready;
+	u32 tsen_divisor;
 };
 
 struct tsen_info __attribute__((section(".data")))tsen_config;
 struct tsen_info __attribute__((section(".data")))*tsen = &tsen_config;
 
+#define THERMAL_TIMEOUT		1000
+
 #define THERMAL_SEN_CTRL_LSB				0x0
-#define THERMAL_SEN_CTRL_LSB_STRT_OFFSET		1
+#define THERMAL_SEN_CTRL_LSB_STRT_OFFSET		0
 #define THERMAL_SEN_CTRL_LSB_STRT_MASK			(0x1 << THERMAL_SEN_CTRL_LSB_STRT_OFFSET)
 #define THERMAL_SEN_CTRL_LSB_RST_OFFSET			1
 #define THERMAL_SEN_CTRL_LSB_RST_MASK			(0x1 << THERMAL_SEN_CTRL_LSB_RST_OFFSET)
@@ -70,13 +71,13 @@ u32 mvebu_thermal_sensor_read(void)
 	if (reg >= THERMAL_SEN_OUTPUT_MSB)
 		reg -= THERMAL_SEN_OUTPUT_COMP;
 
-	return ((tsen->tsen_gain * reg) + tsen->tsen_offset) / 1000;
+	return ((tsen->tsen_gain * reg) + tsen->tsen_offset) / tsen->tsen_divisor;
 }
 
 u32 mvebu_thermal_sensor_probe(void)
 {
 	const void *blob = gd->fdt_blob;
-	u32 node, reg;
+	u32 node, reg, timeout = 0;
 
 	debug_enter();
 	debug("Initializing thermal sensor V2 unit\n");
@@ -105,6 +106,11 @@ u32 mvebu_thermal_sensor_probe(void)
 		debug("%s: missing offset field for thermal sensor node", __func__);
 		return -1;
 	}
+	tsen->tsen_divisor = fdtdec_get_int(blob, node, "divisor", -1);
+	if (tsen->tsen_divisor == -1) {
+		debug("%s: divisor offset field for thermal sensor node", __func__);
+		return -1;
+	}
 
 	/* Initialize thermal sensor hardware reset once */
 	reg = readl(tsen->regs_base + THERMAL_SEN_CTRL_LSB);
@@ -113,8 +119,12 @@ u32 mvebu_thermal_sensor_probe(void)
 	reg |= THERMAL_SEN_CTRL_LSB_STRT_MASK; /* Set TSEN_START to 1 */
 	writel(reg, tsen->regs_base + THERMAL_SEN_CTRL_LSB);
 
-	udelay(10); /* wait 10 ms and check if the TSEN is ready */
 	reg = readl(tsen->regs_base + THERMAL_SEN_CTRL_STATS);
+	while ((reg & THERMAL_SEN_CTRL_STATS_VALID_MASK) == 0 && timeout < THERMAL_TIMEOUT) {
+		udelay(1);
+		reg = readl(tsen->regs_base + THERMAL_SEN_CTRL_STATS);
+		timeout++;
+	}
 	if ((reg & THERMAL_SEN_CTRL_STATS_VALID_MASK) == 0) {
 		error("%s: thermal sensor is not ready\n", __func__);
 		return -1;
-- 
1.9.1

