From ab31b80306296bdd022a667d09f5c9fb78db05f3 Mon Sep 17 00:00:00 2001
From: Shadi Ammouri <shadi@marvell.com>
Date: Thu, 22 Oct 2015 15:38:01 +0300
Subject: [PATCH 0446/1240] spi: Switch to 4 address cycle mode for supported
 flashes

	- Enable 4 address mode by sending the proper command if
	the flash supports 4 address cycles.
	- Was tested on STMICRO N25Q1024 SPI flash.

Change-Id: Ie1c7d42f6e32a50f858a5eb76189f57863afd52d
Signed-off-by: Shadi Ammouri <shadi@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/24225
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
---
 drivers/mtd/spi/sf_internal.h |  7 +++++++
 drivers/mtd/spi/sf_ops.c      | 25 +++++++++++++++++++++++++
 drivers/mtd/spi/sf_probe.c    |  6 ++++++
 3 files changed, 38 insertions(+)

diff --git a/drivers/mtd/spi/sf_internal.h b/drivers/mtd/spi/sf_internal.h
index 982d82b..3dc892d 100644
--- a/drivers/mtd/spi/sf_internal.h
+++ b/drivers/mtd/spi/sf_internal.h
@@ -76,6 +76,10 @@ enum {
 #define CMD_READ_CONFIG		0x35
 #define CMD_FLAG_STATUS		0x70
 
+/* Used to switch to / from 4-addr cycles mode */
+#define	CMD_ENTER_4B_ADDR		0xB7
+#define	CMD_EXIT_4B_ADDR		0xE9
+
 /* Read commands */
 #define CMD_READ_ARRAY_SLOW		0x03
 #define CMD_READ_ARRAY_FAST		0x0b
@@ -175,6 +179,9 @@ int spi_flash_cmd_read_config(struct spi_flash *flash, u8 *rc);
 /* Program the config register */
 int spi_flash_cmd_write_config(struct spi_flash *flash, u8 wc);
 
+/* Switch to 4 address cycles */
+int spi_flash_cmd_4B_addr_switch(struct spi_flash *flash, int enable);
+
 /* Enable writing on the SPI flash */
 static inline int spi_flash_cmd_write_enable(struct spi_flash *flash)
 {
diff --git a/drivers/mtd/spi/sf_ops.c b/drivers/mtd/spi/sf_ops.c
index e0fcd5d..568fd62 100644
--- a/drivers/mtd/spi/sf_ops.c
+++ b/drivers/mtd/spi/sf_ops.c
@@ -437,6 +437,31 @@ int spi_flash_cmd_read_ops(struct spi_flash *flash, u32 offset,
 	return ret;
 }
 
+int spi_flash_cmd_4B_addr_switch(struct spi_flash *flash, int enable)
+{
+	int ret;
+	u8 cmd;
+
+	cmd = enable ? CMD_ENTER_4B_ADDR : CMD_EXIT_4B_ADDR;
+
+	ret = spi_claim_bus(flash->spi);
+	if (ret) {
+		debug("SF: unable to claim SPI bus\n");
+		return ret;
+	}
+
+	ret = spi_flash_cmd_write_enable(flash);
+	if (ret < 0) {
+		spi_release_bus(flash->spi);
+		debug("SF: enabling write failed\n");
+		return ret;
+	}
+
+	ret = spi_flash_cmd(flash->spi, cmd, NULL, 0);
+	spi_release_bus(flash->spi);
+	return ret;
+}
+
 #ifdef CONFIG_SPI_FLASH_SST
 static int sst_byte_write(struct spi_flash *flash, u32 offset, const void *buf)
 {
diff --git a/drivers/mtd/spi/sf_probe.c b/drivers/mtd/spi/sf_probe.c
index ec97b78..9da60b8 100644
--- a/drivers/mtd/spi/sf_probe.c
+++ b/drivers/mtd/spi/sf_probe.c
@@ -250,6 +250,12 @@ static int spi_flash_validate_params(struct spi_slave *spi, u8 *idcode,
 	}
 #endif
 
+	if (params->flags & ADDR_CYC_4) {
+		/* Switch to 4 address cycles if the flash supports it. */
+		if (spi_flash_cmd_4B_addr_switch(flash, 1) < 0)
+			debug("SF: enter 4B address mode failed\n");
+	}
+
 	/* Flash powers up read-only, so clear BP# bits */
 #if defined(CONFIG_SPI_FLASH_ATMEL) || \
 	defined(CONFIG_SPI_FLASH_MACRONIX) || \
-- 
1.9.1

