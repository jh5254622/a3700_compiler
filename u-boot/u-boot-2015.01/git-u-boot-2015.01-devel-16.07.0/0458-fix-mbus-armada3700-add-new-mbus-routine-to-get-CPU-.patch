From 52ebda0469e5f911eea2eb7e97ac0e72d94673e9 Mon Sep 17 00:00:00 2001
From: Jing Hua <jinghua@marvell.com>
Date: Wed, 14 Oct 2015 13:25:19 +0800
Subject: [PATCH 0458/1240] fix: mbus: armada3700: add new mbus routine to get
 CPU-DRAM window mapping

	add new mbus routine mbus_win_map_build to get CPU-DRAM
	window mapping,	so other units like SATA could configure
	address decode windows correctly.

Change-Id: I446082f4420647b4dc86d5f0ffd0c219782e4749
Signed-off-by: Jing Hua <jinghua@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/23983
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
---
 arch/arm/include/asm/arch-mvebu/mbus.h | 17 ++++++++
 drivers/misc/mvebu_mbus.c              | 75 ++++++++++++++++++++++++++++++----
 2 files changed, 83 insertions(+), 9 deletions(-)

diff --git a/arch/arm/include/asm/arch-mvebu/mbus.h b/arch/arm/include/asm/arch-mvebu/mbus.h
index c30255c..41b485c 100644
--- a/arch/arm/include/asm/arch-mvebu/mbus.h
+++ b/arch/arm/include/asm/arch-mvebu/mbus.h
@@ -19,9 +19,26 @@
 #ifndef _MBUS_H_
 #define _MBUS_H_
 
+#define MBUS_WIN_MAP_NUM_MAX	8
+
+struct mbus_win {
+	u32 target;
+	uintptr_t base_addr;
+	uintptr_t win_size;
+	u32 attribute;
+	u32 remapped;
+	u32 enabled;
+};
+
+struct  mbus_win_map {
+	struct mbus_win mbus_windows[MBUS_WIN_MAP_NUM_MAX];
+	int mbus_win_num;
+};
+
 void dump_mbus(void);
 int init_mbus(void);
 int remap_mbus(phys_addr_t input, phys_addr_t output);
+void mbus_win_map_build(struct mbus_win_map *win_map);
 
 #endif /* _MBUS_H_ */
 
diff --git a/drivers/misc/mvebu_mbus.c b/drivers/misc/mvebu_mbus.c
index dec1893..c74710a 100644
--- a/drivers/misc/mvebu_mbus.c
+++ b/drivers/misc/mvebu_mbus.c
@@ -48,14 +48,6 @@ struct mbus_fdt_info {
 	u32 flags;
 };
 
-struct mbus_win {
-	u32 target;
-	uintptr_t base_addr;
-	uintptr_t win_size;
-	u32 attribute;
-	u32 remapped;
-	u32 enabled;
-};
 
 static void mbus_win_check(struct mbus_win *win, u32 win_num)
 {
@@ -72,7 +64,6 @@ static void mbus_win_check(struct mbus_win *win, u32 win_num)
 		printf("Align up the size to 0x%lx\n", win->win_size);
 	}
 }
-
 static void mbus_win_set(struct mbus_win *win, u32 win_num)
 {
 	u32 base_reg, ctrl_reg, size_reg, win_size, remap_low;
@@ -102,6 +93,72 @@ static void mbus_win_set(struct mbus_win *win, u32 win_num)
 	return;
 }
 
+/*
+ * mbus_win_get
+ *
+ * This function gets one CPU decode window configuration
+ * according to input window number by reading CPU decode
+ * window registers.
+ *
+ * @input:
+ *     - win_num: number of CPU decode window
+ *
+ * @output:
+ *     - win: configuration of this CPU decode window
+ *
+ * @return:  N/A
+ */
+static void mbus_win_get(struct mbus_win *win, u32 win_num)
+{
+	u32 base_reg, ctrl_reg, size_reg;
+
+	ctrl_reg = readl(mbus_info->mbus_base + MBUS_WIN_CTRL_REG(win_num));
+	base_reg = readl(mbus_info->mbus_base + MBUS_WIN_BASE_REG(win_num));
+	size_reg = readl(mbus_info->mbus_base + MBUS_WIN_SIZE_REG(win_num));
+
+	win->base_addr = (base_reg & MBUS_BR_BASE_MASK) >> MBUS_BR_BASE_OFFS;
+	win->win_size = (size_reg & MBUS_CR_WIN_SIZE_MASK) >> MBUS_CR_WIN_SIZE_OFFS;
+	win->target = (ctrl_reg & MBUS_CR_WIN_TARGET_MASK) >> MBUS_CR_WIN_TARGET_OFFS;
+	win->attribute = (ctrl_reg & MBUS_CR_WIN_ATTR_MASK) >> MBUS_CR_WIN_ATTR_OFFS;
+	win->enabled = ctrl_reg & MBUS_CR_WIN_ENABLE;
+
+	return;
+}
+
+/*
+ * mbus_win_map_build
+ *
+ * This function builds CPU-DRAM windows mapping
+ * by reading CPU-DRAM decode windows registers,
+ * so other units like SATA could configure its own
+ * DRAM address decode windows correctly.
+ *
+ * @input: N/A
+ *
+ * @output:
+ *     - win_map: configuration of CPU-DRAM decode window
+ *
+ * @return:  N/A
+ */
+void mbus_win_map_build(struct mbus_win_map *win_map)
+{
+	int win_id;
+	struct mbus_win win;
+
+	memset(win_map, 0, sizeof(struct mbus_win_map));
+	for (win_id = 0; win_id < mbus_info->max_win; win_id++) {
+		mbus_win_get(&win, win_id);
+
+		if ((win.enabled == 0) || (win.target != MBUS_TARGET_DRAM_NUM))
+			continue;
+
+		memcpy(&(win_map->mbus_windows[win_map->mbus_win_num]), &win, sizeof(win));
+		win_map->mbus_win_num++;
+	}
+
+	return;
+}
+
 void dump_mbus(void)
 {
 	int win_id;
-- 
1.9.1

