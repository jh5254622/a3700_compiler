From dabce3bb4fa04147b5530d014d7254037fa849b1 Mon Sep 17 00:00:00 2001
From: Konstantin Porotchkin <kostap@marvell.com>
Date: Thu, 5 Nov 2015 17:05:42 +0200
Subject: [PATCH 0465/1240] armada3700: spl: Move SPL to SRAM and add dummy
 WTMI

- Relocate SPL from DRAM to SRAM (rWTM RAM).
- Add dummy WTMI (CM3 executable to be started after BootROM
  finishes to copy images from boot device to DRAM/SRAM).
  The dummy WTMI contains a single endless loop command "b ."
- Modify NTIM descriptor to apply SPL copy to SRAM and to
  include the new WTMI image
- Remove "DRAM window bypass" in MBUS driver since it is not
  required anymore. The DRAM window will be safely configured
  by SPL that is running from SRAM.

Change-Id: I051374df3140ab3142dca52e72b96b3691ecc702
Signed-off-by: Konstantin Porotchkin <kostap@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/24607
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 configs/mvebu_armadalp_defconfig           |  1 -
 configs/mvebu_armadalp_palladium_defconfig |  1 -
 include/configs/armadalp.h                 |  2 +-
 tools/wtp/u-boot-ntim.txt                  | 20 ++++++++++++++------
 tools/wtp/wtmi.bin                         |  1 +
 tools/wtp/wtmi/Makefile                    | 10 ++++++++++
 tools/wtp/wtmi/wtmi.S                      |  3 +++
 tools/wtp/wtmi/wtmi.dis                    | 22 ++++++++++++++++++++++
 tools/wtp/wtmi/wtmi.ld                     | 15 +++++++++++++++
 9 files changed, 66 insertions(+), 9 deletions(-)
 create mode 100644 tools/wtp/wtmi.bin
 create mode 100644 tools/wtp/wtmi/Makefile
 create mode 100644 tools/wtp/wtmi/wtmi.S
 create mode 100644 tools/wtp/wtmi/wtmi.dis
 create mode 100644 tools/wtp/wtmi/wtmi.ld

diff --git a/configs/mvebu_armadalp_defconfig b/configs/mvebu_armadalp_defconfig
index 4274993..9c34a9d 100644
--- a/configs/mvebu_armadalp_defconfig
+++ b/configs/mvebu_armadalp_defconfig
@@ -15,7 +15,6 @@ CONFIG_CUSTOMER_BOARD=y
 +S:CONFIG_MVEBU_A3700_IO_ADDR_DEC=y
 +S:CONFIG_MVEBU_MBUS=y
 +S:CONFIG_MVEBU_MBUS_SPL_ONLY=y
-+S:CONFIG_MVEBU_MBUS_SKIP_DRAM_WIN=y
 CONFIG_MVEBU_ADVK_PCIE=y
 CONFIG_CMD_BDI=y
 CONFIG_CMD_SPI=y
diff --git a/configs/mvebu_armadalp_palladium_defconfig b/configs/mvebu_armadalp_palladium_defconfig
index 012e276..d356c25 100644
--- a/configs/mvebu_armadalp_palladium_defconfig
+++ b/configs/mvebu_armadalp_palladium_defconfig
@@ -13,7 +13,6 @@ CONFIG_I2C_MV_PAD_REG=n
 +S:CONFIG_MVEBU_A3700_IO_ADDR_DEC=y
 +S:CONFIG_MVEBU_MBUS=y
 +S:CONFIG_MVEBU_MBUS_SPL_ONLY=y
-+S:CONFIG_MVEBU_MBUS_SKIP_DRAM_WIN=y
 CONFIG_MVEBU_ADVK_PCIE=y
 CONFIG_CMD_BDI=y
 CONFIG_CMD_SPI=y
diff --git a/include/configs/armadalp.h b/include/configs/armadalp.h
index 2b70a24..84205a9 100644
--- a/include/configs/armadalp.h
+++ b/include/configs/armadalp.h
@@ -59,7 +59,7 @@
 /* SPL */
 /* Defines for SPL */
 /*#define CONFIG_SPL_TEXT_BASE		0xF0000000 - CM3 SRAM, 0x01000000 - DRAM */
-#define CONFIG_SPL_TEXT_BASE		0x01000000
+#define CONFIG_SPL_TEXT_BASE		0xF0000000
 #define CONFIG_SPL_MAX_SIZE		0x00020000	/* 128K */
 
 #ifndef __ASSEMBLY__
diff --git a/tools/wtp/u-boot-ntim.txt b/tools/wtp/u-boot-ntim.txt
index 538e09c..15a52e8 100644
--- a/tools/wtp/u-boot-ntim.txt
+++ b/tools/wtp/u-boot-ntim.txt
@@ -6,7 +6,7 @@ Issue Date:                  0x02272015			; today's date
 OEM UniqueID:                0x21796B53			; Sky!
 Processor Type:              <undefined>
 Boot Flash Signature:        0x5350490A			; Select SPI'0A
-Number of Images:            3
+Number of Images:            4
 Size of Reserved in bytes:   44
 
 Image ID:                   0x54494D48				; TIMH
@@ -18,16 +18,24 @@ Partition Number:           0x00000000
 Image Filename: TIM_UBOOT_NON_TRUSTED.bin
 
 Image ID:                   0x4F424d49				; OBMI
-Next Image ID:              0x4F534C4F				; OSLO next
+Next Image ID:              0x57544d49				; WTMI next
 Flash Entry Address:        0x00004000				; OBMI flash addr
-Load Address:               0x61000000				; OBMI RAM addr
+Load Address:               0x1FFF0000				; OBMI RAM addr
 Image Size To CRC in bytes: 0x00000000
 Partition Number:           0x00000000
 Image Filename: spl/u-boot-spl.bin
 
+Image ID:                   0x57544d49				; WTMI
+Next Image ID:              0x4F534C4F				; OSLO next
+Flash Entry Address:        0x00024000				; WTMI flash addr
+Load Address:               0x200100F0				; WTMI RAM addr
+Image Size To CRC in bytes: 0x00000000
+Partition Number:           0x00000000
+Image Filename: tools/wtp/wtmi.bin
+
 Image ID:                   0x4F534C4F				; OSLO
 Next Image ID:              0xFFFFFFFF				; NONE
-Flash Entry Address:        0x00024000				; OSLO flash addr
+Flash Entry Address:        0x00026000				; OSLO flash addr
 Load Address:               0x60000000				; OSLO RAM addr
 Image Size To CRC in bytes: 0x00000000
 Partition Number:           0x00000000
@@ -40,9 +48,9 @@ Reserved Data:
 0x0000001C	; Size of CRV2 package in bytes
 0x00000002	; Number of cores to release
 0x00000000	; Core_ID: 0 - AP0, 1 - AP1, 2 - CM3
-0x01000000	; PC address for Core_ID above
+0xF0000000	; PC address for Core_ID above
 0x00000002	; Core_ID: 0 - AP0, 1 - AP1, 2 - CM3
-0x1fff0081	; PC address for Core_ID above
+0x200100F0	; PC address for Core_ID above
 0x5465726D	;Term
 0x00000008	; Size of this package in bytes
 
diff --git a/tools/wtp/wtmi.bin b/tools/wtp/wtmi.bin
new file mode 100644
index 0000000..b0e6286
--- /dev/null
+++ b/tools/wtp/wtmi.bin
@@ -0,0 +1 @@
+þç
\ No newline at end of file
diff --git a/tools/wtp/wtmi/Makefile b/tools/wtp/wtmi/Makefile
new file mode 100644
index 0000000..55c6e3a
--- /dev/null
+++ b/tools/wtp/wtmi/Makefile
@@ -0,0 +1,10 @@
+CROSS=arm-linux-gnueabi-
+
+all:
+	$(CROSS)as -mcpu=cortex-m3  -o wtmi.o wtmi.S
+	$(CROSS)gcc -nostdlib -T wtmi.ld -Xlinker "--build-id=none" wtmi.o -o wtmi.elf
+	$(CROSS)objcopy -S -O binary wtmi.elf wtmi.bin
+	$(CROSS)objdump -D -S wtmi.elf > wtmi.dis
+
+clean:
+	@rm *.elf *.bin *dis 2>/dev/null
diff --git a/tools/wtp/wtmi/wtmi.S b/tools/wtp/wtmi/wtmi.S
new file mode 100644
index 0000000..cb189c1
--- /dev/null
+++ b/tools/wtp/wtmi/wtmi.S
@@ -0,0 +1,3 @@
+.global _Reset
+_Reset:
+    B .
diff --git a/tools/wtp/wtmi/wtmi.dis b/tools/wtp/wtmi/wtmi.dis
new file mode 100644
index 0000000..ed143a0
--- /dev/null
+++ b/tools/wtp/wtmi/wtmi.dis
@@ -0,0 +1,22 @@
+
+wtmi.elf:     file format elf32-littlearm
+
+
+Disassembly of section .ro:
+
+200100f0 <_Reset>:
+200100f0:	e7fe      	b.n	200100f0 <_Reset>
+
+Disassembly of section .ARM.attributes:
+
+00000000 <.ARM.attributes>:
+   0:	00002041 	andeq	r2, r0, r1, asr #32
+   4:	61656100 	cmnvs	r5, r0, lsl #2
+   8:	01006962 	tsteq	r0, r2, ror #18
+   c:	00000016 	andeq	r0, r0, r6, lsl r0
+  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
+  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
+  18:	0600334d 	streq	r3, [r0], -sp, asr #6
+  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
+  20:	Address 0x0000000000000020 is out of bounds.
+
diff --git a/tools/wtp/wtmi/wtmi.ld b/tools/wtp/wtmi/wtmi.ld
new file mode 100644
index 0000000..d7ed99b
--- /dev/null
+++ b/tools/wtp/wtmi/wtmi.ld
@@ -0,0 +1,15 @@
+SECTIONS
+{
+  . = 0x200100F0;
+  .ro : {
+    wtmi.o (.text)
+    *(.text)
+    *(.rodata)
+  }
+  .rw : {
+    *(.data)
+    *(.bss)
+    *(COMMON)
+  }
+ . = ALIGN(8);
+}
-- 
1.9.1

