From fafeb9dc0a68f5d554b293652e9755b3503bcb68 Mon Sep 17 00:00:00 2001
From: jinghua <jinghua@marvell.com>
Date: Wed, 4 Nov 2015 13:46:25 +0800
Subject: [PATCH 0481/1240] fix: armada3700: sata: add address decode
 configuration for SATA in SPL

    Get DRAM information from MBUS driver, then perform address decode
    configuration in SPL routine init_a3700_io_addr_dec.

Change-Id: I849582bdcf1860aae3238f66e9bd8ce4878d7983
Signed-off-by: jinghua <jinghua@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/24562
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Hanna Hawa <hannah@marvell.com>
---
 arch/arm/include/asm/arch-armadalp/regs-base.h |  9 +++++
 drivers/misc/mvebu_io_addr_dec.c               | 48 +++++++++++++++++++++++++-
 2 files changed, 56 insertions(+), 1 deletion(-)

diff --git a/arch/arm/include/asm/arch-armadalp/regs-base.h b/arch/arm/include/asm/arch-armadalp/regs-base.h
index a76b3fe..5a5ce4e 100644
--- a/arch/arm/include/asm/arch-armadalp/regs-base.h
+++ b/arch/arm/include/asm/arch-armadalp/regs-base.h
@@ -50,4 +50,13 @@
 #define MVEBU_A3700_GPIO_NB_SEL (MVEBU_REGS_BASE + 0x13830)
 #define MVEBU_A3700_GPIO_TW1_GPIO_EN_OFF (10)
 
+/* decode window configuration regs for SATA */
+#define MVEBU_ARLP_SATA_DEC_WIN_CTRL(num)	(MVEBU_REGS_BASE + 0xc800 + (num * 16))
+#define MVEBU_ARLP_SATA_DEC_WIN_BASE(num)	(MVEBU_REGS_BASE + 0xc804 + (num * 16))
+#define MVEBU_ARLP_SATA_DEC_WIN_CTRL_SIZE_OFF	(16)
+#define MVEBU_ARLP_SATA_DEC_WIN_CTRL_ATTR_OFF	(8)
+#define MVEBU_ARLP_SATA_DEC_WIN_CTRL_TARGET_OFF	(4)
+#define MVEBU_ARLP_SATA_DEC_WIN_CTRL_EN_OFF		(0)
+#define MVEBU_ARLP_SATA_DEC_WIN_BASE_OFF		(16)
+
 #endif	/* _REGS_BASE_H_ */
diff --git a/drivers/misc/mvebu_io_addr_dec.c b/drivers/misc/mvebu_io_addr_dec.c
index 58e03a8..9e80f5e 100644
--- a/drivers/misc/mvebu_io_addr_dec.c
+++ b/drivers/misc/mvebu_io_addr_dec.c
@@ -17,16 +17,62 @@
  */
 
 #include <common.h>
-#include <asm/io.h>
 #include <asm/arch-mvebu/mvebu.h>
+#include <asm/arch-mvebu/mbus.h>
+#include <asm/io.h>
+
+void init_a3700_sata_addr_dec(struct mbus_win_map *win_map)
+{
+	struct mbus_win *win;
+	int win_id;
+	u32 control_value = 0;
+	u32 base_value = 0;
+
+	/* fabric decode window configuration for SATA,
+	     this configuration is not part of SATA unit (not in SATA's regs range),
+	     and default value of fabric decode windows for other units works well,
+	     SATA is the only unit needs reconfig.
+	     So there is no driver for fabric decode window configuration */
+
+	/* disable all windows first */
+	writel(0, MVEBU_ARLP_SATA_DEC_WIN_CTRL(0));
+	writel(0, MVEBU_ARLP_SATA_DEC_WIN_CTRL(1));
+	writel(0, MVEBU_ARLP_SATA_DEC_WIN_CTRL(2));
+
+	/* configure SATA decode windows to DRAM, according to CPU-DRAM
+	  * decode window configurations */
+	for (win_id = 0, win = &win_map->mbus_windows[win_id];
+	      win_id < win_map->mbus_win_num; win_id++, win++) {
+		/* set size */
+		control_value |= win->win_size << MVEBU_ARLP_SATA_DEC_WIN_CTRL_SIZE_OFF;
+		/* set attr */
+		control_value |= win->attribute << MVEBU_ARLP_SATA_DEC_WIN_CTRL_ATTR_OFF;
+		/* set target */
+		control_value |= win->target << MVEBU_ARLP_SATA_DEC_WIN_CTRL_TARGET_OFF;
+		/* set enable */
+		control_value |= win->enabled << MVEBU_ARLP_SATA_DEC_WIN_CTRL_EN_OFF;
+		/* set base */
+		base_value |= win->base_addr << MVEBU_ARLP_SATA_DEC_WIN_BASE_OFF;
+
+		writel(base_value, MVEBU_ARLP_SATA_DEC_WIN_BASE(win_id));
+		writel(control_value, MVEBU_ARLP_SATA_DEC_WIN_CTRL(win_id));
+	}
+}
 
 int init_a3700_io_addr_dec(void)
 {
 	int	rval = 0;
+	struct mbus_win_map win_map;
 
 	debug_enter();
 
 	/* Add units configuration code here */
+	/* fetch CPU-DRAM window mapping information by reading
+	  * from CPU-DRAM decode windows (only the enabled ones) */
+	mbus_win_map_build(&win_map);
+
+	/* sata unit addr dec configuration */
+	init_a3700_sata_addr_dec(&win_map);
 
 	debug_exit();
 	return rval;
-- 
1.9.1

