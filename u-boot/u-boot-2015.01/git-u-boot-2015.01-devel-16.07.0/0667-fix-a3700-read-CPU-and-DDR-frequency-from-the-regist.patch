From 824e6566d7b026261a258850e8afbd5ee088c09d Mon Sep 17 00:00:00 2001
From: Terry Zhou <bjzhou@marvell.com>
Date: Wed, 6 Jan 2016 21:05:01 +0800
Subject: [PATCH 0667/1240] fix: a3700: read CPU and DDR frequency from the
 register.

	- Currently, the freq-get function only return a hard-coded
	  value, fix this issue and read the actual frequency from
	  the CPU register.

Change-Id: Ie43dfd01dfb0a44933dcd31313c83dd9356c6156
Signed-off-by: Terry Zhou <bjzhou@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/26572
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 arch/arm/cpu/armv8/armadalp/clock.c        |  5 ++-
 arch/arm/cpu/armv8/armadalp/mvebu_clock.c  | 68 ++++++++++++++++++++++++++++++
 arch/arm/include/asm/arch-armadalp/clock.h | 21 +++++++--
 3 files changed, 89 insertions(+), 5 deletions(-)

diff --git a/arch/arm/cpu/armv8/armadalp/clock.c b/arch/arm/cpu/armv8/armadalp/clock.c
index 59f7ab4..299a31e 100644
--- a/arch/arm/cpu/armv8/armadalp/clock.c
+++ b/arch/arm/cpu/armv8/armadalp/clock.c
@@ -18,6 +18,7 @@
 
 #include <common.h>
 #include <asm/arch-mvebu/clock.h>
+#include <asm/arch-armadalp/clock.h>
 
 u32 soc_tclk_get(void)
 {
@@ -26,12 +27,12 @@ u32 soc_tclk_get(void)
 
 u32 soc_cpu_clk_get(void)
 {
-	return 200000000;
+	return get_cpu_clk() * 1000000;
 }
 
 u32 soc_ddr_clk_get(void)
 {
-	return 200000000;
+	return get_ddr_clk() * 1000000;
 }
 
 u32 soc_l2_clk_get(void)
diff --git a/arch/arm/cpu/armv8/armadalp/mvebu_clock.c b/arch/arm/cpu/armv8/armadalp/mvebu_clock.c
index ba6b692..413b9d2 100644
--- a/arch/arm/cpu/armv8/armadalp/mvebu_clock.c
+++ b/arch/arm/cpu/armv8/armadalp/mvebu_clock.c
@@ -668,3 +668,71 @@ int init_clock(void)
 	debug_exit();
 	return ret;
 }
+
+static u32 get_tbg_clk(enum a3700_clock_src tbg_typ)
+{
+	u32 tbg_M, tbg_N, vco_div;
+	u32 ref, reg_val;
+
+	/* get ref clock */
+	ref = get_ref_clk();
+
+	/* get M, N */
+	reg_val = readl(MVEBU_NORTH_BRG_TBG_CTRL7);
+	tbg_M = (tbg_typ == TBG_A) ? (reg_val & 0x1FFUL) : ((reg_val >> 16) & 0x1FFUL);
+	tbg_M = (tbg_M == 0) ? 1 : tbg_M;
+
+	reg_val = readl(MVEBU_NORTH_BRG_TBG_CTRL0);
+	tbg_N = (tbg_typ == TBG_A) ? ((reg_val >> 2) & 0x1FFUL) : ((reg_val >> 18) & 0x1FFUL);
+
+	/* get VCODIV */
+	reg_val = readl(MVEBU_NORTH_BRG_TBG_CTRL1);
+	reg_val = (tbg_typ == TBG_A) ? (reg_val & 0x1FFUL) : ((reg_val >> 16) & 0x1FFUL);
+	if (reg_val > 7)
+		return 0; /*invalid*/
+	vco_div = 0x1 << reg_val;
+
+	return ((tbg_N * ref) << 2)/(tbg_M * vco_div);
+}
+
+u32 get_cpu_clk(void)
+{
+	u32 tbg, cpu_prscl;
+	enum a3700_clock_src tbg_typ;
+
+	/* 1. check cpu clock select */
+	if (!((readl(MVEBU_NORTH_CLOCK_SELECT_REG) >> 15) & 0x1))
+		return 0; /* CPU clock is using XTAL output*/
+
+	/* 2. get TBG select */
+	tbg_typ = (readl(MVEBU_NORTH_CLOCK_TBG_SELECT_REG) >> 22) & 0x1;
+
+	/* 3. get TBG clock */
+	tbg = get_tbg_clk(tbg_typ);
+	if (tbg == 0)
+		return 0;
+
+	/* 4. get CPU clk divider */
+	cpu_prscl = (readl(MVEBU_NORTH_CLOCK_DIVIDER_SELECT0_REG) >> 28) & 0x7;
+	if (cpu_prscl == 7)
+		return 0; /* divider value error */
+
+	return tbg/cpu_prscl;
+}
+
+u32 get_ddr_clk(void)
+{
+	u32 tbg;
+
+	/* 1. check DDR clock select */
+	if (!((readl(MVEBU_NORTH_CLOCK_SELECT_REG) >> 10) & 0x1))
+		return 0; /* DDR clock is using XTAL output*/
+
+	/* 2. get TBG_A clock */
+	tbg = get_tbg_clk(TBG_A);
+	if (tbg == 0)
+		return 0;
+
+	return tbg>>1;
+}
+
diff --git a/arch/arm/include/asm/arch-armadalp/clock.h b/arch/arm/include/asm/arch-armadalp/clock.h
index 16582a1..71e17c9 100644
--- a/arch/arm/include/asm/arch-armadalp/clock.h
+++ b/arch/arm/include/asm/arch-armadalp/clock.h
@@ -16,8 +16,8 @@
  * ***************************************************************************
  */
 
-#ifndef _MVEBU_CLOCK_H_
-#define _MVEBU_CLOCK_H_
+#ifndef _ARMADALP_CLOCK_H_
+#define _ARMADALP_CLOCK_H_
 
 /* Spread Spectrum Clock */
 #undef MVEBU_A3700_ENABLE_SSC
@@ -475,6 +475,21 @@ TBG-B-P	500	2	5	gbe_50_pclk_sel		50	SB					DIV2[11:9]	DIV2[8:6]
 ******************************************************************************/
 u32 get_ref_clk(void);
 
+/*****************************************************************************
+* get_cpu_clk
+*
+* return: current CPU clock in Mhz
+******************************************************************************/
+u32 get_cpu_clk(void);
+
+/*****************************************************************************
+* get_ddr_clk
+*
+* return: current DDR clock in Mhz
+******************************************************************************/
+u32 get_ddr_clk(void);
+
+
 /******************************************************************************
 * Name: set_clocks
 *
@@ -491,4 +506,4 @@ u32 set_clocks(u32 cpu_clk_mhz, u32 ddr_clk_mhz, u32 tbg_a_kvco_mhz, u32 tbg_b_k
 
 int init_clock(void);
 
-#endif /* _MVEBU_CLOCK_H_ */
+#endif /* _ARMADALP_CLOCK_H_ */
-- 
1.9.1

