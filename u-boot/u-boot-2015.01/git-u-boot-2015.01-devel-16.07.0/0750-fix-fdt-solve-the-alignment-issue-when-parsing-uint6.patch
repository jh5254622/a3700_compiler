From 354f920fc32bb8fc59179dd5e6629e29aa393bd1 Mon Sep 17 00:00:00 2001
From: Terry Zhou <bjzhou@marvell.com>
Date: Tue, 26 Jan 2016 17:56:18 +0800
Subject: [PATCH 0750/1240] fix: fdt: solve the alignment issue when parsing
 uint64 items.

	- The FDT item for ddr size is a 64bit uint, it was stored in the
	  memory but sometimes not aligned on 8bytes boundary, in which case
	  it will cause u-boot crash in spl.
	- Fix this issue by spilt the 64bit into two 32bit int and load in array.

Change-Id: Ic609388851e5a5f88ccc4a6b3dbe15478ea4183b
Signed-off-by: Terry Zhou <bjzhou@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27041
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Shadi Ammouri <shadi@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 lib/fdtdec.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/lib/fdtdec.c b/lib/fdtdec.c
index 138a2b9..4887219 100644
--- a/lib/fdtdec.c
+++ b/lib/fdtdec.c
@@ -166,14 +166,17 @@ fdt_addr_t fdtdec_get_addr(const void *blob, int node,
 uint64_t fdtdec_get_uint64(const void *blob, int node, const char *prop_name,
 		uint64_t default_val)
 {
-	const uint64_t *cell64;
-	int length;
-
-	cell64 = fdt_getprop(blob, node, prop_name, &length);
-	if (!cell64 || length < sizeof(*cell64))
+	int ret;
+	u32 num32[2];
+
+	/* read the uint64_t number from fdt section in memory, sometimes it loactes at
+	the memory which is not on 8bytes boundary, it will cause exception
+	and crash the system, fix here by taking 64bit number as two 32bit array */
+	ret = fdtdec_get_int_array_count(blob, node, prop_name, &num32[0], 2);
+	if (ret < 2)
 		return default_val;
 
-	return fdt64_to_cpu(*cell64);
+	return (((uint64_t)num32[0]) << 32) + (uint64_t)num32[1];
 }
 
 int fdtdec_get_is_enabled(const void *blob, int node)
-- 
1.9.1

