From 14e2b06329f4f9a9465bacb8e96ad5ec1e9a2f23 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Tue, 2 Feb 2016 21:59:36 +0200
Subject: [PATCH 0784/1240] fix: sata: comphy: cp110: fix SATA comphy
 initialization for CP-110

- Fix release from hard reset in SD external for SATA COMPHY access
- Get General SATA3 base address - can't get it from DT because in DT we have
  address of SATA0/1
- Fix COMPHY init for SATA
- Fix general comments/prints

Change-Id: I9fc1b3b9a7863a7889000135f4e039795f69778f
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27163
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
---
 arch/arm/include/asm/arch-armada8k/regs-base.h |  3 +-
 arch/arm/include/asm/arch-mvebu/comphy_hpipe.h |  8 ++++-
 drivers/phy/comphy_cp110.c                     | 41 ++++++++++++--------------
 3 files changed, 28 insertions(+), 24 deletions(-)

diff --git a/arch/arm/include/asm/arch-armada8k/regs-base.h b/arch/arm/include/asm/arch-armada8k/regs-base.h
index 30bf000..49c2e21 100644
--- a/arch/arm/include/asm/arch-armada8k/regs-base.h
+++ b/arch/arm/include/asm/arch-armada8k/regs-base.h
@@ -45,6 +45,7 @@
 #define MVEBU_LLC_BASE		(MVEBU_REGS_BASE + 0x8000)
 
 /* Base registers for CP */
-#define MVEBU_AMB_IP_BASE	(MVEBU_CP0_REGS_BASE + 0x13ff00)
+#define MVEBU_AMB_IP_BASE		(MVEBU_CP0_REGS_BASE + 0x13ff00)
+#define MVEBU_SATA3_GENERAL_BASE	(MVEBU_CP0_REGS_BASE + 0x540000)
 
 #endif	/* _REGS_BASE_H_ */
diff --git a/arch/arm/include/asm/arch-mvebu/comphy_hpipe.h b/arch/arm/include/asm/arch-mvebu/comphy_hpipe.h
index 9609657..5f132e0 100644
--- a/arch/arm/include/asm/arch-mvebu/comphy_hpipe.h
+++ b/arch/arm/include/asm/arch-mvebu/comphy_hpipe.h
@@ -20,7 +20,13 @@
 #define _COMPHY_HPIPE_H_
 
 /* SerDes IP register */
-#define SD_EXTERNAL_STATUS0_REG			0
+#define SD_EXTERNAL_CONFIG1_REG			0x4
+#define SD_EXTERNAL_CONFIG1_RESET_IN_OFFSET	3
+#define SD_EXTERNAL_CONFIG1_RESET_IN_MASK	(0x1 << SD_EXTERNAL_CONFIG1_RESET_IN_OFFSET)
+#define SD_EXTERNAL_CONFIG1_RESET_CORE_OFFSET	5
+#define SD_EXTERNAL_CONFIG1_RESET_CORE_MASK	(0x1 << SD_EXTERNAL_CONFIG1_RESET_CORE_OFFSET)
+
+#define SD_EXTERNAL_STATUS0_REG			0x18
 #define SD_EXTERNAL_STATUS0_PLL_TX_OFFSET	2
 #define SD_EXTERNAL_STATUS0_PLL_TX_MASK		(0x1 << SD_EXTERNAL_STATUS0_PLL_TX_OFFSET)
 #define SD_EXTERNAL_STATUS0_PLL_RX_OFFSET	3
diff --git a/drivers/phy/comphy_cp110.c b/drivers/phy/comphy_cp110.c
index c39fba3..b17779a 100644
--- a/drivers/phy/comphy_cp110.c
+++ b/drivers/phy/comphy_cp110.c
@@ -73,7 +73,7 @@ static int comphy_pcie_power_up(u32 lane, u32 pcie_by4, void __iomem *hpipe_base
 	u32 pcie_clk = 0; /* input */
 
 	debug_enter();
-	debug("stage: RFU configurations- hard reset comphy\n");
+	debug("stage: RFU configurations - hard reset comphy\n");
 	/* RFU configurations - hard reset comphy */
 	mask = COMMON_PHY_CFG1_PWR_UP_MASK;
 	data = 0x1 << COMMON_PHY_CFG1_PWR_UP_OFFSET;
@@ -205,7 +205,7 @@ static int comphy_pcie_power_up(u32 lane, u32 pcie_by4, void __iomem *hpipe_base
 	reg_set(hpipe_addr + HPIPE_RST_CLK_CTRL_REG,
 		0x0 << HPIPE_RST_CLK_CTRL_PIPE_RST_OFFSET, HPIPE_RST_CLK_CTRL_PIPE_RST_MASK);
 
-	/* wait 5ms - for comphy calibration done */
+	/* wait 10ms - for comphy calibration done */
 	mdelay(10);
 
 	debug("stage: Check PLL\n");
@@ -308,7 +308,7 @@ static int comphy_usb3_power_up(u32 lane, void __iomem *hpipe_base, void __iomem
 	reg_set(hpipe_addr + HPIPE_RST_CLK_CTRL_REG,
 		0x0 << HPIPE_RST_CLK_CTRL_PIPE_RST_OFFSET, HPIPE_RST_CLK_CTRL_PIPE_RST_MASK);
 
-	/* wait 5ms - for comphy calibration done */
+	/* wait 10ms - for comphy calibration done */
 	mdelay(10);
 
 	debug("stage: Check PLL\n");
@@ -332,12 +332,8 @@ static int comphy_sata_power_up(u32 lane, void __iomem *hpipe_base, void __iomem
 	void __iomem *sata_base;
 
 	debug_enter();
-	sata_base = fdt_get_reg_offs_by_compat(COMPAT_MVEBU_SATA);
-	if (sata_base == 0) {
-		debug("SATA address not found in FDT\n");
-		return 0;
-	}
-	debug("SATA address found in FDT %p\n", sata_base);
+	sata_base = (void __iomem *)MVEBU_SATA3_GENERAL_BASE;
+	debug("SATA3 General address base %p\n", sata_base);
 
 	debug("stage: MAC configuration - power down comphy\n");
 	/* MAC configuration powe down comphy
@@ -358,12 +354,12 @@ static int comphy_sata_power_up(u32 lane, void __iomem *hpipe_base, void __iomem
 	data |= 0x0 << SATA3_CTRL_SATA_SSU_OFFSET;
 	reg_set(sata_base + SATA3_VENDOR_DATA, data, mask);
 
-	debug("stage: RFU configurations- hard reset comphy\n");
+	debug("stage: RFU configurations - hard reset comphy\n");
 	/* RFU configurations - hard reset comphy */
 	mask = COMMON_PHY_CFG1_PWR_UP_MASK;
 	data = 0x1 << COMMON_PHY_CFG1_PWR_UP_OFFSET;
 	mask |= COMMON_PHY_CFG1_PIPE_SELECT_MASK;
-	data |= 0x1 << COMMON_PHY_CFG1_PIPE_SELECT_OFFSET;
+	data |= 0x0 << COMMON_PHY_CFG1_PIPE_SELECT_OFFSET;
 	mask |= COMMON_PHY_CFG1_PWR_ON_RESET_MASK;
 	data |= 0x0 << COMMON_PHY_CFG1_PWR_ON_RESET_OFFSET;
 	mask |= COMMON_PHY_CFG1_CORE_RSTN_MASK;
@@ -373,21 +369,22 @@ static int comphy_sata_power_up(u32 lane, void __iomem *hpipe_base, void __iomem
 	/* Set select data  width 40Bit - SATA mode only */
 	reg_set(comphy_addr + COMMON_PHY_CFG6_REG,
 		0x1 << COMMON_PHY_CFG6_IF_40_SEL_OFFSET, COMMON_PHY_CFG6_IF_40_SEL_MASK);
-	/* release from hard reset */
-	mask = COMMON_PHY_CFG1_PWR_ON_RESET_MASK;
-	data = 0x1 << COMMON_PHY_CFG1_PWR_ON_RESET_OFFSET;
-	mask |= COMMON_PHY_CFG1_CORE_RSTN_MASK;
-	data |= 0x1 << COMMON_PHY_CFG1_CORE_RSTN_OFFSET;
-	reg_set(comphy_addr + COMMON_PHY_CFG1_REG, data, mask);
+
+	/* release from hard reset in SD external */
+	mask = SD_EXTERNAL_CONFIG1_RESET_IN_MASK;
+	data = 0x1 << SD_EXTERNAL_CONFIG1_RESET_IN_OFFSET;
+	mask |= SD_EXTERNAL_CONFIG1_RESET_CORE_MASK;
+	data |= 0x1 << SD_EXTERNAL_CONFIG1_RESET_CORE_OFFSET;
+	reg_set(sd_ip_addr + SD_EXTERNAL_CONFIG1_REG, data, mask);
 
 	/* Wait 1ms - until band gap and ref clock ready */
 	mdelay(1);
 
 	debug("stage: Comphy configuration\n");
 	/* Start comphy Configuration */
-	/* Set reference clock to comes from group 2 - choose 25Mhz */
+	/* Set reference clock to comes from group 1 - choose 25Mhz */
 	reg_set(hpipe_addr + HPIPE_MISC_REG,
-		0x1 << HPIPE_MISC_REFCLK_SEL_OFFSET, HPIPE_MISC_REFCLK_SEL_MASK);
+		0x0 << HPIPE_MISC_REFCLK_SEL_OFFSET, HPIPE_MISC_REFCLK_SEL_MASK);
 	/* Reference frequency select set 1 (for SATA = 25Mhz) */
 	mask = HPIPE_PWR_PLL_REF_FREQ_MASK;
 	data = 0x1 << HPIPE_PWR_PLL_REF_FREQ_OFFSET;
@@ -400,7 +397,7 @@ static int comphy_sata_power_up(u32 lane, void __iomem *hpipe_base, void __iomem
 		0x2 << HPIPE_INTERFACE_GEN_MAX_OFFSET, HPIPE_INTERFACE_GEN_MAX_MASK);
 	/* Set select data  width 40Bit (SEL_BITS[2:0]) */
 	reg_set(hpipe_addr + HPIPE_LOOPBACK_REG,
-		0x4 << HPIPE_LOOPBACK_SEL_OFFSET, HPIPE_LOOPBACK_SEL_MASK);
+		0x2 << HPIPE_LOOPBACK_SEL_OFFSET, HPIPE_LOOPBACK_SEL_MASK);
 
 	debug("stage: Analog paramters from ETP(HW)\n");
 	/* TODO: Set analog paramters from ETP(HW) - for now use the default datas */
@@ -435,8 +432,8 @@ static int comphy_sata_power_up(u32 lane, void __iomem *hpipe_base, void __iomem
 	data |= 0x1 << SATA3_CTRL_SATA_SSU_OFFSET;
 	reg_set(sata_base + SATA3_VENDOR_DATA, data, mask);
 
-	/* Wait 5ms - Wait for comphy calibration done */
-	mdelay(5);
+	/* Wait 10ms - Wait for comphy calibration done */
+	mdelay(10);
 
 	/* MBUS request size and interface select register */
 	reg_set(sata_base + SATA3_VENDOR_ADDRESS,
-- 
1.9.1

