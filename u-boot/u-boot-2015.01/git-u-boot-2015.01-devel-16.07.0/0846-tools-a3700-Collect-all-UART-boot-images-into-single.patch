From 04d2515bb7c3767938fdb08ee69b5e11a2011579 Mon Sep 17 00:00:00 2001
From: Konstantin Porotchkin <kostap@marvell.com>
Date: Sun, 7 Feb 2016 11:28:27 +0200
Subject: [PATCH 0846/1240] tools: a3700: Collect all UART boot images into
 single archive

- Add command to Makefile collecting all images required
  for UART boot into single archive named uart-images.tgz
- Fixes JIRA SYSTEMSW-2141

Change-Id: I8510976e85ec1d13fbe9a877edb430734a174009
Signed-off-by: Konstantin Porotchkin <kostap@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27266
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 Makefile                | 11 +++++++++++
 doc/mvebu/uart_boot.txt | 36 +++++++++++++++++++++++++++++-------
 2 files changed, 40 insertions(+), 7 deletions(-)

diff --git a/Makefile b/Makefile
index f0ff2f7..5e8eebc 100644
--- a/Makefile
+++ b/Makefile
@@ -923,6 +923,7 @@ endif #CONFIG_MVEBU_SECURE_BOOT
 TIM_IMAGE	:= $(shell grep "Image Filename:" -m 1 $(DOIMAGE_CFG) | cut -c 17-)
 TIMBLDARGS	:= $(SECURE) $(BOOTDEV) $(IMAGESPATH) $(DDRCFG) $(DOIMAGE_CFG) $(TIMNCFG) $(TIMNSIG)
 TIMBLDUARTARGS	:= $(SECURE) UART $(IMAGESPATH) $(DDRCFG) $(DOIMAGE_CFG) $(TIMNCFG) $(TIMNSIG)
+UARTIMGARCH	:= $(srctree)/uart-images
 
 DOIMAGE_FLAGS := -r $(DOIMAGE_CFG)
 DOIMAGE_LIBS_CHECK = \
@@ -937,11 +938,21 @@ DOIMAGE_LIBS_CHECK = \
 		echo "DOIMAGE=$(DOIMAGE)" >&1; \
 	fi
 
+# Start with creation of UART images:
+# - Create TIM descriptor with UART signature
+# - Create binary TIM and UART downloadable images (*_h.*)
+# - Collect all UART downloadable images into archive
+# - Create TIM descriptor(s) with final boot signature according
+#   to defconfig for the next build stage (SPI.eMMC,etc.)
 uartimage: $(obj)/u-boot.bin $(SPLIMAGE)
 		@$(DOIMAGE_LIBS_CHECK)
 		$(TIMBUILD) $(TIMBLDUARTARGS)
 		$(DOIMAGE) $(DOIMAGE_FLAGS)
 		$(TIM2IMG) -i $(DOIMAGE_CFG) -o u-boot-spl-uart.img
+		@mkdir $(UARTIMGARCH)
+		@find $(srctree) -name "*_h.*" |xargs cp -t $(UARTIMGARCH) $(TIM_IMAGE)
+		@tar czf $(UARTIMGARCH).tgz $(UARTIMGARCH)
+		@rm -rf $(UARTIMGARCH)
 		$(TIMBUILD) $(TIMBLDARGS)
 
 secureimg: uartimage
diff --git a/doc/mvebu/uart_boot.txt b/doc/mvebu/uart_boot.txt
index e5b1f10..fee3397 100644
--- a/doc/mvebu/uart_boot.txt
+++ b/doc/mvebu/uart_boot.txt
@@ -21,7 +21,12 @@ the first time or the board fails to boot.
 
 UART boot for Armada-3700 platform
 ---------------------------------
-1. Change the TIM/NTIM file descriptor to use the UART image type
+1. The normal build procedure for A3700 target creates an archive
+   with all the images required for UART boot. If these images are used,
+   extract the uart-images.tgz archive into temporary folder and
+   continue with below procedure starting paragraph 4.
+
+2. Change the TIM/NTIM file descriptor to use the UART image type
    (for NTIM - tools/wtp/u-boot-ntim.txt).
    Replace the following row:
 
@@ -31,28 +36,45 @@ UART boot for Armada-3700 platform
 
    Boot Flash Signature:          0x55415223              ; Select UAR'23
 
-2. Build the u-boot image as usual. Files with "_h." in their names
+3. Build the u-boot image as usual. Files with "_h." in their names
    are created for usage by the image downloader SW.
 
-3. Make sure the target board is in UART mode and ">" prompt is
+4. Make sure the target board is in UART mode and ">" prompt is
    presented on connected terminal. Pressing "Enter" in this mode
    will show "E" and then ">" again.
 
-4. Stop the terminal emulator program on UART port attached to the
+5. Stop the terminal emulator program on UART port attached to the
    target board (minicom) for releasing the serial port and allowing
    application to use it for image download.
 
-5. Start the image download application in the root u-boot folder
+6. Start the image download application in the root u-boot folder
    using the following parameters (replace UART port name with the one
-   connected to actual target board):
+   connected to actual target board).
+
+   Linux downloader usage example:
 
    sudo WtpDownload_linux.exe -P UART -C /dev/ttyUSB0 -R 115200 \
    -B TIM_UBOOT_NON_TRUSTED.bin -I spl/u-boot-spl_h.bin \
    -I ./u-boot_h.bin  -I ./tools/wtp/wtmi_h.dummy -E
 
+   Windows downloader usage example:
+
+   The target board is connected to COM7 and all images are located in
+   the same folder:
+
+   WtpDownload.exe -P UART -C 7 -R 115200 -B TIM_UBOOT_NON_TRUSTED.bin
+   -I u-boot-spl_h.bin -I u-boot_h.bin  -I wtmi_h.dummy -E
+
    It is possible to add "-V" parameter to the command line for
    enabling verbose output.
 
-6. Once the process is finished, start the terminal emulator
+   Note that "-E" parameter can be dropped from the above commands.
+   In such case after checking that the BootROM UART download mode is
+   selected in paragraph 4, type in terminal "wtp" without quotes and
+   press Enter. Then follow the procedure in paragraph 5.
+   This command will switch BootROM to WTP download mode. The same is
+   archived by "-E" parameter in latest downloader SW.
+
+7. Once the process is finished, start the terminal emulator
    program (minicom) on the UART port attached to the target
    board and ensure the u-boot prompt is reached.
-- 
1.9.1

