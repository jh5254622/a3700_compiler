From ef429a410d07f348c161cd43b45f6e9d88b9d9cf Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Fri, 19 Feb 2016 04:40:28 +0800
Subject: [PATCH 0879/1240] fix: eeprom: mvebu: fix FDT offset and size that
 cause read issue from EEPROM

- issue: cannot load FDT from EEPROM correctly
- This patch fix the offset of FDT file in EEPROM.
  The issue is caused by the forced type conversion
  (u8) to the FDT file offset in EEPROM, since after
  the HW information is enlarged to 256 bytes, the
  FDT file offset is bigger than 256, however u8 forced
  conversion only keep lowest byte.

Change-Id: I1e74d3d2824ef3a5a957f473ef0cdbf221cbe9f0
Signed-off-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27645
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Hanna Hawa <hannah@marvell.com>
---
 board/mvebu/common/cfg_eeprom.c | 2 +-
 board/mvebu/common/cfg_eeprom.h | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/board/mvebu/common/cfg_eeprom.c b/board/mvebu/common/cfg_eeprom.c
index 45205da..001e7f7 100644
--- a/board/mvebu/common/cfg_eeprom.c
+++ b/board/mvebu/common/cfg_eeprom.c
@@ -111,6 +111,7 @@ bool cfg_eeprom_upload_fdt_from_eeprom(void)
 
 	i2c_read(BOARD_DEV_TWSI_INIT_EEPROM, config_info.byte_num, MULTI_FDT_EEPROM_ADDR_LEN,
 		 (uint8_t *)&board_config_val.fdt_blob, config_info.byte_cnt);
+
 	return true;
 }
 
@@ -351,7 +352,6 @@ default_id:
 }
 
 /* cfg_eeprom_init - initialize FDT configuration struct
-
    The EEPROM FDT is used if the checksum is valid and if the system
    is not in recovery mode. Otherwise the default FDT is used.
  */
diff --git a/board/mvebu/common/cfg_eeprom.h b/board/mvebu/common/cfg_eeprom.h
index c729fb1..3d4eaac 100644
--- a/board/mvebu/common/cfg_eeprom.h
+++ b/board/mvebu/common/cfg_eeprom.h
@@ -63,7 +63,7 @@ struct eeprom_struct {
 struct config_types_info {
 	enum mv_config_type_id config_id;
 	char name[30];
-	u8 byte_num;
+	u32 byte_num;
 	u32 byte_cnt;
 };
 
@@ -83,7 +83,7 @@ struct hw_info_data_struct {
 	char value[HW_INFO_MAX_VALUE_LEN];
 };
 
-#define offset_in_eeprom(a)		((u8)(offsetof(struct eeprom_struct, a)))
+#define offset_in_eeprom(a)		((u32)(offsetof(struct eeprom_struct, a)))
 #define get_default_fdt_config_id(boardid)	mapping_default_fdt[boardid & (BOARD_ID_INDEX_MASK - 1)]
 #define boardid_is_valid(boardid)      (((boardid) >= MARVELL_BOARD_ID_BASE) && ((boardid) < MV_MAX_MARVELL_BOARD_ID))\
 					   ? true : false
-- 
1.9.1

