From dcbf2d9e66e6554a090935d4785d54228b894863 Mon Sep 17 00:00:00 2001
From: Nizan Zorea <nzorea@marvell.com>
Date: Tue, 9 Feb 2016 12:54:37 +0200
Subject: [PATCH 0880/1240] fix: fdt_config: mvebu: fixed boot failure if
 invalid FDT header in eeprom

- Invalid usage of fdt_config commands could lead to an invalid FDT
  file written to EEPROM, which will cause boot failures when
  trying to boot from it.

- Fixed by adding a check for FDT header when trying to read FDT file
  from EEPROM, and thus prevent boot failure:
  If the header is invalid, return without loading the FDT to RAM

Change-Id: I3f1a5194af46c191a3f24a8e2c21d5a747f87468
Signed-off-by: Nizan Zorea <nzorea@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27380
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Hanna Hawa <hannah@marvell.com>
---
 board/mvebu/common/cfg_eeprom.c | 14 ++++++++++++--
 board/mvebu/common/fdt_config.c | 13 +++++--------
 2 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/board/mvebu/common/cfg_eeprom.c b/board/mvebu/common/cfg_eeprom.c
index 001e7f7..8954766 100644
--- a/board/mvebu/common/cfg_eeprom.c
+++ b/board/mvebu/common/cfg_eeprom.c
@@ -104,13 +104,23 @@ bool cfg_eeprom_upload_fdt_from_flash(u8 fdt_config_id)
 bool cfg_eeprom_upload_fdt_from_eeprom(void)
 {
 	struct config_types_info config_info;
+	uint8_t fdt_blob_temp[MVEBU_FDT_SIZE];
 
 	/* read fdt from EEPROM */
 	if (!cfg_eeprom_get_config_type(MV_CONFIG_FDT_FILE, &config_info))
 		debug("ERROR: Could not find MV_CONFIG_FDT_FILE\n");
-
+	printf("Read FDT from EEPROM, please wait.\n");
 	i2c_read(BOARD_DEV_TWSI_INIT_EEPROM, config_info.byte_num, MULTI_FDT_EEPROM_ADDR_LEN,
-		 (uint8_t *)&board_config_val.fdt_blob, config_info.byte_cnt);
+		 (uint8_t *)&fdt_blob_temp, config_info.byte_cnt);
+
+	/* if didn't find FDT in EEPROM */
+	if (fdt_check_header((void *)fdt_blob_temp) != 0) {
+		printf("FDT in EEPROM is invalid and didn't loaded to RAM\n");
+		return false;
+	}
+	memcpy((void *)board_config_val.fdt_blob, fdt_blob_temp, MVEBU_FDT_SIZE);
+	printf("Loaded FDT from EEPROM successfully\n");
+	printf("To save the changes, please run the command fdt_config save.\n");
 
 	return true;
 }
diff --git a/board/mvebu/common/fdt_config.c b/board/mvebu/common/fdt_config.c
index bcdedcb..c74ec1c 100644
--- a/board/mvebu/common/fdt_config.c
+++ b/board/mvebu/common/fdt_config.c
@@ -82,11 +82,8 @@ void fdt_cfg_read_eeprom(void)
 	struct eeprom_struct *p_board_config;
 
 	p_board_config = cfg_eeprom_get_board_config();
-	if (cfg_eeprom_upload_fdt_from_eeprom()) {
+	if (cfg_eeprom_upload_fdt_from_eeprom())
 		set_working_fdt_addr(p_board_config->fdt_blob);
-		printf("Loaded FDT from EEPROM successfully\n");
-		printf("To save the changes, please run the command fdt_config save.\n");
-	}
 }
 
 /* fdt_cfg_read_flash - write the required FDT to local struct, if found fdt config id in the list.
@@ -128,10 +125,10 @@ int fdt_cfg_on(void)
 	}
 	printf("Do you want to read FDT from EEPROM? <y/N> ");
 	if (confirm_yesno()) {
-		if (cfg_eeprom_upload_fdt_from_eeprom())
-			printf("Load fdt from EEprom\n");
-	}
-	printf("To save the changes, please run the command fdt_config save.\n");
+		if (!cfg_eeprom_upload_fdt_from_eeprom())
+			return 1;
+	} else
+		printf("To save the changes, please run the command fdt_config save.\n");
 	return 0;
 }
 
-- 
1.9.1

