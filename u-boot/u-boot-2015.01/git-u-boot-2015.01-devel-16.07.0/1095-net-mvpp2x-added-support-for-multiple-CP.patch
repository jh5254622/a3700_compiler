From 979f48942568ae17f8ed79c144b141fe28bb873e Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Sun, 8 May 2016 18:02:08 +0300
Subject: [PATCH 1095/1240] net: mvpp2x: added support for multiple CP

- till now the driver was limited to single CP
-egiga number from interface number
-enable devices for all CP1 ports
-configure parser, classifier, bm for CP1 ports

Change-Id: Ibc88130a2cecd45fa7f8bcffafc4152e47fbd52d
Reviewed-on: http://vgitil04.il.marvell.com:8080/29606
Reviewed-by: Haim Boot <hayim@marvell.com>
Tested-by: Haim Boot <hayim@marvell.com>
---
 drivers/net/mv_pp2x.c | 42 ++++++++++++++++--------------------------
 1 file changed, 16 insertions(+), 26 deletions(-)

diff --git a/drivers/net/mv_pp2x.c b/drivers/net/mv_pp2x.c
index a47bc07..46d12a1 100644
--- a/drivers/net/mv_pp2x.c
+++ b/drivers/net/mv_pp2x.c
@@ -3798,18 +3798,11 @@ static int mv_pp2x_initialize_dev(bd_t *bis, struct mv_pp2x *pp2,
 	/* GOP Init  */
 	mvcpn110_mac_hw_init(pp2_port);
 
-	/*Skip device configuration for cp110-slave interfaces
-	* Ony GOP configuration requered for cp110-slave
-	*/
-	/*TODO: add device support for cp110-slave*/
-	if (param->interface >= CONFIG_MAX_PP2_PORT_NUM)
-		return 1;
-
 	/* interface name */
-	sprintf(dev->name, "egiga%d", pp2_port->id);
+	sprintf(dev->name, "egiga%d", param->interface);
 	/* interface MAC addr extract */
 	sprintf(enetvar, param->dev_num ? "eth%daddr" :
-			"ethaddr", pp2_port->id);
+			"ethaddr", param->interface);
 	enet_addr = getenv(enetvar);
 	mv_pp2x_mac_str_to_hex(enet_addr, (unsigned char *)(dev->enetaddr));
 
@@ -3882,25 +3875,21 @@ int mv_pp2x_initialize(bd_t *bis)
 		/* Tx Fifo Init */
 		mv_pp2x_tx_fifo_init(pp2[i]);
 
-		/*Configure BM, Parser and Cls only for cp110-master*/
-		/*TODO: add device support for cp110-slave*/
-		if (i == 0) {
-			/* Init BM */
-			mv_pp2x_bm_pool_init(pp2[i]);
+		/* Init BM */
+		mv_pp2x_bm_pool_init(pp2[i]);
 
-			/* Parser Init */
-			err = mv_pp2x_prs_default_init(pp2[i]);
-			if (err) {
-				printf("Parser init error\n");
-				return -1;
-			}
+		/* Parser Init */
+		err = mv_pp2x_prs_default_init(pp2[i]);
+		if (err) {
+			printf("Parser init error\n");
+			return -1;
+		}
 
-			/* Cls Init */
-			err = mv_pp2x_cls_default_init(pp2[i]);
-			if (err) {
-				printf("Cls init error\n");
-				return -1;
-			}
+		/* Cls Init */
+		err = mv_pp2x_cls_default_init(pp2[i]);
+		if (err) {
+			printf("Cls init error\n");
+			return -1;
 		}
 
 		/*Netcomplex configuration and device initialization*/
@@ -3910,6 +3899,7 @@ int mv_pp2x_initialize(bd_t *bis)
 					port_node, "port-id", 0);
 			if (!fdtdec_get_is_enabled(gd->fdt_blob, port_node)) {
 				printf("Skipping disabled port egiga%d\n", port_id);
+				interface++;
 				continue;
 			}
 			err = mv_pp2x_dts_port_param_set(port_node, &dev_param[port_id]);
-- 
1.9.1

