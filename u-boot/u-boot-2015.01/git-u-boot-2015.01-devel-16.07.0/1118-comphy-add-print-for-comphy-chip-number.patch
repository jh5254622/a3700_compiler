From b732d4b0a6d2f39bc88a4487df48f1226a893956 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Tue, 3 May 2016 10:01:49 +0300
Subject: [PATCH 1118/1240] comphy: add print for comphy chip number

- print chip number if more than single comphy chip (i.e 8040, dual-CP)
- print lane configuration only if configured
- fix spelling errors

Change-Id: I7bd497bc1cd2aed926639fd60e77aa49f098fbf5
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/29449
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Haim Boot <hayim@marvell.com>
---
 drivers/phy/comphy_core.c  | 9 +++++++--
 drivers/phy/comphy_cp110.c | 2 +-
 2 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/drivers/phy/comphy_core.c b/drivers/phy/comphy_core.c
index 8f762ea..ef73386 100644
--- a/drivers/phy/comphy_core.c
+++ b/drivers/phy/comphy_core.c
@@ -117,6 +117,8 @@ void comphy_print(struct chip_serdes_phy_config *ptr_chip_cfg, struct comphy_map
 	char *speed_str, *type_str;
 
 	for (lane = 0; lane < ptr_chip_cfg->comphy_lanes_count; lane++, comphy_map_data++) {
+		if (comphy_map_data->type == PHY_TYPE_UNCONNECTED)
+			continue;
 		speed_str = get_speed_string(comphy_map_data->speed);
 		type_str = get_type_string(comphy_map_data->type);
 		printf("Comphy-%d: %-13s %-10s\n", lane, type_str, speed_str);
@@ -138,13 +140,15 @@ u32 comphy_init(const void *blob)
 		return 1;
 
 	for (i = 0; i < chip_count ; i++) {
+		if (chip_count > 1)
+			printf("Comphy chip #%d:\n", i);
 		node = comphy_list[i];
 		if (node <= 0)
 			continue;
 
 		ptr_chip_cfg = get_chip_config(fdtdec_next_lookup(blob, node, COMPAT_MVEBU_COMPHY));
 		if (ptr_chip_cfg == NULL) {
-			error("comaptible of comphy-chip is wrong\n");
+			error("compatible of comphy-chip is wrong\n");
 			continue;
 		}
 		ptr_chip_cfg->comphy_lanes_count = fdtdec_get_int(blob, node, "max-lanes", 0);
@@ -154,9 +158,10 @@ u32 comphy_init(const void *blob)
 		}
 		ptr_chip_cfg->comphy_mux_bitcount = fdtdec_get_int(blob, node, "mux-bitcount", 0);
 		if (ptr_chip_cfg->comphy_mux_bitcount <= 0) {
-			error("comphy mux bitcount is wrong, skip PHY%d\n", i);
+			error("comphy mux bit count is wrong, skip PHY%d\n", i);
 			continue;
 		}
+
 		ptr_chip_cfg->comphy_base_addr = fdt_get_regs_offs(blob, node, "reg-comphy");
 		if (ptr_chip_cfg->comphy_base_addr == 0) {
 			error("comphy base address is NULL, skip PHY%d\n", i);
diff --git a/drivers/phy/comphy_cp110.c b/drivers/phy/comphy_cp110.c
index c3abc7c..5f07ab3 100644
--- a/drivers/phy/comphy_cp110.c
+++ b/drivers/phy/comphy_cp110.c
@@ -1300,7 +1300,7 @@ static void comphy_utmi_phy_init(u32 utmi_phy_count, struct utmi_phy_data *cp110
 			error("Failed to initialize UTMI PHY %d\n", i);
 			continue;
 		}
-		printf("UTMI PHY %d initizliazed to ", i);
+		printf("UTMI PHY %d initialized to ", i);
 		if (cp110_utmi_data[i].utmi_phy_port == UTMI_PHY_TO_USB_DEVICE0)
 			printf("USB Device\n");
 		else
-- 
1.9.1

