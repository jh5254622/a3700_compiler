From 7af2410f90d9f2dc3a2985177d492cf5afe5ccbd Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Sun, 8 May 2016 20:22:54 +0300
Subject: [PATCH 1146/1240] usb: cp110: configure current limit configuration
 for USB3 on Armada-70x0-DB

- The default current limit on Armada-70x0 board is 500mA, part of the
  disk-on-keys are not working with 500mA.
- This patch change the current limit to 900mA
- Armada-70x0-DB board has 2 USB current limit for both hosts (0/1), via I2C
  IO-Expander (I2C device at address 0x21, register 0, Bits 4 and 5)
- Implemented full flow of setting IO pin as output, enable current limit
  signal, and delay until settle.
- Currently implemented hard-coded - to be replaced with Device tree support.

Change-Id: Ib30c4fc21c672ab1ac35e42ba07174dc1d6812fc
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/29619
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Haim Boot <hayim@marvell.com>
---
 board/mvebu/armada8k/devel-board.c | 62 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 62 insertions(+)

diff --git a/board/mvebu/armada8k/devel-board.c b/board/mvebu/armada8k/devel-board.c
index 03caed5..3006866 100644
--- a/board/mvebu/armada8k/devel-board.c
+++ b/board/mvebu/armada8k/devel-board.c
@@ -20,12 +20,71 @@
 
 #include <common.h>
 #include <errno.h>
+#include <i2c.h>
 #include <asm/arch-mvebu/soc.h>
 #include <asm/arch-mvebu/mpp.h>
 #include <mvebu_chip_sar.h>
 #include "../common/devel-board.h"
 #include "../common/sar.h"
 
+/* IO expander I2C device - to be relocated to IO expander code */
+#define I2C_IO_EXP_ADDR	0x21
+#define I2C_IO_CFG_REG_0	0x6
+#define I2C_IO_DATA_OUT_REG_0	0x2
+#define I2C_IO_REG_0_USB_H0_OFF	0
+#define I2C_IO_REG_0_USB_H1_OFF	1
+#define I2C_IO_REG_0_USB_H0_CL	4
+#define I2C_IO_REG_0_USB_H1_CL	5
+
+void board_usb_current_limit_init(void)
+{
+#ifdef CONFIG_PALLADIUM
+	debug("USB CURRENT LIMIT change using IO-Expander is not supported in Palladium\n");
+#else /* CONFIG_PALLADIUM */
+/* Set USB Current Limit signals (via I2C IO expander/GPIO) as output and set
+** output value as enabled */
+/* This I2C IO expander configuration is board specific, only to DB-7040 board.
+ * (USB3_Host0 current limit: I2C device at address 0x21, Register 0, BIT 5)
+ * (USB3_Host1 current limit: I2C device at address 0x21, Register 0, BIT 6) */
+	int ret_read, ret_write , both_limit_pins;
+	unsigned char cfg_val[1], out_val[1];
+	const void *blob = gd->fdt_blob;
+
+	/* Make sure board is supported (currently only Armada-70x0-DB is supported) */
+	if (fdt_node_check_compatible(blob, 0, "marvell,armada-70x0-db") != 0) {
+		debug("Missing USB VBUS power configuration for current board.\n");
+		return;
+	}
+
+	/* initialize I2C */
+	init_func_i2c();
+
+	both_limit_pins = (1 << I2C_IO_REG_0_USB_H0_CL) | (1 << I2C_IO_REG_0_USB_H1_CL);
+
+	/* Read configuration (direction) and set Current limit pin as output (reset pin = output) */
+	ret_read = i2c_read(I2C_IO_EXP_ADDR, I2C_IO_CFG_REG_0, sizeof(unsigned char), cfg_val, sizeof(cfg_val));
+	cfg_val[0] &= ~both_limit_pins;
+	ret_write = i2c_write(I2C_IO_EXP_ADDR, I2C_IO_CFG_REG_0, sizeof(unsigned char),
+			cfg_val, sizeof(cfg_val));
+	if (ret_read || ret_write) {
+		error("failed to set USB Current Limit configuration on I2C IO expander\n");
+		return;
+	}
+
+	/* Read Current limit output value, and enable it */
+	ret_read = i2c_read(I2C_IO_EXP_ADDR, I2C_IO_DATA_OUT_REG_0, sizeof(unsigned char), out_val, sizeof(out_val));
+	out_val[0] |= both_limit_pins;
+	ret_write = i2c_write(I2C_IO_EXP_ADDR, I2C_IO_DATA_OUT_REG_0, sizeof(unsigned char), out_val, sizeof(out_val));
+	if (ret_write) {
+		error("failed to raise USB Current limit power on I2C IO expander\n");
+		return;
+	}
+
+	mdelay(500);/* required delay to let output value settle */
+
+#endif /* !CONFIG_PALLADIUM */
+}
+
 int mvebu_devel_board_init(void)
 {
 #ifdef CONFIG_MVEBU_MPP_BUS
@@ -49,6 +108,9 @@ int mvebu_devel_board_init(void)
 	}
 #endif /* CONFIG_MVEBU_MPP_BUS */
 
+	/* Set USB Current Limit signals as output and set output value as enabled */
+	board_usb_current_limit_init();
+
 	return 0;
 }
 
-- 
1.9.1

