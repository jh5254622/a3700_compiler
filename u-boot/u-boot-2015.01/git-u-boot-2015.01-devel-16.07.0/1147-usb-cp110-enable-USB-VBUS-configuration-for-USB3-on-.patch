From 107b24641686296699366327b065098dc9326772 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 28 Jan 2016 18:44:10 +0200
Subject: [PATCH 1147/1240] usb: cp110: enable USB VBUS configuration for USB3
 on Armada-70x0-DB

- Added USB VBUS API for CP110, Armada-70x0-DB board.
- Armada-70x0-DB board has 2 VBUS control for both Hosts,
  via I2C IO expander (I2C device at address 0x21, Register 0, BITs 0 & 1).
- Implemented full flow of setting IO pin as output, lower VBUS signal,
  delay untill signal settle, and enable VBUS power.

- Currently implemented hard-coded - to be replaced with Device tree support.
- Add weak function for customer compilation to avoid error compilation

Change-Id: I6c1494b9f5d2de3f1307bc262ffefd3f9e450d8f
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27075
Reviewed-by: Haim Boot <hayim@marvell.com>
Tested-by: Haim Boot <hayim@marvell.com>
---
 arch/arm/cpu/armv8/armada8k/soc.c  |  8 ----
 board/mvebu/armada8k/devel-board.c | 81 ++++++++++++++++++++++++++++++++++++++
 drivers/usb/host/xhci-mvebu.c      |  6 +++
 3 files changed, 87 insertions(+), 8 deletions(-)

diff --git a/arch/arm/cpu/armv8/armada8k/soc.c b/arch/arm/cpu/armv8/armada8k/soc.c
index 8b00f7a..f8fbdf6 100644
--- a/arch/arm/cpu/armv8/armada8k/soc.c
+++ b/arch/arm/cpu/armv8/armada8k/soc.c
@@ -170,14 +170,6 @@ void print_soc_specific_info(void)
 	       llc_excl_mode ? " (Exclusive Mode)" : "");
 }
 
-#ifdef CONFIG_USB_XHCI
-void board_usb_vbus_init(void)
-{
-	/* TBD - implement VBUS cycle for here*/
-}
-#endif
-
-
 #ifdef CONFIG_XENON_MMC
 void mmc_soc_init(void)
 {
diff --git a/board/mvebu/armada8k/devel-board.c b/board/mvebu/armada8k/devel-board.c
index 3006866..7745190 100644
--- a/board/mvebu/armada8k/devel-board.c
+++ b/board/mvebu/armada8k/devel-board.c
@@ -85,6 +85,85 @@ void board_usb_current_limit_init(void)
 #endif /* !CONFIG_PALLADIUM */
 }
 
+void board_usb_vbus_early_init(void)
+{
+#ifdef CONFIG_PALLADIUM
+	debug("VBUS change using IO-Expander is not supported in Palladium\n");
+#else /* CONFIG_PALLADIUM */
+/* Set USB VBUS signals (via I2C IO expander/GPIO) as output and set output value as disabled */
+/* This I2C IO expander configuration is board specific, only to DB-7040 board.
+ * (USB3_Host0 Vbus: I2C device at address 0x21, Register 0, BIT 0)
+ * (USB3_Host0 Vbus: I2C device at address 0x21, Register 0, BIT 1) */
+	int ret_read, ret_write , both_vbus_pins;
+	unsigned char cfg_val[1], out_val[1];
+	const void *blob = gd->fdt_blob;
+
+	/* Make sure board is supported (currently only Armada-70x0-DB is supported) */
+	if (fdt_node_check_compatible(blob, 0, "marvell,armada-70x0-db") != 0) {
+		debug("Missing USB VBUS power configuration for current board.\n");
+		return;
+	}
+
+	/* initialize I2C */
+	init_func_i2c();
+
+	both_vbus_pins = (1 << I2C_IO_REG_0_USB_H0_OFF) | (1 << I2C_IO_REG_0_USB_H1_OFF);
+
+	/* Read configuration (direction) and set VBUS pin as output (reset pin = output) */
+	ret_read = i2c_read(I2C_IO_EXP_ADDR, I2C_IO_CFG_REG_0, sizeof(unsigned char), cfg_val, sizeof(cfg_val));
+	cfg_val[0] &= ~both_vbus_pins;
+	ret_write = i2c_write(I2C_IO_EXP_ADDR, I2C_IO_CFG_REG_0, sizeof(unsigned char),
+			cfg_val, sizeof(cfg_val));
+	if (ret_read || ret_write) {
+		error("failed to set USB VBUS configuration on I2C IO expander\n");
+		return;
+	}
+
+	/* Read VBUS output value, and disable it */
+	ret_read = i2c_read(I2C_IO_EXP_ADDR, I2C_IO_DATA_OUT_REG_0, sizeof(unsigned char), out_val, sizeof(out_val));
+	out_val[0] &= ~both_vbus_pins;
+
+	ret_write = i2c_write(I2C_IO_EXP_ADDR, I2C_IO_DATA_OUT_REG_0, sizeof(unsigned char), out_val, sizeof(out_val));
+	if (ret_read || ret_write) {
+		error("failed to lower USB VBUS power on I2C IO expander\n");
+		return;
+	}
+
+	mdelay(500); /* required delay to let output value settle */
+#endif /* !CONFIG_PALLADIUM */
+}
+
+#ifdef CONFIG_USB_XHCI
+void board_usb_vbus_init(void)
+{
+#ifdef CONFIG_PALLADIUM
+	debug("VBUS change using IO-Expander is not supported in Palladium\n");
+#else /* CONFIG_PALLADIUM */
+/* Set USB VBUS signals (via I2C IO expander/GPIO) as output and set output value as enabled */
+/* This I2C IO expander configuration is board specific, only to DB-7040 board.
+ * (USB3_Host0 Vbus: I2C device at address 0x21, Register 0, BIT 0)
+ * (USB3_Host0 Vbus: I2C device at address 0x21, Register 0, BIT 1) */
+	int ret_write , both_vbus_pins;
+	unsigned char out_val[1];
+
+	both_vbus_pins = (1 << I2C_IO_REG_0_USB_H0_OFF) | (1 << I2C_IO_REG_0_USB_H1_OFF);
+	/* Read VBUS output value, and disable it */
+	i2c_read(I2C_IO_EXP_ADDR, I2C_IO_DATA_OUT_REG_0, sizeof(unsigned char), out_val, sizeof(out_val));
+	out_val[0] &= ~both_vbus_pins;
+
+	/* Enable VBUS power: Set output value of VBUS pin as enabled */
+	out_val[0] |= both_vbus_pins;
+	ret_write = i2c_write(I2C_IO_EXP_ADDR, I2C_IO_DATA_OUT_REG_0, sizeof(unsigned char), out_val, sizeof(out_val));
+	if (ret_write) {
+		error("failed to raise USB VBUS power on I2C IO expander\n");
+		return;
+	}
+
+	mdelay(500);/* required delay to let output value settle */
+#endif /* !CONFIG_PALLADIUM */
+}
+#endif /* CONFIG_USB_XHCI */
+
 int mvebu_devel_board_init(void)
 {
 #ifdef CONFIG_MVEBU_MPP_BUS
@@ -110,6 +189,8 @@ int mvebu_devel_board_init(void)
 
 	/* Set USB Current Limit signals as output and set output value as enabled */
 	board_usb_current_limit_init();
+	/* Set USB VBUS signals as output and set output value as disabled */
+	board_usb_vbus_early_init();
 
 	return 0;
 }
diff --git a/drivers/usb/host/xhci-mvebu.c b/drivers/usb/host/xhci-mvebu.c
index a0fc84b..11e09c3 100644
--- a/drivers/usb/host/xhci-mvebu.c
+++ b/drivers/usb/host/xhci-mvebu.c
@@ -26,6 +26,12 @@
 #endif
 
 #ifdef CONFIG_USB_XHCI
+void __board_usb_vbus_init(void)
+{
+	printf("%s is weak function, need to implement it if need to change VBUS\n", __func__);
+}
+void board_usb_vbus_init(void) __attribute__((weak, alias("__board_usb_vbus_init")));
+
 int xhci_hcd_init(int index, struct xhci_hccr **hccr, struct xhci_hcor **hcor)
 {
 	int node_list[CONFIG_SYS_USB_XHCI_MAX_ROOT_PORTS], node;
-- 
1.9.1

