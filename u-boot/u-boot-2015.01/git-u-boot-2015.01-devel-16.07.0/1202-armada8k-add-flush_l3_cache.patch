From cc58fb3e92efb6bab67ec73cc0cf15bfa2cd0739 Mon Sep 17 00:00:00 2001
From: Anton <antone@marvell.com>
Date: Tue, 31 May 2016 15:11:27 -0700
Subject: [PATCH 1202/1240] armada8k: add flush_l3_cache

Added flush_l3_cache() invoked from flush_dcache_all() during
cleanup_before_linux().
Without this data written into caches before SCTLR[D] is set to 0
is not flushed to memory and does not hit when read,
which leads to immediate crash when returning from dcache_disable().

cache_v8 only calls a weakly aliased flush_l3_cache
in flush_dcache_all(), while invalidate_dcache_all() does not call
the appropriate l3 function.
While flush_ has "clean" semantics, not "clean-invalidate",
we have to make sure no valid LLC contents after this, otherwise
when caches are re-enabled by kernel, stale LLC content may eclipse
the more up-to-date data written after u-boot disabled caches.
Therefore, flush-invalidate all LLC using CIW register.

Change-Id: I8f20df5b1eb094ba321121ed5fa97e510330e42b
Signed-off-by: Anton <antone@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30240
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
---
 arch/arm/cpu/armv8/armada8k/cache_llc.c | 23 ++++++++++++++++++++++-
 1 file changed, 22 insertions(+), 1 deletion(-)

diff --git a/arch/arm/cpu/armv8/armada8k/cache_llc.c b/arch/arm/cpu/armv8/armada8k/cache_llc.c
index 43ac185..00f7bae 100644
--- a/arch/arm/cpu/armv8/armada8k/cache_llc.c
+++ b/arch/arm/cpu/armv8/armada8k/cache_llc.c
@@ -21,10 +21,13 @@
 #include <asm/arch-armada8k/regs-base.h>
 
 #define LLC_CTRL                       0x100
-
 #define LLC_CTRL_EN	                1
 #define LLC_EXCLUSIVE_EN		0x100
 
+#define LLC_MNT_CW			0x7bc /* Clean by Way */
+#define LLC_MNT_CIW			0x7fc /* Clean-invalidate by Way */
+#define LLC_SYNC			0x700
+
 /*
 ** Get LLC status and mode.
 ** Returns 1 if LLC is enabled.
@@ -46,4 +49,22 @@ int llc_mode_get(int *excl_mode)
 	return ret;
 }
 
+/*
+ * flush_l3_cache: cache_v8 only calls a weakly aliased flush_l3_cache
+ * in flush_dcache_all(), while invalidate_dcache_all() does not call
+ * the appropriate l3 function.
+ * While flush_ has "clean" semantics, not "clean-invalidate",
+ * we have to make sure no valid LLC contents after this, otherwise
+ * when caches are re-enabled by kernel, stale LLC content may eclipse
+ * the more up-to-date data written after u-boot disabled caches.
+ * Therefore, flush-invalidate all LLC using CIW register.
+ */
+void flush_l3_cache(void)
+{
+	if (llc_mode_get(0)) {
+		writel(0xffffffff, MVEBU_LLC_BASE + LLC_MNT_CIW);
+		writel(1, MVEBU_LLC_BASE + LLC_SYNC);
+		asm volatile("dsb sy");
+	}
+}
 
-- 
1.9.1

