From 6111797bdb4b2460ef62db417693b79ebce4a3f7 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Tue, 21 Jun 2016 16:50:58 +0300
Subject: [PATCH 1207/1240] usb: a3700: use USB32 Hard ID configuration for
 Device mode

USB32 block support both Host and Device modes.
Device/Host IP's are muxed according to ID pin,
which can be auto-detected by HW or SW soft controlled.
(SoC default settings are to use Hard ID detection)

If Device tree configured for USB Device mode in comphy,
this patch skips the Soft ID settings for Host mode.
(Device mode rely on proper HW ID connectivity on board)

- added type argument distinction for comphy_usb3_power_up routine
  (Host/Device)

Change-Id: Ic3a5c245d10e5d890b5d3611617ecba191885432
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30629
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
---
 drivers/phy/comphy_a3700.c | 21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

diff --git a/drivers/phy/comphy_a3700.c b/drivers/phy/comphy_a3700.c
index 4a0ad2a..c12aefc 100644
--- a/drivers/phy/comphy_a3700.c
+++ b/drivers/phy/comphy_a3700.c
@@ -306,7 +306,7 @@ static int comphy_sata_power_up(void)
   *
   * return: 1 if PLL locked (OK), 0 otherwise (FAIL)
  ***************************************************************************************************/
-static int comphy_usb3_power_up(u32 speed, u32 invert)
+static int comphy_usb3_power_up(u32 type, u32 speed, u32 invert)
 {
 	int	ret;
 
@@ -410,13 +410,16 @@ static int comphy_usb3_power_up(u32 speed, u32 invert)
 	if (ret == 0)
 		error("Failed to lock USB3 PLL\n");
 
-	/* set   BIT0: set ID_MODE of Host/Device = "Soft ID" (BIT1)
-	 * clear BIT1: set SOFT_ID = Host
-	 * set   BIT4: set INT_MODE = ID. Interrupt Mode: enable interrupt by ID
-	 *             instead of using both interrupts of HOST and Device ORed simultaneously
-	 *             INT_MODE=ID in order to avoid unexpected behaviour or both interrupts together */
-	reg_set((void __iomem *)USB32_CTRL_BASE, usb32_ctrl_id_mode | usb32_ctrl_int_mode,
-			usb32_ctrl_id_mode | usb32_ctrl_soft_id | usb32_ctrl_int_mode);
+	/* Set Soft ID for Host mode (Device mode works with Hard ID detection) */
+	if (type == PHY_TYPE_USB3_HOST0) {
+		/* set   BIT0: set ID_MODE of Host/Device = "Soft ID" (BIT1)
+		 * clear BIT1: set SOFT_ID = Host
+		 * set   BIT4: set INT_MODE = ID. Interrupt Mode: enable interrupt by ID
+		 *             instead of using both interrupts of HOST and Device ORed simultaneously
+		 *             INT_MODE=ID in order to avoid unexpected behaviour or both interrupts together */
+		reg_set((void __iomem *)USB32_CTRL_BASE, usb32_ctrl_id_mode | usb32_ctrl_int_mode,
+				usb32_ctrl_id_mode | usb32_ctrl_soft_id | usb32_ctrl_int_mode);
+	}
 
 	debug_exit();
 
@@ -848,7 +851,7 @@ int comphy_a3700_init(struct chip_serdes_phy_config *ptr_chip_cfg, struct comphy
 
 		case PHY_TYPE_USB3_HOST0:
 		case PHY_TYPE_USB3_DEVICE:
-			ret = comphy_usb3_power_up(ptr_comphy_map->speed, ptr_comphy_map->invert);
+			ret = comphy_usb3_power_up(ptr_comphy_map->type, ptr_comphy_map->speed, ptr_comphy_map->invert);
 			break;
 
 		case PHY_TYPE_SGMII0:
-- 
1.9.1

