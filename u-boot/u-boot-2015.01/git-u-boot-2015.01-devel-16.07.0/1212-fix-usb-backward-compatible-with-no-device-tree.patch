From 36cc8c063fb9532d26d91e33ffaa2d423609505c Mon Sep 17 00:00:00 2001
From: Wilson Ding <dingwei@marvell.com>
Date: Thu, 23 Jun 2016 13:46:13 +0800
Subject: [PATCH 1212/1240] fix: usb: backward compatible with no device tree

- Backward compatible to the legacy devices which may not support
  device tree:
  Replace usb_device_tree_init() by board_usb_get_enabled_port_count()
  o If device tree is enabled, this function will scan the fdt to get
  the port number enabled in fdt.
  o If device tree is disabled, this function will return the max usb
  controller number defined for the platform.
- Only execute the fdt parsing at the first time

Change-Id: Ie4fba0b01b61b331ed09cdd63db48b2074610cb3
Signed-off-by: Wilson Ding <dingwei@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30685
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
---
 common/usb.c                  | 17 ++++++++++++++---
 drivers/usb/host/xhci-mvebu.c | 17 ++++++++++++-----
 include/usb.h                 |  3 ++-
 3 files changed, 28 insertions(+), 9 deletions(-)

diff --git a/common/usb.c b/common/usb.c
index 9f3badd..406b2dd 100644
--- a/common/usb.c
+++ b/common/usb.c
@@ -51,6 +51,16 @@ char usb_started; /* flag for the started/stopped USB status */
 #define CONFIG_USB_MAX_CONTROLLER_COUNT 1
 #endif
 
+/* board_usb_get_enabled_port_count() is defined only when
+   device tree is enabled. To be backward compatible to the
+   none device-tree support platforms, it returns maximum
+   usb port number of the device. */
+int usb_get_max_controller_count(void)
+{
+	return CONFIG_USB_MAX_CONTROLLER_COUNT;
+}
+int board_usb_get_enabled_port_count(void) __attribute__((weak, alias("usb_get_max_controller_count")));
+
 /***************************************************************************
  * Init USB Device
  */
@@ -71,11 +81,12 @@ int usb_init(void)
 		usb_dev[i].devnum = -1;
 	}
 
-	/* Parse device tree mapping for usb nodes, and initialize only enabled ports */
-	enable_port_count = usb_device_tree_init();
+	/* if device tree is supported, start only the ports enabled in fdt.
+	   if not, try to start all the usb ports supported by the device. */
+	enable_port_count = board_usb_get_enabled_port_count();
 
 	/* init low_level USB */
-	for (i = 0; i < enable_port_count ; i++) {
+	for (i = 0; i < enable_port_count; i++) {
 		/* init low_level USB */
 		printf("USB%d:   ", i);
 		ret = usb_lowlevel_init(i, USB_INIT_HOST, &ctrl);
diff --git a/drivers/usb/host/xhci-mvebu.c b/drivers/usb/host/xhci-mvebu.c
index d0357af..a21e739 100644
--- a/drivers/usb/host/xhci-mvebu.c
+++ b/drivers/usb/host/xhci-mvebu.c
@@ -48,14 +48,20 @@ static void usb_vbus_init(int node)
 }
 
 /* Device tree global data scanned at 1st init for usb3 nodes */
-int node_list[CONFIG_SYS_USB_XHCI_MAX_ROOT_PORTS], count = 0;
+int node_list[CONFIG_SYS_USB_XHCI_MAX_ROOT_PORTS];
 
+#ifdef CONFIG_OF_CONTROL
 /* Parse and save enabled device tree usb3 nodes, and return enabled node count */
-int usb_device_tree_init(void)
+int board_usb_get_enabled_port_count(void)
 {
-	/* - Scan device tree usb3 nodes once, and save relevant nodes in static node_list */
-	count = fdtdec_find_aliases_for_id(gd->fdt_blob, "usb3",
-			COMPAT_MVEBU_USB3, node_list, CONFIG_SYS_USB_XHCI_MAX_ROOT_PORTS);
+	static int count = -1;
+
+	/* Scan the device tree once only */
+	if (count < 0) {
+		/* Scan device tree usb3 nodes once, and save relevant nodes in static node_list */
+		count = fdtdec_find_aliases_for_id(gd->fdt_blob, "usb3",
+				COMPAT_MVEBU_USB3, node_list, CONFIG_SYS_USB_XHCI_MAX_ROOT_PORTS);
+	}
 
 	if (count == 0)
 		printf("%s: 'usb3' is disabled in Device Tree\n", __func__);
@@ -63,6 +69,7 @@ int usb_device_tree_init(void)
 	/* Return enabled port count */
 	return count;
 }
+#endif
 
 bool vbus_initialized = 0;
 int xhci_hcd_init(int index, struct xhci_hccr **hccr, struct xhci_hcor **hcor)
diff --git a/include/usb.h b/include/usb.h
index 79bd764..8900f3d 100644
--- a/include/usb.h
+++ b/include/usb.h
@@ -159,7 +159,6 @@ enum usb_init_type {
 
 int usb_lowlevel_init(int index, enum usb_init_type init, void **controller);
 int usb_lowlevel_stop(int index);
-int usb_device_tree_init(void);
 
 int submit_bulk_msg(struct usb_device *dev, unsigned long pipe,
 			void *buffer, int transfer_len);
@@ -210,6 +209,8 @@ int board_usb_init(int index, enum usb_init_type init);
  */
 int board_usb_cleanup(int index, enum usb_init_type init);
 
+int board_usb_get_enabled_port_count(void);
+
 #ifdef CONFIG_USB_STORAGE
 
 #define USB_MAX_STOR_DEV 5
-- 
1.9.1

